VERSION 1

NODE endpoint_errors_0
SQL >
    SELECT
        start_datetime,
        span_id AS request_id,
        assumeNotNull(workspace) AS user_id,
        JSONExtractString(tags, 'pipe_id') AS pipe_id,
        CASE
            -- New span
            WHEN JSONHas(tags, 'pipe_name')
            THEN JSONExtractString(tags, 'pipe_name')
            -- Legacy span (kept to avoid data migrations and so on)
            WHEN JSONHas(tags, 'pipe_id')
            THEN extract(assumeNotNull(path(url)), '/v0/pipes/(.*)[.]')
            -- last resort
            ELSE
                'query_api'
        END AS pipe_name,
        queryString(cutURLParameter(url, 'token')) AS params,
        cutURLParameter(url, 'token') AS url,
        status_code,
        error,
        if(JSONHas(tags, 'resource_tags'), JSONExtract(tags, 'resource_tags', 'Array(String)'), []) AS resource_tags
    FROM spans
    WHERE
        isNotNull(workspace)
        AND (operation_name = 'APIPipeDataHandler')
        AND ((isNotNull(error) AND notEmpty(error)) OR (status_code >= 400))
    ORDER BY start_datetime DESC

TYPE MATERIALIZED
DATASOURCE endpoint_errors_ds
