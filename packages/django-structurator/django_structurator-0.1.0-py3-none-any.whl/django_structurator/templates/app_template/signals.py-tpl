from django.db.models.signals import (
    pre_save,
    post_save,
    pre_delete,
    post_delete,
)
from django.dispatch import receiver
from django.contrib.auth.signals import user_logged_in, user_logged_out, user_login_failed
from .models import *


# Model Signals

# @receiver(pre_save, sender = MyModel)
# def pre_save_handler(sender, instance, **kwargs):
#     """
#     Signal triggered before a model instance is saved.
# 
#     Args:
#         sender (Model): The model class.
#         instance (Model instance): The instance being saved.
#         kwargs: Additional keyword arguments.
#     """
#     pass


# @receiver(post_save, sender = MyModel)
# def post_save_handler(sender, instance, created, **kwargs):
#     """
#     Signal triggered after a model instance is saved.
# 
#     Args:
#         sender (Model): The model class.
#         instance (Model instance): The instance being saved.
#         created (bool): True if a new instance was created, False if updated.
#         kwargs: Additional keyword arguments.
#     """
#     pass


# @receiver(pre_delete, sender = MyModel)
# def pre_delete_handler(sender, instance, **kwargs):
#     """
#     Signal triggered before a model instance is deleted.
# 
#     Args:
#         sender (Model): The model class.
#         instance (Model instance): The instance being deleted.
#         kwargs: Additional keyword arguments.
#     """
#     pass


# @receiver(post_delete, sender = MyModel)
# def post_delete_handler(sender, instance, **kwargs):
#     """
#     Signal triggered after a model instance is deleted.
# 
#     Args:
#         sender (Model): The model class.
#         instance (Model instance): The instance that was deleted.
#         kwargs: Additional keyword arguments.
#     """
#     pass


# Authentication Signals
# @receiver(user_logged_in)
# def user_logged_in_handler(sender, request, user, **kwargs):
#     """
#     Signal triggered when a user logs in.
# 
#     Args:
#         sender: The User model class.
#         request (HttpRequest): The request object.
#         user (User): The user instance.
#         kwargs: Additional keyword arguments.
#     """
#     pass


# @receiver(user_logged_out)
# def user_logged_out_handler(sender, request, user, **kwargs):
#     """
#     Signal triggered when a user logs out.
# 
#     Args:
#         sender: The User model class.
#         request (HttpRequest): The request object.
#         user (User): The user instance (may be None if session expired).
#         kwargs: Additional keyword arguments.
#     """
#     pass


# @receiver(user_login_failed)
# def user_login_failed_handler(sender, credentials, request, **kwargs):
#     """
#     Signal triggered when a user login attempt fails.
# 
#     Args:
#         sender: The User model class.
#         credentials (dict): The login credentials provided.
#         request (HttpRequest): The request object.
#         kwargs: Additional keyword arguments.
#     """
#     pass
