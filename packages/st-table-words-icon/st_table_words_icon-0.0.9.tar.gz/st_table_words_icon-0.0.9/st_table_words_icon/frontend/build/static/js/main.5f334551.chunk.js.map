{"version":3,"sources":["main.tsx","index.tsx"],"names":["withStreamlitConnection","_ref","words","args","useEffect","handleWordClick","e","target","tagName","toLowerCase","classList","contains","word","getAttribute","Streamlit","setComponentValue","setFrameHeight","document","documentElement","scrollHeight","addEventListener","removeEventListener","_jsx","className","style","height","overflowY","children","_jsxs","scope","map","index","color","fontSize","verticalAlign","cursor","ReactDOM","render","React","StrictMode","App","getElementById"],"mappings":"oLAkDeA,eA9CK,SAAHC,GAAkB,IACzBC,EADiBD,EAAJE,KACbD,MAuBR,OArBAE,qBAAU,WACR,IAAMC,EAAkB,SAACC,GACnB,GAAuC,SAAnCA,EAAEC,OAAOC,QAAQC,eAA4BH,EAAEC,OAAOG,UAAUC,SAAS,kBAAmB,CAC9F,IAAMC,EAAON,EAAEC,OAAOM,aAAa,aAC/BD,GACFE,IAAUC,kBAAkBH,EAEhC,CACN,EAOA,OALAE,IAAUE,eAAeC,SAASC,gBAAgBC,cAGhDF,SAASG,iBAAiB,QAASf,GAE9B,WAEHY,SAASI,oBAAoB,QAAShB,EAC1C,CACF,GAAG,IAGHiB,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAACC,OAAQ,QAASC,UAAW,UAAUC,SAChEC,eAAA,SAAOL,UAAU,yBAAwBI,SAAA,CACrCL,cAAA,SAAAK,SACEL,cAAA,MAAAK,SACEL,cAAA,MAAIO,MAAM,MAAKF,SAAC,YAGpBL,cAAA,SAAAK,SACHzB,EAAM4B,KAAI,SAAClB,EAAyKmB,GAAmC,OACtNT,cAAA,MAAAK,SACIC,eAAA,MAAAD,SAAA,CACKf,EAAK,IAACU,cAAA,QAAM,YAAWV,EAAMW,UAAU,iBAAiBC,MAAO,CAACQ,MAAO,UAAUC,SAAU,OAAOC,cAAe,cAAeC,OAAQ,WAAWR,SAAC,mBAFpJI,EAIJ,UAMb,IC5CAK,IAASC,OACPf,cAACgB,IAAMC,WAAU,CAAAZ,SACfL,cAACkB,EAAG,MAENvB,SAASwB,eAAe,Q","file":"static/js/main.5f334551.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\n\n// @ts-ignore\nconst MyComponent = ({ args }) => {\n  const { words } = args;\n\n  useEffect(() => {\n    const handleWordClick = (e: { target: { tagName: string; classList: { contains: (arg0: string) => any; }; getAttribute: (arg0: string) => any; }; }) => {\n          if (e.target.tagName.toLowerCase() === 'span' && e.target.classList.contains('material-icons')) {\n            const word = e.target.getAttribute(\"data-word\");\n            if (word) {\n              Streamlit.setComponentValue(word);\n            }\n          }\n    }\n\n    Streamlit.setFrameHeight(document.documentElement.scrollHeight);\n\n    // @ts-ignore\n      document.addEventListener(\"click\", handleWordClick);\n\n    return () => {\n      // @ts-ignore\n        document.removeEventListener(\"click\", handleWordClick);\n    };\n  }, []);\n\n  return (\n  <div className=\"card\" style={{height: \"600px\", overflowY: \"scroll\"}}>\n      <table className=\"table table-borderless\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Nom</th>\n            </tr>\n          </thead>\n          <tbody>\n      {words.map((word: string | number | boolean | {} | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactNodeArray | React.ReactPortal | null | undefined, index: React.Key | null | undefined) => (\n        <tr key={index}>\n            <td>\n                {word} <span data-word={word} className=\"material-icons\" style={{color: \"#037afb\",fontSize: \"18px\",verticalAlign: \"text-bottom\", cursor: \"pointer\"}}>visibility</span>\n            </td>\n        </tr>\n      ))}\n        </tbody>\n    </table>\n  </div>\n  );\n};\n\nexport default withStreamlitConnection(MyComponent);\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./main\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}