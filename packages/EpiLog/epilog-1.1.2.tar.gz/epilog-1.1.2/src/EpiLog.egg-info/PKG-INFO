Metadata-Version: 2.1
Name: EpiLog
Version: 1.1.2
Summary: Simple No-Frills Logging Manager
Author-email: Jason C Del Rio <spillthetea917@gmail.com>
Maintainer-email: Jason C Del Rio <spillthetea917@gmail.com>
License: MIT License
        
        Copyright (c) 2023 Spill-Tea
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: homepage, https://github.com/Spill-Tea/EpiLog
Project-URL: issues, https://github.com/Spill-Tea/EpiLog/issues
Keywords: logging,benchmark
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: EpiLog[doc,lint,test,type]; extra == "dev"
Requires-Dist: tox; extra == "dev"
Provides-Extra: doc
Requires-Dist: pdoc; extra == "doc"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: coverage; extra == "test"
Requires-Dist: pytest-xdist; extra == "test"
Provides-Extra: lint
Requires-Dist: pylint; extra == "lint"
Requires-Dist: ruff; extra == "lint"
Provides-Extra: type
Requires-Dist: mypy; extra == "type"

<!-- omit in toc -->
# EpiLog
Simple Logging Manager

<!-- omit in toc -->
## Table of Contents
- [Installation](#installation)
- [Examples](#examples)
- [License](#license)

# Installation
Install from [pypi](https://pypi.org/project/EpiLog/) using pip.

```bash
pip install EpiLog
```

or directly from github, if you want the latest dev

```bash
pip install git+https://github.com/Spill-Tea/EpiLog@main
```

# Examples

Creating a logging manager and dispatch a logger.
```python
import logging
from EpiLog import EpiLog

formatter = logging.Formatter("%(asctime)s | %(levelname)s | %(message)s")
manager: EpiLog = EpiLog(logging.DEBUG, formatter=formatter)
log: logging.Logger = manager.get_logger(__name__)
log.debug("We made a logger!")

# And easily remove the logger
manager.remove(log)
assert __name__ not in manager
```


Benchmarking real time duration to accomplish a function,
or a series of tasks within a facile context manager.

```python
import logging
from EpiLog import Benchmark

message: str = "Long Task Complete"
level: int = logging.INFO  # level to emit message
with Benchmark(log, message, level):
    perform_long_task(...)

```
Note, that if the level used to emit the message is below
your logger level, then no message will be emitted.

# License

[MIT](LICENSE)
