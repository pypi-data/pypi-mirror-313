{"version":3,"file":"2424.6f13f59f4bc472c3d07d.js?v=6f13f59f4bc472c3d07d","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACO;;;ACJuC;AAC9C;AACA;AACA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBuF;AACT;AAC9E;AACA,yBAAyB,mDAAmD;AAC5E;AACA;AACO,kDAAkD,wBAAI;AAC7D;AACA;AACA,gBAAgB,0CAA0C;AAC1D;AACA,iBAAiB,qCAAqC,EAAE,mCAAmC,EAAE;AAC7F,cAAc,oCAAoC;AAClD,yBAAyB,mEAAmE;AAC5F,yBAAyB,gBAAgB;AACzC,yBAAyB,gBAAgB;AACzC,oBAAoB,iCAAiC;AACrD,qBAAqB,gCAAgC;AACrD,UAAU,4BAAQ;AAClB;AACA,YAAY,oCAAQ;AACpB,CAAC;AACD;AACA;AACA;AACA,kBAAkB,IAAI,+CAA+C,wBAAI;AACzE;AACA;AACA;AACA;AACA,sCAAsC,qDAAqD;AAC3F,8BAA8B,kBAAG;AACjC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kBAAkB,uCAAiB;AACnC;AACA,kBAAkB,qCAAe;AACjC;AACA;AACA,UAAU,IAAI;AACd;AACA,+CAA+C,wBAAI;AACnD;AACA,wCAAwC,0BAAO,UAAU;AACzD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC,iBAAiB,eAAe;AAChC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+BAAoB;AAChC;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAAoB;AAC1C,QAAQ,+BAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5EA;AACA;AACA;AAC0D;AACgF;AAC7E;AACmZ;AAC/X;AACjF;AACA;AACA;AACA;AACO,iCAAiC,yBAAU,OAAO,0CAAoB,EAAE,IAAI,6BAAO,CAAC,iBAAiB,gCAAU,CAAC;AACvH,YAAY,kBAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC,kBAAkB,0CAAoB,EAAE,IAAI,6BAAO,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA,iBAAiB,sCAAgB,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC,kBAAkB,0CAAoB,EAAE,IAAI,6BAAO,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA,kBAAkB,sCAAgB,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAW;AAC/C,mBAAmB,8CAAwB;AAC3C;AACA,CAAC;AACD,4CAA4C,wBAAW;AACvD,uBAAuB,uCAAiB;AACxC,yBAAyB,8CAAwB;AACjD;AACA,CAAC;AACD;AACA;AACA;AACA;AACO,gDAAgD,kBAAG;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,0BAAO,WAAW;AACxB;AACA;AACA;AACA,eAAe,2CAAqB;AACpC,oBAAoB,4CAAsB;AAC1C;AACA,qBAAqB,8BAAQ;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,+BAAY,CAAC;AAC1B,sBAAsB,qCAAe;AACrC,gCAAgC,sCAAgB,EAAE,IAAI,gCAAW,CAAC;AAClE,UAAU,qCAAe,EAAE;AAC3B,eAAe,2CAAqB;AACpC;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,4CAAsB;AAC1C,iCAAiC,gCAAW,EAAE;AAC9C,4BAA4B,yCAAmB,EAAE;AACjD,sBAAsB,wBAAY,EAAE;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,6CAAuB;AAC3C;;AAEA;AACA,oBAAoB,8CAAwB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAY,EAAE;AACnC,kCAAkC,gCAAU,EAAE;AAC9C,mBAAmB,0CAAoB;AACvC,qBAAqB,4CAAsB;AAC3C;AACA;;AAEA;AACA;AACA,+BAA+B,gCAAU,EAAE;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,6BAAO,CAAC;AAClC,2BAA2B,6BAAO,CAAC;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,2CAAqB;AACpC,gBAAgB,2CAAqB;AACrC;AACA;;AAEA;AACA;AACA,gCAAgC,gCAAU,EAAE;AAC5C;;AAEA;AACA;AACA,kCAAkC,gCAAU,EAAE;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,qCAAe;AAChC,gBAAgB,8BAAc;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC,kBAAkB,0CAAoB,EAAE,IAAI,6BAAO,CAAC;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA,oBAAoB,qCAAe;AACnC;;AAEA;AACA,oBAAoB,sCAAgB;AACpC;;AAEA;AACA,oBAAoB,uCAAiB;AACrC;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,0CAAoB;AACxC,4BAA4B,yCAAmB,EAAE;AACjD;AACA;AACA;AACA,mBAAmB,wBAAY,EAAE;AACjC;AACA,sBAAsB,wBAAY,EAAE;AACpC;;AAEA,gBAAgB,eAAe,yBAAQ,EAAE;AACzC;AACA;AACA;AACA,cAAc,0BAA0B;AACxC,kBAAkB,0CAAoB,EAAE,IAAI,6BAAO,CAAC;AACpD;AACA;AACA;AACA,sBAAsB,6BAA6B,YAAY,0EAA8B,CAAC,kBAAG;AACjG;AACA;AACA;AACA,sBAAsB,iCAAY;AAClC,iBAAiB,iCAAY;AAC7B;AACA;AACA,gBAAgB,iCAAY;AAC5B;AACA;AACA;AACA,sBAAsB,iCAAY;AAClC;AACA;AACA;AACA,iBAAiB,iCAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iCAAY;AAC5B;AACA;AACA,sBAAsB,iCAAY;AAClC;AACA,eAAe,+BAAY,CAAC;AAC5B,wBAAwB,iCAAY;AACpC,sCAAsC,iCAAY;AAClD,iBAAiB,iCAAY;AAC7B;AACA;AACA;AACA;AACA,iBAAiB,iCAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iCAAY;AAC5B;AACA;AACA,sBAAsB,iCAAY;AAClC;AACA;AACA;AACA;AACA,gBAAgB,iCAAY;AAC5B;AACA;AACA,sBAAsB,iCAAY;AAClC;AACA;AACA,gBAAgB,iCAAY;AAC5B;AACA;;;ACrVA;AACA;AACA;AACoF;AACnB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yBAAQ;AACtC;AACA;AACA,8BAA8B,2CAA2C;AACzE,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,eAAe,yBAAQ;AACvB,YAAY;AACZ,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACgE;;;;;;;;ACrChC;AACsC;AACJ;AACnE,2DAA0B,YAAY,UAAU;;AAEzC,iBAAiB,wBAAU;AAClC,cAAc,oBAAM;AACpB,UAAU,4DAA4D;;AAEtE;AACA,EAAE,uCAAgB;AAClB,EAAE,uCAAgB;;AAElB;AACA,EAAE,oCAAa;AACf,EAAE,oCAAa;AACf,EAAE,oCAAa;;AAEf;AACA,EAAE,iCAAmB;;AAErB;AACA;AACA;AACA;AACA;;AAEA,SAAS,gCAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CkC;AAC6B;AACoG;AAC5F;AACQ;AAChF;AACA;AACA,mBAAmB,sEAAsE;AACzF;AACA;AACA;AACA;AACA;AACO,uBAAuB,2CAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAO;AAC5B;AACA,wBAAwB,yBAAQ;AAChC;AACA;AACA,qBAAqB,wBAAM;AAC3B;AACA,wBAAwB,yBAAQ;AAChC;AACA;AACA,qBAAqB,8BAAY;AACjC;AACA;AACA,4CAA4C,yBAAQ;AACpD;AACA;AACA;AACA;AACA,iDAAiD,yBAAQ;AACzD,0DAA0D,yBAAQ;AAClE,4BAA4B,yBAAQ;AACpC;AACA;AACA;AACA,qBAAqB,+BAAa;AAClC;AACA;AACA,4CAA4C,yBAAQ;AACpD;AACA;AACA;AACA;AACA,iDAAiD,yBAAQ;AACzD;AACA;AACA;AACA;AACA,qBAAqB,8BAAY;AACjC;AACA;AACA;AACA;AACA,qBAAqB,4BAAU;AAC/B;AACA;AACA;AACA;AACA,qBAAqB,0BAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sCAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sCAAiB;AACrC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAG;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sCAAiB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAa;AACzB,YAAY,yBAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAiB;AACpC,SAAS;AACT;AACA;AACA,eAAe,sCAAiB;AAChC;AACA;AACA,gCAAU;AACV,IAAI,2BAAI,GAAG,qCAAqC;AAChD;AACA,gCAAU;AACV,IAAI,6BAAU;AACd;AACA,gCAAU;AACV,IAAI,6BAAU;AACd;;;;;;;;;AC3Q6D;AAC7D;AACA,yBAAyB,2CAA2C;AACpE;AACA;AACO,kDAAkD,wBAAI;AAC7D;AACA;AACA,UAAU,kBAAG;AACb,oBAAoB,mCAAmC;AACvD,oBAAoB,iCAAiC;AACrD,qBAAqB,gCAAgC;AACrD,kBAAkB,iCAAiC;AACnD,4BAA4B,0CAA0C;AACtE;AACA,gBAAgB,0BAAO,qBAAqB;AAC5C;AACA;;;;;;;ACjBA;AACA;AACA;AAC8C;AACO;AACrD;AACA;AACA;AACA;AACO,gDAAgD,kBAAG;AAC1D,IAAI,0BAAO,UAAU;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACuG;AACtC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sCAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2CAA2C;AACzE,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,eAAe,QAAQ;AACvB,YAAY;AACZ,UAAU;AACV,CAAC;AACgE;;;;;;;;ACtDhC;AAMlB;AACkC;;AAEjD,2DAA0B,YAAY,UAAU;;AAEzC,MAAM,iBAAQ,GAAG,wBAAU;AAClC,cAAc,oBAAM;AACpB,UAAU,qEAAqE;AAC/E;;AAEA,EAAE,6BAAe;AACjB;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE,oCAAa;;AAEf;AACA,EAAE,iCAAmB;;AAErB,SAAS,gCAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;AC9CkC;AACwB;AACG;AACV;AACO;AACsB;AACjF;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,sFAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,uBAAuB,iGAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2DAAU;AACV,IAAI,uEAAI,GAAG,iBAAiB;AAC5B;AACA,2DAAU;AACV,IAAI,uEAAI,GAAG,iBAAiB;AAC5B;AACA,2DAAU;AACV,IAAI,uEAAI,GAAG,iBAAiB;AAC5B;AACA,2DAAU;AACV,IAAI,yEAAU;AACd;AACA,2DAAU;AACV,IAAI,yEAAU;AACd;AACA,2DAAU;AACV,IAAI,yEAAU;AACd;AACA,2DAAU;AACV,IAAI,yEAAU;AACd;AACA,2DAAU;AACV,IAAI,yEAAU;AACd;AACA,gFAAW,WAAW,sEAAQ","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@microsoft/fast-element/dist/esm/interfaces.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@microsoft/fast-element/dist/esm/templating/when.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@microsoft/fast-foundation/dist/esm/tree-item/tree-item.template.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/web-components/dist/esm/styles/direction.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/web-components/dist/esm/tree-item/tree-item.styles.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/web-components/dist/esm/tree-item/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/TreeItem.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@microsoft/fast-foundation/dist/esm/tree-view/tree-view.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@microsoft/fast-foundation/dist/esm/tree-view/tree-view.template.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/web-components/dist/esm/tree-view/tree-view.styles.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/web-components/dist/esm/tree-view/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/TreeView.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@microsoft/fast-foundation/dist/esm/tree-item/tree-item.js"],"sourcesContent":["/**\n * Determines whether or not an object is a function.\n * @public\n */\nexport const isFunction = (object) => typeof object === \"function\";\n","import { isFunction } from \"../interfaces.js\";\nconst noTemplate = () => null;\nfunction normalizeBinding(value) {\n    return value === undefined ? noTemplate : isFunction(value) ? value : () => value;\n}\n/**\n * A directive that enables basic conditional rendering in a template.\n * @param binding - The condition to test for rendering.\n * @param templateOrTemplateBinding - The template or a binding that gets\n * the template to render when the condition is true.\n * @param elseTemplateOrTemplateBinding - Optional template or binding that that\n * gets the template to render when the conditional is false.\n * @public\n */\nexport function when(binding, templateOrTemplateBinding, elseTemplateOrTemplateBinding) {\n    const dataBinding = isFunction(binding) ? binding : () => binding;\n    const templateBinding = normalizeBinding(templateOrTemplateBinding);\n    const elseBinding = normalizeBinding(elseTemplateOrTemplateBinding);\n    return (source, context) => dataBinding(source, context)\n        ? templateBinding(source, context)\n        : elseBinding(source, context);\n}\n","import { children, elements, html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(TreeItem:class)} component.\n * @public\n */\nexport const treeItemTemplate = (context, definition) => html `\n    <template\n        role=\"treeitem\"\n        slot=\"${x => (x.isNestedItem() ? \"item\" : void 0)}\"\n        tabindex=\"-1\"\n        class=\"${x => (x.expanded ? \"expanded\" : \"\")} ${x => x.selected ? \"selected\" : \"\"} ${x => (x.nested ? \"nested\" : \"\")}\n            ${x => (x.disabled ? \"disabled\" : \"\")}\"\n        aria-expanded=\"${x => x.childItems && x.childItemLength() > 0 ? x.expanded : void 0}\"\n        aria-selected=\"${x => x.selected}\"\n        aria-disabled=\"${x => x.disabled}\"\n        @focusin=\"${(x, c) => x.handleFocus(c.event)}\"\n        @focusout=\"${(x, c) => x.handleBlur(c.event)}\"\n        ${children({\n    property: \"childItems\",\n    filter: elements(),\n})}\n    >\n        <div class=\"positioning-region\" part=\"positioning-region\">\n            <div class=\"content-region\" part=\"content-region\">\n                ${when(x => x.childItems && x.childItemLength() > 0, html `\n                        <div\n                            aria-hidden=\"true\"\n                            class=\"expand-collapse-button\"\n                            part=\"expand-collapse-button\"\n                            @click=\"${(x, c) => x.handleExpandCollapseButtonClick(c.event)}\"\n                            ${ref(\"expandCollapseButton\")}\n                        >\n                            <slot name=\"expand-collapse-glyph\">\n                                ${definition.expandCollapseGlyph || \"\"}\n                            </slot>\n                        </div>\n                    `)}\n                ${startSlotTemplate(context, definition)}\n                <slot></slot>\n                ${endSlotTemplate(context, definition)}\n            </div>\n        </div>\n        ${when(x => x.childItems &&\n    x.childItemLength() > 0 &&\n    (x.expanded || x.renderCollapsedChildren), html `\n                <div role=\"group\" class=\"items\" part=\"items\">\n                    <slot name=\"item\" ${slotted(\"items\")}></slot>\n                </div>\n            `)}\n    </template>\n`;\n","// Copyright (c) Jupyter Development Team.\n// Copyright (c) Microsoft Corporation.\n// Distributed under the terms of the Modified BSD License.\nimport { direction as directionDesignToken } from '../design-tokens.js';\n/**\n * Behavior to conditionally apply LTR and RTL stylesheets. To determine which to apply,\n * the behavior will use the nearest DesignSystemProvider's 'direction' design system value.\n *\n * @public\n * @example\n * ```ts\n * import { css } from \"@microsoft/fast-element\";\n * import { DirectionalStyleSheetBehavior } from \"@microsoft/fast-foundation\";\n *\n * css`\n *  // ...\n * `.withBehaviors(new DirectionalStyleSheetBehavior(\n *   css`:host { content: \"ltr\"}`),\n *   css`:host { content: \"rtl\"}`),\n * )\n * ```\n */\nexport class DirectionalStyleSheetBehavior {\n    constructor(ltr, rtl) {\n        this.cache = new WeakMap();\n        this.ltr = ltr;\n        this.rtl = rtl;\n    }\n    /**\n     * @internal\n     */\n    bind(source) {\n        this.attach(source);\n    }\n    /**\n     * @internal\n     */\n    unbind(source) {\n        const cache = this.cache.get(source);\n        if (cache) {\n            directionDesignToken.unsubscribe(cache);\n        }\n    }\n    attach(source) {\n        const subscriber = this.cache.get(source) ||\n            new DirectionalStyleSheetBehaviorSubscription(this.ltr, this.rtl, source);\n        const value = directionDesignToken.getValueFor(source);\n        directionDesignToken.subscribe(subscriber);\n        subscriber.attach(value);\n        this.cache.set(source, subscriber);\n    }\n}\n/**\n * Subscription for {@link DirectionalStyleSheetBehavior}\n */\nclass DirectionalStyleSheetBehaviorSubscription {\n    constructor(ltr, rtl, source) {\n        this.ltr = ltr;\n        this.rtl = rtl;\n        this.source = source;\n        this.attached = null;\n    }\n    handleChange({ target, token }) {\n        this.attach(token.getValueFor(target));\n    }\n    attach(direction) {\n        if (this.attached !== this[direction]) {\n            if (this.attached !== null) {\n                this.source.$fastController.removeStyles(this.attached);\n            }\n            this.attached = this[direction];\n            if (this.attached !== null) {\n                this.source.$fastController.addStyles(this.attached);\n            }\n        }\n    }\n}\n","// Copyright (c) Jupyter Development Team.\n// Copyright (c) Microsoft Corporation.\n// Distributed under the terms of the Modified BSD License.\nimport { css, cssPartial } from '@microsoft/fast-element';\nimport { DesignToken, disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, TreeItem } from '@microsoft/fast-foundation';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { accentFillFocus, accentForegroundRest, baseHeightMultiplier, bodyFont, controlCornerRadius, density, designUnit, disabledOpacity, focusStrokeWidth, neutralFillActive, neutralFillHover, neutralFillRecipe, neutralFillRest, neutralFillStealthActive, neutralFillStealthHover, neutralFillStealthRecipe, neutralFillStealthRest, neutralForegroundRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, typeRampPlus1FontSize } from '../design-tokens.js';\nimport { DirectionalStyleSheetBehavior, heightNumber } from '../styles/index.js';\n/**\n * Tree item expand collapse button size CSS Partial\n * @public\n */\nexport const expandCollapseButtonSize = cssPartial `(((${baseHeightMultiplier} + ${density}) * 0.5 + 2) * ${designUnit})`;\nconst ltr = css `\n  .expand-collapse-glyph {\n    transform: rotate(0deg);\n  }\n  :host(.nested) .expand-collapse-button {\n    left: var(\n      --expand-collapse-button-nested-width,\n      calc(\n        (\n            ${expandCollapseButtonSize} +\n              ((${baseHeightMultiplier} + ${density}) * 1.25)\n          ) * -1px\n      )\n    );\n  }\n  :host([selected])::after {\n    left: calc(${focusStrokeWidth} * 1px);\n  }\n  :host([expanded]) > .positioning-region .expand-collapse-glyph {\n    transform: rotate(90deg);\n  }\n`;\nconst rtl = css `\n  .expand-collapse-glyph {\n    transform: rotate(180deg);\n  }\n  :host(.nested) .expand-collapse-button {\n    right: var(\n      --expand-collapse-button-nested-width,\n      calc(\n        (\n            ${expandCollapseButtonSize} +\n              ((${baseHeightMultiplier} + ${density}) * 1.25)\n          ) * -1px\n      )\n    );\n  }\n  :host([selected])::after {\n    right: calc(${focusStrokeWidth} * 1px);\n  }\n  :host([expanded]) > .positioning-region .expand-collapse-glyph {\n    transform: rotate(90deg);\n  }\n`;\nconst expandCollapseHoverBehavior = DesignToken.create('tree-item-expand-collapse-hover').withDefault((target) => {\n    const recipe = neutralFillStealthRecipe.getValueFor(target);\n    return recipe.evaluate(target, recipe.evaluate(target).hover).hover;\n});\nconst selectedExpandCollapseHoverBehavior = DesignToken.create('tree-item-expand-collapse-selected-hover').withDefault((target) => {\n    const baseRecipe = neutralFillRecipe.getValueFor(target);\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n    return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).hover;\n});\n/**\n * Styles for Tree Item\n * @public\n */\nexport const treeItemStyles = (context, definition) => css `\n    /**\n     * This animation exists because when tree item children are conditionally loaded\n     * there is a visual bug where the DOM exists but styles have not yet been applied (essentially FOUC).\n     * This subtle animation provides a ever so slight timing adjustment for loading that solves the issue.\n     */\n    @keyframes treeItemLoading {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      }\n    }\n\n    ${display('block')} :host {\n      contain: content;\n      position: relative;\n      outline: none;\n      color: ${neutralForegroundRest};\n      background: ${neutralFillStealthRest};\n      cursor: pointer;\n      font-family: ${bodyFont};\n      --tree-item-nested-width: 0;\n    }\n\n    :host(:focus) > .positioning-region {\n      outline: none;\n    }\n\n    :host(:focus) .content-region {\n      outline: none;\n    }\n\n    :host(:${focusVisible}) .positioning-region {\n      border-color: ${accentFillFocus};\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px)\n        ${accentFillFocus} inset;\n      color: ${neutralForegroundRest};\n    }\n\n    .positioning-region {\n      display: flex;\n      position: relative;\n      box-sizing: border-box;\n      background: ${neutralFillStealthRest};\n      border: transparent calc(${strokeWidth} * 1px) solid;\n      border-radius: calc(${controlCornerRadius} * 1px);\n      height: calc((${heightNumber} + 1) * 1px);\n    }\n\n    .positioning-region::before {\n      content: '';\n      display: block;\n      width: var(--tree-item-nested-width);\n      flex-shrink: 0;\n    }\n\n    :host(:not([disabled])) .positioning-region:hover {\n      background: ${neutralFillStealthHover};\n    }\n\n    :host(:not([disabled])) .positioning-region:active {\n      background: ${neutralFillStealthActive};\n    }\n\n    .content-region {\n      display: inline-flex;\n      align-items: center;\n      white-space: nowrap;\n      width: 100%;\n      min-width: 0;\n      height: calc(${heightNumber} * 1px);\n      margin-inline-start: calc(${designUnit} * 2px + 8px);\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      font-weight: 400;\n    }\n\n    .items {\n      /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n      font-size: calc(1em + (${designUnit} + 16) * 1px);\n    }\n\n    .expand-collapse-button {\n      background: none;\n      border: none;\n      outline: none;\n      /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n      width: calc(${expandCollapseButtonSize} * 1px);\n      height: calc(${expandCollapseButtonSize} * 1px);\n      padding: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      margin-left: 6px;\n      margin-right: 6px;\n    }\n\n    .expand-collapse-glyph {\n      /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n      width: calc((16 + ${density}) * 1px);\n      height: calc((16 + ${density}) * 1px);\n      transition: transform 0.1s linear;\n\n      pointer-events: none;\n      fill: currentcolor;\n    }\n\n    .start,\n    .end {\n      display: flex;\n      fill: currentcolor;\n    }\n\n    ::slotted(svg) {\n      /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n      width: 16px;\n      height: 16px;\n\n      /* Something like that would do if the typography is adaptive\n      font-size: inherit;\n      width: ${typeRampPlus1FontSize};\n      height: ${typeRampPlus1FontSize};\n      */\n    }\n\n    .start {\n      /* TODO: horizontalSpacing https://github.com/microsoft/fast/issues/2766 */\n      margin-inline-end: calc(${designUnit} * 2px + 2px);\n    }\n\n    .end {\n      /* TODO: horizontalSpacing https://github.com/microsoft/fast/issues/2766 */\n      margin-inline-start: calc(${designUnit} * 2px + 2px);\n    }\n\n    :host([expanded]) > .items {\n      animation: treeItemLoading ease-in 10ms;\n      animation-iteration-count: 1;\n      animation-fill-mode: forwards;\n    }\n\n    :host([disabled]) .content-region {\n      opacity: ${disabledOpacity};\n      cursor: ${disabledCursor};\n    }\n\n    :host(.nested) .content-region {\n      position: relative;\n      /* Add left margin to collapse button size */\n      margin-inline-start: calc(\n        (\n            ${expandCollapseButtonSize} +\n              ((${baseHeightMultiplier} + ${density}) * 1.25)\n          ) * 1px\n      );\n    }\n\n    :host(.nested) .expand-collapse-button {\n      position: absolute;\n    }\n\n    :host(.nested:not([disabled])) .expand-collapse-button:hover {\n      background: ${expandCollapseHoverBehavior};\n    }\n\n    :host([selected]) .positioning-region {\n      background: ${neutralFillRest};\n    }\n\n    :host([selected]:not([disabled])) .positioning-region:hover {\n      background: ${neutralFillHover};\n    }\n\n    :host([selected]:not([disabled])) .positioning-region:active {\n      background: ${neutralFillActive};\n    }\n\n    :host([selected]:not([disabled])) .expand-collapse-button:hover {\n      background: ${selectedExpandCollapseHoverBehavior};\n    }\n\n    :host([selected])::after {\n      /* The background needs to be calculated based on the selected background state\n         for this control. We currently have no way of changing that, so setting to\n         accent-foreground-rest for the time being */\n      background: ${accentForegroundRest};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      content: '';\n      display: block;\n      position: absolute;\n      top: calc((${heightNumber} / 4) * 1px);\n      width: 3px;\n      height: calc((${heightNumber} / 2) * 1px);\n    }\n\n    ::slotted(${context.tagFor(TreeItem)}) {\n      --tree-item-nested-width: 1em;\n      --expand-collapse-button-nested-width: calc(\n        (\n            ${expandCollapseButtonSize} +\n              ((${baseHeightMultiplier} + ${density}) * 1.25)\n          ) * -1px\n      );\n    }\n  `.withBehaviors(new DirectionalStyleSheetBehavior(ltr, rtl), forcedColorsStylesheetBehavior(css `\n      :host {\n        forced-color-adjust: none;\n        border-color: transparent;\n        background: ${SystemColors.Field};\n        color: ${SystemColors.FieldText};\n      }\n      :host .content-region .expand-collapse-glyph {\n        fill: ${SystemColors.FieldText};\n      }\n      :host .positioning-region:hover,\n      :host([selected]) .positioning-region {\n        background: ${SystemColors.Highlight};\n      }\n      :host .positioning-region:hover .content-region,\n      :host([selected]) .positioning-region .content-region {\n        color: ${SystemColors.HighlightText};\n      }\n      :host .positioning-region:hover .content-region .expand-collapse-glyph,\n      :host .positioning-region:hover .content-region .start,\n      :host .positioning-region:hover .content-region .end,\n      :host([selected]) .content-region .expand-collapse-glyph,\n      :host([selected]) .content-region .start,\n      :host([selected]) .content-region .end {\n        fill: ${SystemColors.HighlightText};\n      }\n      :host([selected])::after {\n        background: ${SystemColors.Field};\n      }\n      :host(:${focusVisible}) .positioning-region {\n        border-color: ${SystemColors.FieldText};\n        box-shadow: 0 0 0 2px inset ${SystemColors.Field};\n        color: ${SystemColors.FieldText};\n      }\n      :host([disabled]) .content-region,\n      :host([disabled]) .positioning-region:hover .content-region {\n        opacity: 1;\n        color: ${SystemColors.GrayText};\n      }\n      :host([disabled]) .content-region .expand-collapse-glyph,\n      :host([disabled]) .content-region .start,\n      :host([disabled]) .content-region .end,\n      :host([disabled])\n        .positioning-region:hover\n        .content-region\n        .expand-collapse-glyph,\n      :host([disabled]) .positioning-region:hover .content-region .start,\n      :host([disabled]) .positioning-region:hover .content-region .end {\n        fill: ${SystemColors.GrayText};\n      }\n      :host([disabled]) .positioning-region:hover {\n        background: ${SystemColors.Field};\n      }\n      .expand-collapse-glyph,\n      .start,\n      .end {\n        fill: ${SystemColors.FieldText};\n      }\n      :host(.nested) .expand-collapse-button:hover {\n        background: ${SystemColors.Field};\n      }\n      :host(.nested) .expand-collapse-button:hover .expand-collapse-glyph {\n        fill: ${SystemColors.FieldText};\n      }\n    `));\n","// Copyright (c) Jupyter Development Team.\n// Copyright (c) Microsoft Corporation.\n// Distributed under the terms of the Modified BSD License.\nimport { treeItemTemplate as template, TreeItem } from '@microsoft/fast-foundation';\nimport { treeItemStyles as styles } from './tree-item.styles.js';\n/**\n * Tree item class\n *\n * @public\n * @tagname jp-tree-item\n */\nclass JupyterTreeItem extends TreeItem {\n}\n/**\n * A function that returns a {@link @microsoft/fast-foundation#TreeItem} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#treeItemTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: `<jp-tree-item>`\n *\n */\nexport const jpTreeItem = JupyterTreeItem.compose({\n    baseName: 'tree-item',\n    baseClass: TreeItem,\n    template,\n    styles,\n    expandCollapseGlyph: /* html */ `\n        <svg\n            viewBox=\"0 0 16 16\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"expand-collapse-glyph\"\n        >\n            <path\n                d=\"M5.00001 12.3263C5.00124 12.5147 5.05566 12.699 5.15699 12.8578C5.25831 13.0167 5.40243 13.1437 5.57273 13.2242C5.74304 13.3047 5.9326 13.3354 6.11959 13.3128C6.30659 13.2902 6.4834 13.2152 6.62967 13.0965L10.8988 8.83532C11.0739 8.69473 11.2153 8.51658 11.3124 8.31402C11.4096 8.11146 11.46 7.88966 11.46 7.66499C11.46 7.44033 11.4096 7.21853 11.3124 7.01597C11.2153 6.81341 11.0739 6.63526 10.8988 6.49467L6.62967 2.22347C6.48274 2.10422 6.30501 2.02912 6.11712 2.00691C5.92923 1.9847 5.73889 2.01628 5.56823 2.09799C5.39757 2.17969 5.25358 2.30817 5.153 2.46849C5.05241 2.62882 4.99936 2.8144 5.00001 3.00369V12.3263Z\"\n            />\n        </svg>\n    `\n});\nexport { JupyterTreeItem as TreeItem, styles as treeItemStyles };\n","import {\n  jpTreeItem,\n  provideJupyterDesignSystem\n} from '@jupyter/web-components';\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { useEventListener, useProperties } from './react-utils.js';\nprovideJupyterDesignSystem().register(jpTreeItem());\n\nexport const TreeItem = forwardRef((props, forwardedRef) => {\n  const ref = useRef(null);\n  const { className, expanded, selected, disabled, ...filteredProps } = props;\n\n  /** Event listeners - run once */\n  useEventListener(ref, 'expanded-change', props.onExpand);\n  useEventListener(ref, 'selected-change', props.onSelect);\n\n  /** Properties - run whenever a property has changed */\n  useProperties(ref, 'expanded', props.expanded);\n  useProperties(ref, 'selected', props.selected);\n  useProperties(ref, 'disabled', props.disabled);\n\n  /** Methods - uses `useImperativeHandle` hook to pass ref to component */\n  useImperativeHandle(forwardedRef, () => ref.current, [ref.current]);\n\n  // Add web component internal classes on top of `className`\n  let allClasses = className ?? '';\n  if (ref.current?.nested) {\n    allClasses += ' nested';\n  }\n\n  return React.createElement(\n    'jp-tree-item',\n    {\n      ref,\n      ...filteredProps,\n      class: allClasses.trim(),\n      exportparts: props.exportparts,\n      for: props.htmlFor,\n      part: props.part,\n      tabindex: props.tabIndex,\n      style: { ...props.style }\n    },\n    props.children\n  );\n});\n","import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { getDisplayedNodes, isHTMLElement, keyArrowDown, keyArrowLeft, keyArrowRight, keyArrowUp, keyEnd, keyEnter, keyHome, } from \"@microsoft/fast-web-utilities\";\nimport { isTreeItemElement, TreeItem } from \"../tree-item/tree-item.js\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\n/**\n * A Tree view Custom HTML Element.\n * Implements the {@link https://w3c.github.io/aria-practices/#TreeView | ARIA TreeView }.\n *\n * @slot - The default slot for tree items\n *\n * @public\n */\nexport class TreeView extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The tree item that is designated to be in the tab queue.\n         *\n         * @internal\n         */\n        this.currentFocused = null;\n        /**\n         * Handle focus events\n         *\n         * @internal\n         */\n        this.handleFocus = (e) => {\n            if (this.slottedTreeItems.length < 1) {\n                // no child items, nothing to do\n                return;\n            }\n            if (e.target === this) {\n                if (this.currentFocused === null) {\n                    this.currentFocused = this.getValidFocusableItem();\n                }\n                if (this.currentFocused !== null) {\n                    TreeItem.focusItem(this.currentFocused);\n                }\n                return;\n            }\n            if (this.contains(e.target)) {\n                this.setAttribute(\"tabindex\", \"-1\");\n                this.currentFocused = e.target;\n            }\n        };\n        /**\n         * Handle blur events\n         *\n         * @internal\n         */\n        this.handleBlur = (e) => {\n            if (e.target instanceof HTMLElement &&\n                (e.relatedTarget === null || !this.contains(e.relatedTarget))) {\n                this.setAttribute(\"tabindex\", \"0\");\n            }\n        };\n        /**\n         * KeyDown handler\n         *\n         *  @internal\n         */\n        this.handleKeyDown = (e) => {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (this.slottedTreeItems.length < 1) {\n                return true;\n            }\n            const treeItems = this.getVisibleNodes();\n            switch (e.key) {\n                case keyHome:\n                    if (treeItems.length) {\n                        TreeItem.focusItem(treeItems[0]);\n                    }\n                    return;\n                case keyEnd:\n                    if (treeItems.length) {\n                        TreeItem.focusItem(treeItems[treeItems.length - 1]);\n                    }\n                    return;\n                case keyArrowLeft:\n                    if (e.target && this.isFocusableElement(e.target)) {\n                        const item = e.target;\n                        if (item instanceof TreeItem &&\n                            item.childItemLength() > 0 &&\n                            item.expanded) {\n                            item.expanded = false;\n                        }\n                        else if (item instanceof TreeItem &&\n                            item.parentElement instanceof TreeItem) {\n                            TreeItem.focusItem(item.parentElement);\n                        }\n                    }\n                    return false;\n                case keyArrowRight:\n                    if (e.target && this.isFocusableElement(e.target)) {\n                        const item = e.target;\n                        if (item instanceof TreeItem &&\n                            item.childItemLength() > 0 &&\n                            !item.expanded) {\n                            item.expanded = true;\n                        }\n                        else if (item instanceof TreeItem && item.childItemLength() > 0) {\n                            this.focusNextNode(1, e.target);\n                        }\n                    }\n                    return;\n                case keyArrowDown:\n                    if (e.target && this.isFocusableElement(e.target)) {\n                        this.focusNextNode(1, e.target);\n                    }\n                    return;\n                case keyArrowUp:\n                    if (e.target && this.isFocusableElement(e.target)) {\n                        this.focusNextNode(-1, e.target);\n                    }\n                    return;\n                case keyEnter:\n                    // In single-select trees where selection does not follow focus (see note below),\n                    // the default action is typically to select the focused node.\n                    this.handleClick(e);\n                    return;\n            }\n            // don't prevent default if we took no action\n            return true;\n        };\n        /**\n         * Handles the selected-changed events bubbling up\n         * from child tree items\n         *\n         *  @internal\n         */\n        this.handleSelectedChange = (e) => {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (!(e.target instanceof Element) || !isTreeItemElement(e.target)) {\n                return true;\n            }\n            const item = e.target;\n            if (item.selected) {\n                if (this.currentSelected && this.currentSelected !== item) {\n                    this.currentSelected.selected = false;\n                }\n                // new selected item\n                this.currentSelected = item;\n            }\n            else if (!item.selected && this.currentSelected === item) {\n                // selected item deselected\n                this.currentSelected = null;\n            }\n            return;\n        };\n        /**\n         * Updates the tree view when slottedTreeItems changes\n         */\n        this.setItems = () => {\n            // force single selection\n            // defaults to first one found\n            const selectedItem = this.treeView.querySelector(\"[aria-selected='true']\");\n            this.currentSelected = selectedItem;\n            // invalidate the current focused item if it is no longer valid\n            if (this.currentFocused === null || !this.contains(this.currentFocused)) {\n                this.currentFocused = this.getValidFocusableItem();\n            }\n            // toggle properties on child elements\n            this.nested = this.checkForNestedItems();\n            const treeItems = this.getVisibleNodes();\n            treeItems.forEach(node => {\n                if (isTreeItemElement(node)) {\n                    node.nested = this.nested;\n                }\n            });\n        };\n        /**\n         * check if the item is focusable\n         */\n        this.isFocusableElement = (el) => {\n            return isTreeItemElement(el);\n        };\n        this.isSelectedElement = (el) => {\n            return el.selected;\n        };\n    }\n    slottedTreeItemsChanged() {\n        if (this.$fastController.isConnected) {\n            // update for slotted children change\n            this.setItems();\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute(\"tabindex\", \"0\");\n        DOM.queueUpdate(() => {\n            this.setItems();\n        });\n    }\n    /**\n     * Handles click events bubbling up\n     *\n     *  @internal\n     */\n    handleClick(e) {\n        if (e.defaultPrevented) {\n            // handled, do nothing\n            return;\n        }\n        if (!(e.target instanceof Element) || !isTreeItemElement(e.target)) {\n            // not a tree item, ignore\n            return true;\n        }\n        const item = e.target;\n        if (!item.disabled) {\n            item.selected = !item.selected;\n        }\n        return;\n    }\n    /**\n     * Move focus to a tree item based on its offset from the provided item\n     */\n    focusNextNode(delta, item) {\n        const visibleNodes = this.getVisibleNodes();\n        if (!visibleNodes) {\n            return;\n        }\n        const focusItem = visibleNodes[visibleNodes.indexOf(item) + delta];\n        if (isHTMLElement(focusItem)) {\n            TreeItem.focusItem(focusItem);\n        }\n    }\n    /**\n     * checks if there are any nested tree items\n     */\n    getValidFocusableItem() {\n        const treeItems = this.getVisibleNodes();\n        // default to selected element if there is one\n        let focusIndex = treeItems.findIndex(this.isSelectedElement);\n        if (focusIndex === -1) {\n            // otherwise first focusable tree item\n            focusIndex = treeItems.findIndex(this.isFocusableElement);\n        }\n        if (focusIndex !== -1) {\n            return treeItems[focusIndex];\n        }\n        return null;\n    }\n    /**\n     * checks if there are any nested tree items\n     */\n    checkForNestedItems() {\n        return this.slottedTreeItems.some((node) => {\n            return isTreeItemElement(node) && node.querySelector(\"[role='treeitem']\");\n        });\n    }\n    getVisibleNodes() {\n        return getDisplayedNodes(this, \"[role='treeitem']\") || [];\n    }\n}\n__decorate([\n    attr({ attribute: \"render-collapsed-nodes\" })\n], TreeView.prototype, \"renderCollapsedNodes\", void 0);\n__decorate([\n    observable\n], TreeView.prototype, \"currentSelected\", void 0);\n__decorate([\n    observable\n], TreeView.prototype, \"slottedTreeItems\", void 0);\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#TreeView} component.\n * @public\n */\nexport const treeViewTemplate = (context, definition) => html `\n    <template\n        role=\"tree\"\n        ${ref(\"treeView\")}\n        @keydown=\"${(x, c) => x.handleKeyDown(c.event)}\"\n        @focusin=\"${(x, c) => x.handleFocus(c.event)}\"\n        @focusout=\"${(x, c) => x.handleBlur(c.event)}\"\n        @click=\"${(x, c) => x.handleClick(c.event)}\"\n        @selected-change=\"${(x, c) => x.handleSelectedChange(c.event)}\"\n    >\n        <slot ${slotted(\"slottedTreeItems\")}></slot>\n    </template>\n`;\n","// Copyright (c) Jupyter Development Team.\n// Copyright (c) Microsoft Corporation.\n// Distributed under the terms of the Modified BSD License.\nimport { css } from '@microsoft/fast-element';\nimport { display } from '@microsoft/fast-foundation';\n/**\n * Styles for Tree View\n * @public\n */\nexport const treeViewStyles = (context, definition) => css `\n  ${display('flex')} :host {\n    flex-direction: column;\n    align-items: stretch;\n    min-width: fit-content;\n    font-size: 0;\n  }\n\n  :host:focus-visible {\n    outline: none;\n  }\n`;\n","// Copyright (c) Jupyter Development Team.\n// Copyright (c) Microsoft Corporation.\n// Distributed under the terms of the Modified BSD License.\nimport { isTreeItemElement, treeViewTemplate as template, TreeView } from '@microsoft/fast-foundation';\nimport { treeViewStyles as styles } from './tree-view.styles.js';\n/**\n * Tree view class\n *\n * @public\n * @tagname jp-tree-view\n */\nclass JupyterTreeView extends TreeView {\n    /**\n     * Handles click events bubbling up\n     *\n     *  @internal\n     */\n    handleClick(e) {\n        if (e.defaultPrevented) {\n            // handled, do nothing\n            return;\n        }\n        if (!(e.target instanceof Element)) {\n            // not a tree item, ignore\n            return true;\n        }\n        let item = e.target;\n        while (item && !isTreeItemElement(item)) {\n            item = item.parentElement;\n            // Escape if we get out of the tree view component\n            if (item === this) {\n                item = null;\n            }\n        }\n        if (item && !item.disabled) {\n            // Force selection - it is not possible to unselect\n            item.selected = true;\n        }\n        return;\n    }\n}\n/**\n * A function that returns a {@link @microsoft/fast-foundation#TreeView} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#treeViewTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: `<jp-tree-view>`\n *\n */\nexport const jpTreeView = JupyterTreeView.compose({\n    baseName: 'tree-view',\n    baseClass: TreeView,\n    template,\n    styles\n});\nexport { JupyterTreeView as TreeView, styles as treeViewStyles };\n","import {\n  jpTreeView,\n  provideJupyterDesignSystem\n} from '@jupyter/web-components';\nimport React, {\n  forwardRef,\n  useLayoutEffect,\n  useImperativeHandle,\n  useRef\n} from 'react';\nimport { useProperties } from './react-utils.js';\n\nprovideJupyterDesignSystem().register(jpTreeView());\n\nexport const TreeView = forwardRef((props, forwardedRef) => {\n  const ref = useRef(null);\n  const { className, renderCollapsedNodes, currentSelected, ...filteredProps } =\n    props;\n\n  useLayoutEffect(() => {\n    // Fix using private API to force refresh of nested flag on\n    // first level of tree items.\n    ref.current?.setItems();\n  }, [ref.current]);\n\n  /** Properties - run whenever a property has changed */\n  useProperties(ref, 'currentSelected', props.currentSelected);\n\n  /** Methods - uses `useImperativeHandle` hook to pass ref to component */\n  useImperativeHandle(forwardedRef, () => ref.current, [ref.current]);\n\n  return React.createElement(\n    'jp-tree-view',\n    {\n      ref,\n      ...filteredProps,\n      class: props.className,\n      exportparts: props.exportparts,\n      for: props.htmlFor,\n      part: props.part,\n      tabindex: props.tabIndex,\n      'render-collapsed-nodes': props.renderCollapsedNodes ? '' : undefined,\n      style: { ...props.style }\n    },\n    props.children\n  );\n});\n","import { __decorate } from \"tslib\";\nimport { attr, observable } from \"@microsoft/fast-element\";\nimport { isHTMLElement } from \"@microsoft/fast-web-utilities\";\nimport { StartEnd } from \"../patterns/start-end.js\";\nimport { applyMixins } from \"../utilities/apply-mixins.js\";\nimport { FoundationElement, } from \"../foundation-element/foundation-element.js\";\n/**\n * check if the item is a tree item\n * @public\n * @remarks\n * determines if element is an HTMLElement and if it has the role treeitem\n */\nexport function isTreeItemElement(el) {\n    return isHTMLElement(el) && el.getAttribute(\"role\") === \"treeitem\";\n}\n/**\n * A Tree item Custom HTML Element.\n *\n * @slot start - Content which can be provided before the tree item content\n * @slot end - Content which can be provided after the tree item content\n * @slot - The default slot for tree item text content\n * @slot item - The slot for tree items (fast tree items manage this assignment themselves)\n * @slot expand-collapse-button - The expand/collapse button\n * @csspart positioning-region - The element used to position the tree item content with exception of any child nodes\n * @csspart content-region - The element containing the expand/collapse, start, and end slots\n * @csspart items - The element wrapping any child items\n * @csspart expand-collapse-button - The expand/collapse button\n * @fires expanded-change - Fires a custom 'expanded-change' event when the expanded state changes\n * @fires selected-change - Fires a custom 'selected-change' event when the selected state changes\n *\n * @public\n */\nexport class TreeItem extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * When true, the control will be appear expanded by user interaction.\n         * @public\n         * @remarks\n         * HTML Attribute: expanded\n         */\n        this.expanded = false;\n        /**\n         * Whether the item is focusable\n         *\n         * @internal\n         */\n        this.focusable = false;\n        /**\n         * Whether the tree is nested\n         *\n         * @public\n         */\n        this.isNestedItem = () => {\n            return isTreeItemElement(this.parentElement);\n        };\n        /**\n         * Handle expand button click\n         *\n         * @internal\n         */\n        this.handleExpandCollapseButtonClick = (e) => {\n            if (!this.disabled && !e.defaultPrevented) {\n                this.expanded = !this.expanded;\n            }\n        };\n        /**\n         * Handle focus events\n         *\n         * @internal\n         */\n        this.handleFocus = (e) => {\n            this.setAttribute(\"tabindex\", \"0\");\n        };\n        /**\n         * Handle blur events\n         *\n         * @internal\n         */\n        this.handleBlur = (e) => {\n            this.setAttribute(\"tabindex\", \"-1\");\n        };\n    }\n    expandedChanged() {\n        if (this.$fastController.isConnected) {\n            this.$emit(\"expanded-change\", this);\n        }\n    }\n    selectedChanged() {\n        if (this.$fastController.isConnected) {\n            this.$emit(\"selected-change\", this);\n        }\n    }\n    itemsChanged(oldValue, newValue) {\n        if (this.$fastController.isConnected) {\n            this.items.forEach((node) => {\n                if (isTreeItemElement(node)) {\n                    // TODO: maybe not require it to be a TreeItem?\n                    node.nested = true;\n                }\n            });\n        }\n    }\n    /**\n     * Places document focus on a tree item\n     *\n     * @public\n     * @param el - the element to focus\n     */\n    static focusItem(el) {\n        el.focusable = true;\n        el.focus();\n    }\n    /**\n     * Gets number of children\n     *\n     * @internal\n     */\n    childItemLength() {\n        const treeChildren = this.childItems.filter((item) => {\n            return isTreeItemElement(item);\n        });\n        return treeChildren ? treeChildren.length : 0;\n    }\n}\n__decorate([\n    attr({ mode: \"boolean\" })\n], TreeItem.prototype, \"expanded\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], TreeItem.prototype, \"selected\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], TreeItem.prototype, \"disabled\", void 0);\n__decorate([\n    observable\n], TreeItem.prototype, \"focusable\", void 0);\n__decorate([\n    observable\n], TreeItem.prototype, \"childItems\", void 0);\n__decorate([\n    observable\n], TreeItem.prototype, \"items\", void 0);\n__decorate([\n    observable\n], TreeItem.prototype, \"nested\", void 0);\n__decorate([\n    observable\n], TreeItem.prototype, \"renderCollapsedChildren\", void 0);\napplyMixins(TreeItem, StartEnd);\n"],"names":[],"sourceRoot":""}