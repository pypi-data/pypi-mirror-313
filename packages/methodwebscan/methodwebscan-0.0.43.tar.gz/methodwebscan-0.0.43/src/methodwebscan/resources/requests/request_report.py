# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from ..common.http_method import HttpMethod
import typing
from .vuln_type import VulnType
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class RequestReport(UniversalBaseModel):
    base_url: str = pydantic.Field(alias="baseUrl")
    path: str
    method: HttpMethod
    path_params: typing.Optional[typing.Dict[str, str]] = pydantic.Field(alias="pathParams", default=None)
    query_params: typing.Optional[typing.Dict[str, str]] = pydantic.Field(alias="queryParams", default=None)
    header_params: typing.Optional[typing.Dict[str, str]] = pydantic.Field(alias="headerParams", default=None)
    body_params: typing.Optional[str] = pydantic.Field(alias="bodyParams", default=None)
    form_params: typing.Optional[typing.Dict[str, str]] = pydantic.Field(alias="formParams", default=None)
    multipart_params: typing.Optional[typing.Dict[str, str]] = pydantic.Field(alias="multipartParams", default=None)
    vuln_types: typing.Optional[typing.List[VulnType]] = pydantic.Field(alias="vulnTypes", default=None)
    status_code: typing.Optional[int] = pydantic.Field(alias="statusCode", default=None)
    response_body: typing.Optional[str] = pydantic.Field(alias="responseBody", default=None)
    response_headers: typing.Optional[typing.Dict[str, str]] = pydantic.Field(alias="responseHeaders", default=None)
    errors: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
