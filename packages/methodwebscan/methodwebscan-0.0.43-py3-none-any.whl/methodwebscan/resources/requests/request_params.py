# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class RequestParams(UniversalBaseModel):
    path_params: str = pydantic.Field(alias="pathParams")
    query_params: str = pydantic.Field(alias="queryParams")
    header_params: str = pydantic.Field(alias="headerParams")
    body_params: str = pydantic.Field(alias="bodyParams")
    form_params: str = pydantic.Field(alias="formParams")
    multipart_params: str = pydantic.Field(alias="multipartParams")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
