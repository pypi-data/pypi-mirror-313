Metadata-Version: 2.1
Name: datasetsforecast
Version: 1.0.0
Summary: Datasets for Time series forecasting
Home-page: https://github.com/Nixtla/datasetsforecast/tree/main/
Author: Nixtla
Author-email: business@nixtla.io
License: MIT License
Keywords: time-series forecasting datasets
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp
Requires-Dist: numpy
Requires-Dist: scikit-learn
Requires-Dist: pandas
Requires-Dist: requests
Requires-Dist: tqdm
Requires-Dist: utilsforecast>=0.0.8
Requires-Dist: xlrd>=1.0.0
Provides-Extra: dev
Requires-Dist: nbdev==2.3.25; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: setuptools; extra == "dev"

# datasetsforecast

<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

Datasets for time series forecasting

## Install

``` sh
pip install datasetsforecast
```

## Datasets

- [Favorita](https://nixtlaverse.nixtla.io/datasetsforecast/favorita.html)
- [Hierarchical](https://nixtlaverse.nixtla.io/datasetsforecast/hierarchical.html)
- [Long
  horizon](https://nixtlaverse.nixtla.io/datasetsforecast/long_horizon.html)
- [M3](https://nixtlaverse.nixtla.io/datasetsforecast/m3.html)
- [M4](https://nixtlaverse.nixtla.io/datasetsforecast/m4.html)
- [M5](https://nixtlaverse.nixtla.io/datasetsforecast/m5.html)
- [PHM2008](https://nixtlaverse.nixtla.io/datasetsforecast/phm2008.html)

## How to use

All the modules have a `load` method which you can use to load the
dataset for a specific group. If you donâ€™t have the data locally it will
be downloaded for you.

``` python
from datasetsforecast.phm2008 import PHM2008
```

``` python
train_df, test_df = PHM2008.load(directory='data', group='FD001')
train_df.shape, test_df.shape
```

    ((20631, 17), (13096, 17))
