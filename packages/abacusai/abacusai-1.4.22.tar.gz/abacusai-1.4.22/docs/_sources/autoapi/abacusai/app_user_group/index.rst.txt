abacusai.app_user_group
=======================

.. py:module:: abacusai.app_user_group


Classes
-------

.. autoapisummary::

   abacusai.app_user_group.AppUserGroup


Module Contents
---------------

.. py:class:: AppUserGroup(client, name=None, userGroupId=None, externalApplicationIds=None, invitedUserEmails=None, publicUserGroup=None, hasExternalApplicationReporting=None, isExternalServiceGroup=None, externalServiceGroupId=None, users={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   An app user group. This is used to determine which users have permissions for external chatbots.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param name: The name of the user group.
   :type name: str
   :param userGroupId: The unique identifier of the user group.
   :type userGroupId: str
   :param externalApplicationIds: The ids of the external applications the group has access to.
   :type externalApplicationIds: list[str]
   :param invitedUserEmails: The emails of the users invited to the user group who have not yet accepted the invite.
   :type invitedUserEmails: list[str]
   :param publicUserGroup: Boolean flag whether the app user group is the public user group of the org or not.
   :type publicUserGroup: bool
   :param hasExternalApplicationReporting: Whether users in the App User Group have permission to view all reports in their organization.
   :type hasExternalApplicationReporting: bool
   :param isExternalServiceGroup: Whether the App User Group corresponds to a user group that's defined in an external service (i.e Microsft Active Directory or Okta) or not
   :type isExternalServiceGroup: bool
   :param externalServiceGroupId: The identifier that corresponds to the app user group's external service group representation
   :type externalServiceGroupId: str
   :param users: The users in the user group.
   :type users: User


   .. py:attribute:: name


   .. py:attribute:: user_group_id


   .. py:attribute:: external_application_ids


   .. py:attribute:: invited_user_emails


   .. py:attribute:: public_user_group


   .. py:attribute:: has_external_application_reporting


   .. py:attribute:: is_external_service_group


   .. py:attribute:: external_service_group_id


   .. py:attribute:: users


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



