abacusai.finetuned_pretrained_model
===================================

.. py:module:: abacusai.finetuned_pretrained_model


Classes
-------

.. autoapisummary::

   abacusai.finetuned_pretrained_model.FinetunedPretrainedModel


Module Contents
---------------

.. py:class:: FinetunedPretrainedModel(client, name=None, finetunedPretrainedModelId=None, finetunedPretrainedModelVersion=None, createdAt=None, updatedAt=None, config=None, baseModel=None, finetuningDatasetVersion=None, status=None, error=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A finetuned pretrained model

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param name: The user-friendly name for the model.
   :type name: str
   :param finetunedPretrainedModelId: The unique identifier of the model.
   :type finetunedPretrainedModelId: str
   :param finetunedPretrainedModelVersion: The unique identifier of the model version.
   :type finetunedPretrainedModelVersion: str
   :param createdAt: When the finetuned pretrained model was created.
   :type createdAt: str
   :param updatedAt: When the finetuned pretrained model was last updated.
   :type updatedAt: str
   :param config: The finetuned pretrained model configuration
   :type config: dict
   :param baseModel: The pretrained base model for fine tuning
   :type baseModel: str
   :param finetuningDatasetVersion: The finetuned dataset instance id of the model.
   :type finetuningDatasetVersion: str
   :param status: The current status of the finetuned pretrained model.
   :type status: str
   :param error: Relevant error if the status is FAILED.
   :type error: str


   .. py:attribute:: name


   .. py:attribute:: finetuned_pretrained_model_id


   .. py:attribute:: finetuned_pretrained_model_version


   .. py:attribute:: created_at


   .. py:attribute:: updated_at


   .. py:attribute:: config


   .. py:attribute:: base_model


   .. py:attribute:: finetuning_dataset_version


   .. py:attribute:: status


   .. py:attribute:: error


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



