abacusai.feature_group_refresh_export_config
============================================

.. py:module:: abacusai.feature_group_refresh_export_config


Classes
-------

.. autoapisummary::

   abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig


Module Contents
---------------

.. py:class:: FeatureGroupRefreshExportConfig(client, connectorType=None, location=None, exportFileFormat=None, additionalIdColumns=None, databaseFeatureMapping=None, externalConnectionId=None, idColumn=None, objectName=None, writeMode=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A Feature Group Connector Export Config outlines the export configuration for a feature group.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param connectorType: The type of connector the feature group is
   :type connectorType: str
   :param location: The file connector location of the feature group export
   :type location: str
   :param exportFileFormat: The file format of the feature group export
   :type exportFileFormat: str
   :param additionalIdColumns: Additional id columns to use for upsert operations
   :type additionalIdColumns: list
   :param databaseFeatureMapping: The mapping of feature names to database columns
   :type databaseFeatureMapping: dict
   :param externalConnectionId: The unique identifier of the external connection to write to
   :type externalConnectionId: str
   :param idColumn: The column to use as the id column for upsert operations
   :type idColumn: str
   :param objectName: The name of the object to write to
   :type objectName: str
   :param writeMode: The write mode to use for the export
   :type writeMode: str


   .. py:attribute:: connector_type


   .. py:attribute:: location


   .. py:attribute:: export_file_format


   .. py:attribute:: additional_id_columns


   .. py:attribute:: database_feature_mapping


   .. py:attribute:: external_connection_id


   .. py:attribute:: id_column


   .. py:attribute:: object_name


   .. py:attribute:: write_mode


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



