# Generated from BOCL.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,83,672,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,1,0,1,0,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,
        1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,
        1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,12,4,12,241,8,12,11,12,12,12,242,
        1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,
        1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,
        1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,
        1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,
        1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
        1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,
        1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,42,1,42,1,42,
        1,42,1,42,1,42,3,42,352,8,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,
        1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,
        1,45,1,45,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,
        1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,
        1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,
        1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,
        1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,
        1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,
        1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,
        1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
        1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,
        1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,
        1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,
        1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,
        1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,
        1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,
        1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,
        1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,73,1,73,
        1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,3,75,592,8,75,
        1,76,1,76,1,76,1,76,1,77,1,77,5,77,600,8,77,10,77,12,77,603,9,77,
        1,78,4,78,606,8,78,11,78,12,78,607,1,78,1,78,4,78,612,8,78,11,78,
        12,78,613,3,78,616,8,78,1,79,1,79,1,79,1,79,5,79,622,8,79,10,79,
        12,79,625,9,79,1,79,3,79,628,8,79,1,79,1,79,1,79,1,79,1,79,3,79,
        635,8,79,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,80,3,80,646,8,
        80,1,81,1,81,1,81,1,81,5,81,652,8,81,10,81,12,81,655,9,81,1,81,1,
        81,1,81,1,81,1,81,1,82,1,82,1,82,1,82,5,82,666,8,82,10,82,12,82,
        669,9,82,1,82,1,82,1,653,0,83,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,
        61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
        83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,
        52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,
        123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,
        71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,
        161,81,163,82,165,83,1,0,6,3,0,9,10,13,13,32,32,3,0,65,90,95,95,
        97,122,4,0,48,57,64,90,95,95,97,122,1,0,48,57,2,0,34,34,92,92,2,
        0,10,10,13,13,685,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,
        0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
        0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
        0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,
        0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
        0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,
        117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,
        0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,
        1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,
        0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,
        0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,
        163,1,0,0,0,0,165,1,0,0,0,1,167,1,0,0,0,3,169,1,0,0,0,5,177,1,0,
        0,0,7,181,1,0,0,0,9,185,1,0,0,0,11,190,1,0,0,0,13,195,1,0,0,0,15,
        202,1,0,0,0,17,209,1,0,0,0,19,216,1,0,0,0,21,224,1,0,0,0,23,231,
        1,0,0,0,25,240,1,0,0,0,27,246,1,0,0,0,29,249,1,0,0,0,31,252,1,0,
        0,0,33,254,1,0,0,0,35,256,1,0,0,0,37,258,1,0,0,0,39,260,1,0,0,0,
        41,262,1,0,0,0,43,264,1,0,0,0,45,266,1,0,0,0,47,268,1,0,0,0,49,270,
        1,0,0,0,51,272,1,0,0,0,53,280,1,0,0,0,55,288,1,0,0,0,57,293,1,0,
        0,0,59,300,1,0,0,0,61,303,1,0,0,0,63,308,1,0,0,0,65,313,1,0,0,0,
        67,319,1,0,0,0,69,323,1,0,0,0,71,326,1,0,0,0,73,330,1,0,0,0,75,333,
        1,0,0,0,77,335,1,0,0,0,79,338,1,0,0,0,81,340,1,0,0,0,83,343,1,0,
        0,0,85,351,1,0,0,0,87,353,1,0,0,0,89,357,1,0,0,0,91,366,1,0,0,0,
        93,377,1,0,0,0,95,379,1,0,0,0,97,381,1,0,0,0,99,383,1,0,0,0,101,
        385,1,0,0,0,103,389,1,0,0,0,105,397,1,0,0,0,107,407,1,0,0,0,109,
        419,1,0,0,0,111,431,1,0,0,0,113,444,1,0,0,0,115,452,1,0,0,0,117,
        456,1,0,0,0,119,461,1,0,0,0,121,470,1,0,0,0,123,479,1,0,0,0,125,
        491,1,0,0,0,127,505,1,0,0,0,129,513,1,0,0,0,131,518,1,0,0,0,133,
        525,1,0,0,0,135,545,1,0,0,0,137,551,1,0,0,0,139,558,1,0,0,0,141,
        563,1,0,0,0,143,568,1,0,0,0,145,574,1,0,0,0,147,579,1,0,0,0,149,
        583,1,0,0,0,151,591,1,0,0,0,153,593,1,0,0,0,155,597,1,0,0,0,157,
        605,1,0,0,0,159,634,1,0,0,0,161,645,1,0,0,0,163,647,1,0,0,0,165,
        661,1,0,0,0,167,168,5,42,0,0,168,2,1,0,0,0,169,170,5,99,0,0,170,
        171,5,111,0,0,171,172,5,110,0,0,172,173,5,116,0,0,173,174,5,101,
        0,0,174,175,5,120,0,0,175,176,5,116,0,0,176,4,1,0,0,0,177,178,5,
        105,0,0,178,179,5,110,0,0,179,180,5,118,0,0,180,6,1,0,0,0,181,182,
        5,112,0,0,182,183,5,114,0,0,183,184,5,101,0,0,184,8,1,0,0,0,185,
        186,5,112,0,0,186,187,5,111,0,0,187,188,5,115,0,0,188,189,5,116,
        0,0,189,10,1,0,0,0,190,191,5,115,0,0,191,192,5,101,0,0,192,193,5,
        108,0,0,193,194,5,102,0,0,194,12,1,0,0,0,195,196,5,102,0,0,196,197,
        5,111,0,0,197,198,5,114,0,0,198,199,5,65,0,0,199,200,5,108,0,0,200,
        201,5,108,0,0,201,14,1,0,0,0,202,203,5,101,0,0,203,204,5,120,0,0,
        204,205,5,105,0,0,205,206,5,115,0,0,206,207,5,116,0,0,207,208,5,
        115,0,0,208,16,1,0,0,0,209,210,5,115,0,0,210,211,5,101,0,0,211,212,
        5,108,0,0,212,213,5,101,0,0,213,214,5,99,0,0,214,215,5,116,0,0,215,
        18,1,0,0,0,216,217,5,99,0,0,217,218,5,111,0,0,218,219,5,108,0,0,
        219,220,5,108,0,0,220,221,5,101,0,0,221,222,5,99,0,0,222,223,5,116,
        0,0,223,20,1,0,0,0,224,225,5,79,0,0,225,226,5,99,0,0,226,227,5,108,
        0,0,227,228,5,65,0,0,228,229,5,110,0,0,229,230,5,121,0,0,230,22,
        1,0,0,0,231,232,5,79,0,0,232,233,5,99,0,0,233,234,5,108,0,0,234,
        235,5,86,0,0,235,236,5,111,0,0,236,237,5,105,0,0,237,238,5,100,0,
        0,238,24,1,0,0,0,239,241,7,0,0,0,240,239,1,0,0,0,241,242,1,0,0,0,
        242,240,1,0,0,0,242,243,1,0,0,0,243,244,1,0,0,0,244,245,6,12,0,0,
        245,26,1,0,0,0,246,247,5,46,0,0,247,248,5,46,0,0,248,28,1,0,0,0,
        249,250,5,58,0,0,250,251,5,58,0,0,251,30,1,0,0,0,252,253,5,40,0,
        0,253,32,1,0,0,0,254,255,5,41,0,0,255,34,1,0,0,0,256,257,5,123,0,
        0,257,36,1,0,0,0,258,259,5,125,0,0,259,38,1,0,0,0,260,261,5,59,0,
        0,261,40,1,0,0,0,262,263,5,58,0,0,263,42,1,0,0,0,264,265,5,44,0,
        0,265,44,1,0,0,0,266,267,5,46,0,0,267,46,1,0,0,0,268,269,5,61,0,
        0,269,48,1,0,0,0,270,271,5,39,0,0,271,50,1,0,0,0,272,273,5,66,0,
        0,273,274,5,111,0,0,274,275,5,111,0,0,275,276,5,108,0,0,276,277,
        5,101,0,0,277,278,5,97,0,0,278,279,5,110,0,0,279,52,1,0,0,0,280,
        281,5,73,0,0,281,282,5,110,0,0,282,283,5,116,0,0,283,284,5,101,0,
        0,284,285,5,103,0,0,285,286,5,101,0,0,286,287,5,114,0,0,287,54,1,
        0,0,0,288,289,5,82,0,0,289,290,5,101,0,0,290,291,5,97,0,0,291,292,
        5,108,0,0,292,56,1,0,0,0,293,294,5,83,0,0,294,295,5,116,0,0,295,
        296,5,114,0,0,296,297,5,105,0,0,297,298,5,110,0,0,298,299,5,103,
        0,0,299,58,1,0,0,0,300,301,5,105,0,0,301,302,5,102,0,0,302,60,1,
        0,0,0,303,304,5,116,0,0,304,305,5,104,0,0,305,306,5,101,0,0,306,
        307,5,110,0,0,307,62,1,0,0,0,308,309,5,101,0,0,309,310,5,108,0,0,
        310,311,5,115,0,0,311,312,5,101,0,0,312,64,1,0,0,0,313,314,5,101,
        0,0,314,315,5,110,0,0,315,316,5,100,0,0,316,317,5,105,0,0,317,318,
        5,102,0,0,318,66,1,0,0,0,319,320,5,97,0,0,320,321,5,110,0,0,321,
        322,5,100,0,0,322,68,1,0,0,0,323,324,5,111,0,0,324,325,5,114,0,0,
        325,70,1,0,0,0,326,327,5,110,0,0,327,328,5,111,0,0,328,329,5,116,
        0,0,329,72,1,0,0,0,330,331,5,60,0,0,331,332,5,62,0,0,332,74,1,0,
        0,0,333,334,5,60,0,0,334,76,1,0,0,0,335,336,5,60,0,0,336,337,5,61,
        0,0,337,78,1,0,0,0,338,339,5,62,0,0,339,80,1,0,0,0,340,341,5,62,
        0,0,341,342,5,61,0,0,342,82,1,0,0,0,343,344,5,124,0,0,344,84,1,0,
        0,0,345,346,5,83,0,0,346,347,5,101,0,0,347,352,5,116,0,0,348,349,
        5,115,0,0,349,350,5,101,0,0,350,352,5,116,0,0,351,345,1,0,0,0,351,
        348,1,0,0,0,352,86,1,0,0,0,353,354,5,66,0,0,354,355,5,97,0,0,355,
        356,5,103,0,0,356,88,1,0,0,0,357,358,5,83,0,0,358,359,5,101,0,0,
        359,360,5,113,0,0,360,361,5,117,0,0,361,362,5,101,0,0,362,363,5,
        110,0,0,363,364,5,99,0,0,364,365,5,101,0,0,365,90,1,0,0,0,366,367,
        5,79,0,0,367,368,5,114,0,0,368,369,5,100,0,0,369,370,5,101,0,0,370,
        371,5,114,0,0,371,372,5,101,0,0,372,373,5,100,0,0,373,374,5,83,0,
        0,374,375,5,101,0,0,375,376,5,116,0,0,376,92,1,0,0,0,377,378,5,45,
        0,0,378,94,1,0,0,0,379,380,5,43,0,0,380,96,1,0,0,0,381,382,5,47,
        0,0,382,98,1,0,0,0,383,384,5,32,0,0,384,100,1,0,0,0,385,386,5,120,
        0,0,386,387,5,111,0,0,387,388,5,114,0,0,388,102,1,0,0,0,389,390,
        5,105,0,0,390,391,5,109,0,0,391,392,5,112,0,0,392,393,5,108,0,0,
        393,394,5,105,0,0,394,395,5,101,0,0,395,396,5,115,0,0,396,104,1,
        0,0,0,397,398,5,111,0,0,398,399,5,99,0,0,399,400,5,108,0,0,400,401,
        5,65,0,0,401,402,5,115,0,0,402,403,5,84,0,0,403,404,5,121,0,0,404,
        405,5,112,0,0,405,406,5,101,0,0,406,106,1,0,0,0,407,408,5,111,0,
        0,408,409,5,99,0,0,409,410,5,108,0,0,410,411,5,73,0,0,411,412,5,
        115,0,0,412,413,5,84,0,0,413,414,5,121,0,0,414,415,5,112,0,0,415,
        416,5,101,0,0,416,417,5,79,0,0,417,418,5,102,0,0,418,108,1,0,0,0,
        419,420,5,111,0,0,420,421,5,99,0,0,421,422,5,108,0,0,422,423,5,73,
        0,0,423,424,5,115,0,0,424,425,5,75,0,0,425,426,5,105,0,0,426,427,
        5,110,0,0,427,428,5,100,0,0,428,429,5,79,0,0,429,430,5,102,0,0,430,
        110,1,0,0,0,431,432,5,97,0,0,432,433,5,108,0,0,433,434,5,108,0,0,
        434,435,5,73,0,0,435,436,5,110,0,0,436,437,5,115,0,0,437,438,5,116,
        0,0,438,439,5,97,0,0,439,440,5,110,0,0,440,441,5,99,0,0,441,442,
        5,101,0,0,442,443,5,115,0,0,443,112,1,0,0,0,444,445,5,105,0,0,445,
        446,5,115,0,0,446,447,5,69,0,0,447,448,5,109,0,0,448,449,5,112,0,
        0,449,450,5,116,0,0,450,451,5,121,0,0,451,114,1,0,0,0,452,453,5,
        115,0,0,453,454,5,117,0,0,454,455,5,109,0,0,455,116,1,0,0,0,456,
        457,5,115,0,0,457,458,5,105,0,0,458,459,5,122,0,0,459,460,5,101,
        0,0,460,118,1,0,0,0,461,462,5,105,0,0,462,463,5,110,0,0,463,464,
        5,99,0,0,464,465,5,108,0,0,465,466,5,117,0,0,466,467,5,100,0,0,467,
        468,5,101,0,0,468,469,5,115,0,0,469,120,1,0,0,0,470,471,5,101,0,
        0,471,472,5,120,0,0,472,473,5,99,0,0,473,474,5,108,0,0,474,475,5,
        117,0,0,475,476,5,100,0,0,476,477,5,101,0,0,477,478,5,115,0,0,478,
        122,1,0,0,0,479,480,5,115,0,0,480,481,5,117,0,0,481,482,5,98,0,0,
        482,483,5,83,0,0,483,484,5,101,0,0,484,485,5,113,0,0,485,486,5,117,
        0,0,486,487,5,101,0,0,487,488,5,110,0,0,488,489,5,99,0,0,489,490,
        5,101,0,0,490,124,1,0,0,0,491,492,5,115,0,0,492,493,5,117,0,0,493,
        494,5,98,0,0,494,495,5,79,0,0,495,496,5,114,0,0,496,497,5,100,0,
        0,497,498,5,101,0,0,498,499,5,114,0,0,499,500,5,101,0,0,500,501,
        5,100,0,0,501,502,5,83,0,0,502,503,5,101,0,0,503,504,5,116,0,0,504,
        126,1,0,0,0,505,506,5,112,0,0,506,507,5,114,0,0,507,508,5,101,0,
        0,508,509,5,112,0,0,509,510,5,101,0,0,510,511,5,110,0,0,511,512,
        5,100,0,0,512,128,1,0,0,0,513,514,5,108,0,0,514,515,5,97,0,0,515,
        516,5,115,0,0,516,517,5,116,0,0,517,130,1,0,0,0,518,519,5,97,0,0,
        519,520,5,112,0,0,520,521,5,112,0,0,521,522,5,101,0,0,522,523,5,
        110,0,0,523,524,5,100,0,0,524,132,1,0,0,0,525,526,5,115,0,0,526,
        527,5,121,0,0,527,528,5,109,0,0,528,529,5,109,0,0,529,530,5,101,
        0,0,530,531,5,116,0,0,531,532,5,114,0,0,532,533,5,105,0,0,533,534,
        5,99,0,0,534,535,5,68,0,0,535,536,5,105,0,0,536,537,5,102,0,0,537,
        538,5,102,0,0,538,539,5,101,0,0,539,540,5,114,0,0,540,541,5,101,
        0,0,541,542,5,110,0,0,542,543,5,99,0,0,543,544,5,101,0,0,544,134,
        1,0,0,0,545,546,5,102,0,0,546,547,5,105,0,0,547,548,5,114,0,0,548,
        549,5,115,0,0,549,550,5,116,0,0,550,136,1,0,0,0,551,552,5,100,0,
        0,552,553,5,101,0,0,553,554,5,114,0,0,554,555,5,105,0,0,555,556,
        5,118,0,0,556,557,5,101,0,0,557,138,1,0,0,0,558,559,5,98,0,0,559,
        560,5,111,0,0,560,561,5,100,0,0,561,562,5,121,0,0,562,140,1,0,0,
        0,563,564,5,105,0,0,564,565,5,110,0,0,565,566,5,105,0,0,566,567,
        5,116,0,0,567,142,1,0,0,0,568,569,5,117,0,0,569,570,5,110,0,0,570,
        571,5,105,0,0,571,572,5,111,0,0,572,573,5,110,0,0,573,144,1,0,0,
        0,574,575,5,110,0,0,575,576,5,117,0,0,576,577,5,108,0,0,577,578,
        5,108,0,0,578,146,1,0,0,0,579,580,5,108,0,0,580,581,5,101,0,0,581,
        582,5,116,0,0,582,148,1,0,0,0,583,584,5,105,0,0,584,585,5,110,0,
        0,585,150,1,0,0,0,586,587,5,45,0,0,587,592,5,62,0,0,588,589,5,226,
        0,0,589,590,5,8224,0,0,590,592,5,8217,0,0,591,586,1,0,0,0,591,588,
        1,0,0,0,592,152,1,0,0,0,593,594,5,100,0,0,594,595,5,101,0,0,595,
        596,5,102,0,0,596,154,1,0,0,0,597,601,7,1,0,0,598,600,7,2,0,0,599,
        598,1,0,0,0,600,603,1,0,0,0,601,599,1,0,0,0,601,602,1,0,0,0,602,
        156,1,0,0,0,603,601,1,0,0,0,604,606,7,3,0,0,605,604,1,0,0,0,606,
        607,1,0,0,0,607,605,1,0,0,0,607,608,1,0,0,0,608,615,1,0,0,0,609,
        611,5,46,0,0,610,612,7,3,0,0,611,610,1,0,0,0,612,613,1,0,0,0,613,
        611,1,0,0,0,613,614,1,0,0,0,614,616,1,0,0,0,615,609,1,0,0,0,615,
        616,1,0,0,0,616,158,1,0,0,0,617,623,5,34,0,0,618,622,8,4,0,0,619,
        620,5,92,0,0,620,622,9,0,0,0,621,618,1,0,0,0,621,619,1,0,0,0,622,
        625,1,0,0,0,623,621,1,0,0,0,623,624,1,0,0,0,624,627,1,0,0,0,625,
        623,1,0,0,0,626,628,3,155,77,0,627,626,1,0,0,0,627,628,1,0,0,0,628,
        629,1,0,0,0,629,635,5,34,0,0,630,631,3,49,24,0,631,632,3,155,77,
        0,632,633,3,49,24,0,633,635,1,0,0,0,634,617,1,0,0,0,634,630,1,0,
        0,0,635,160,1,0,0,0,636,637,5,116,0,0,637,638,5,114,0,0,638,639,
        5,117,0,0,639,646,5,101,0,0,640,641,5,102,0,0,641,642,5,97,0,0,642,
        643,5,108,0,0,643,644,5,115,0,0,644,646,5,101,0,0,645,636,1,0,0,
        0,645,640,1,0,0,0,646,162,1,0,0,0,647,648,5,47,0,0,648,649,5,42,
        0,0,649,653,1,0,0,0,650,652,9,0,0,0,651,650,1,0,0,0,652,655,1,0,
        0,0,653,654,1,0,0,0,653,651,1,0,0,0,654,656,1,0,0,0,655,653,1,0,
        0,0,656,657,5,42,0,0,657,658,5,47,0,0,658,659,1,0,0,0,659,660,6,
        81,0,0,660,164,1,0,0,0,661,662,5,47,0,0,662,663,5,47,0,0,663,667,
        1,0,0,0,664,666,8,5,0,0,665,664,1,0,0,0,666,669,1,0,0,0,667,665,
        1,0,0,0,667,668,1,0,0,0,668,670,1,0,0,0,669,667,1,0,0,0,670,671,
        6,82,0,0,671,166,1,0,0,0,15,0,242,351,591,601,607,613,615,621,623,
        627,634,645,653,667,1,6,0,0
    ]

class BOCLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    CONTEXT = 2
    INV = 3
    PRE = 4
    POST = 5
    SELF = 6
    FORALL = 7
    EXISTS = 8
    SELECT = 9
    COLLECT = 10
    OCLANY = 11
    OCLVOID = 12
    WS = 13
    DoubleDots = 14
    DoubleCOLON = 15
    LPAREN = 16
    RPAREN = 17
    LBRACE = 18
    RBRACE = 19
    SEMI = 20
    COLON = 21
    COMMA = 22
    DOT = 23
    EQUAL = 24
    SingleQuote = 25
    BOOLEAN_TYPE = 26
    INTEGER_TYPE = 27
    REAL_TYPE = 28
    STRING_TYPE = 29
    IF = 30
    THEN = 31
    ELSE = 32
    ENDIF = 33
    AND = 34
    OR = 35
    NOT = 36
    NOTEQUAL = 37
    LT = 38
    LE = 39
    GT = 40
    GE = 41
    PIPE = 42
    SET = 43
    BAG = 44
    SEQUENCE = 45
    ORDEREDSET = 46
    MINUS = 47
    PLUS = 48
    Divide = 49
    EMPTYSTRING = 50
    XOR = 51
    IMPLIES = 52
    OCLASTYPE = 53
    OCLISTYPEOF = 54
    OCLISKINDOF = 55
    ALLINSTANCES = 56
    ISEMPTY = 57
    SUM = 58
    SIZE = 59
    INCLUDES = 60
    EXCLUDES = 61
    SUBSEQUENCE = 62
    SUBORDEREDSET = 63
    PREPEND = 64
    LAST = 65
    APPEND = 66
    SYMMETRICDIFFERENCE = 67
    FIRST = 68
    DERIVE = 69
    BODY = 70
    Init = 71
    UNION = 72
    NULL = 73
    LET = 74
    IN = 75
    Arrow = 76
    Def = 77
    ID = 78
    NUMBER = 79
    STRING_LITERAL = 80
    BOOLEAN_LITERAL = 81
    COMMENT = 82
    LINE_COMMENT = 83

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'*'", "'context'", "'inv'", "'pre'", "'post'", "'self'", "'forAll'", 
            "'exists'", "'select'", "'collect'", "'OclAny'", "'OclVoid'", 
            "'..'", "'::'", "'('", "')'", "'{'", "'}'", "';'", "':'", "','", 
            "'.'", "'='", "'''", "'Boolean'", "'Integer'", "'Real'", "'String'", 
            "'if'", "'then'", "'else'", "'endif'", "'and'", "'or'", "'not'", 
            "'<>'", "'<'", "'<='", "'>'", "'>='", "'|'", "'Bag'", "'Sequence'", 
            "'OrderedSet'", "'-'", "'+'", "'/'", "' '", "'xor'", "'implies'", 
            "'oclAsType'", "'oclIsTypeOf'", "'oclIsKindOf'", "'allInstances'", 
            "'isEmpty'", "'sum'", "'size'", "'includes'", "'excludes'", 
            "'subSequence'", "'subOrderedSet'", "'prepend'", "'last'", "'append'", 
            "'symmetricDifference'", "'first'", "'derive'", "'body'", "'init'", 
            "'union'", "'null'", "'let'", "'in'", "'def'" ]

    symbolicNames = [ "<INVALID>",
            "CONTEXT", "INV", "PRE", "POST", "SELF", "FORALL", "EXISTS", 
            "SELECT", "COLLECT", "OCLANY", "OCLVOID", "WS", "DoubleDots", 
            "DoubleCOLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMI", 
            "COLON", "COMMA", "DOT", "EQUAL", "SingleQuote", "BOOLEAN_TYPE", 
            "INTEGER_TYPE", "REAL_TYPE", "STRING_TYPE", "IF", "THEN", "ELSE", 
            "ENDIF", "AND", "OR", "NOT", "NOTEQUAL", "LT", "LE", "GT", "GE", 
            "PIPE", "SET", "BAG", "SEQUENCE", "ORDEREDSET", "MINUS", "PLUS", 
            "Divide", "EMPTYSTRING", "XOR", "IMPLIES", "OCLASTYPE", "OCLISTYPEOF", 
            "OCLISKINDOF", "ALLINSTANCES", "ISEMPTY", "SUM", "SIZE", "INCLUDES", 
            "EXCLUDES", "SUBSEQUENCE", "SUBORDEREDSET", "PREPEND", "LAST", 
            "APPEND", "SYMMETRICDIFFERENCE", "FIRST", "DERIVE", "BODY", 
            "Init", "UNION", "NULL", "LET", "IN", "Arrow", "Def", "ID", 
            "NUMBER", "STRING_LITERAL", "BOOLEAN_LITERAL", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "CONTEXT", "INV", "PRE", "POST", "SELF", "FORALL", 
                  "EXISTS", "SELECT", "COLLECT", "OCLANY", "OCLVOID", "WS", 
                  "DoubleDots", "DoubleCOLON", "LPAREN", "RPAREN", "LBRACE", 
                  "RBRACE", "SEMI", "COLON", "COMMA", "DOT", "EQUAL", "SingleQuote", 
                  "BOOLEAN_TYPE", "INTEGER_TYPE", "REAL_TYPE", "STRING_TYPE", 
                  "IF", "THEN", "ELSE", "ENDIF", "AND", "OR", "NOT", "NOTEQUAL", 
                  "LT", "LE", "GT", "GE", "PIPE", "SET", "BAG", "SEQUENCE", 
                  "ORDEREDSET", "MINUS", "PLUS", "Divide", "EMPTYSTRING", 
                  "XOR", "IMPLIES", "OCLASTYPE", "OCLISTYPEOF", "OCLISKINDOF", 
                  "ALLINSTANCES", "ISEMPTY", "SUM", "SIZE", "INCLUDES", 
                  "EXCLUDES", "SUBSEQUENCE", "SUBORDEREDSET", "PREPEND", 
                  "LAST", "APPEND", "SYMMETRICDIFFERENCE", "FIRST", "DERIVE", 
                  "BODY", "Init", "UNION", "NULL", "LET", "IN", "Arrow", 
                  "Def", "ID", "NUMBER", "STRING_LITERAL", "BOOLEAN_LITERAL", 
                  "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "BOCL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


