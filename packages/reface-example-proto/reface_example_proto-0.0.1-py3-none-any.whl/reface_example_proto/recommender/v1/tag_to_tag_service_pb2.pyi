"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AssetType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssetTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASSET_TYPE_UNSPECIFIED: _AssetType.ValueType  # 0
    ASSET_TYPE_VIDEO: _AssetType.ValueType  # 1
    ASSET_TYPE_IMAGE: _AssetType.ValueType  # 2

class AssetType(_AssetType, metaclass=_AssetTypeEnumTypeWrapper): ...

ASSET_TYPE_UNSPECIFIED: AssetType.ValueType  # 0
ASSET_TYPE_VIDEO: AssetType.ValueType  # 1
ASSET_TYPE_IMAGE: AssetType.ValueType  # 2
global___AssetType = AssetType

@typing.final
class TagToTagAssetsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAGS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    limit: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def type(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___AssetType.ValueType]: ...
    def __init__(
        self,
        *,
        tags: collections.abc.Iterable[builtins.str] | None = ...,
        type: collections.abc.Iterable[global___AssetType.ValueType] | None = ...,
        limit: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_limit", b"_limit", "limit", b"limit"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_limit", b"_limit", "limit", b"limit", "tags", b"tags", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_limit", b"_limit"]) -> typing.Literal["limit"] | None: ...

global___TagToTagAssetsRequest = TagToTagAssetsRequest

@typing.final
class TagToTagAssetsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AssetCandidate(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ASSET_ID_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        PROB_FIELD_NUMBER: builtins.int
        asset_id: builtins.str
        type: global___AssetType.ValueType
        prob: builtins.float
        def __init__(
            self,
            *,
            asset_id: builtins.str = ...,
            type: global___AssetType.ValueType = ...,
            prob: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["asset_id", b"asset_id", "prob", b"prob", "type", b"type"]) -> None: ...

    ASSET_CANDIDATES_FIELD_NUMBER: builtins.int
    @property
    def asset_candidates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TagToTagAssetsResponse.AssetCandidate]: ...
    def __init__(
        self,
        *,
        asset_candidates: collections.abc.Iterable[global___TagToTagAssetsResponse.AssetCandidate] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["asset_candidates", b"asset_candidates"]) -> None: ...

global___TagToTagAssetsResponse = TagToTagAssetsResponse
