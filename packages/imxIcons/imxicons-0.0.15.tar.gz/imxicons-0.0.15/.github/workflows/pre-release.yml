name: Pre Release

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      actions: write

    strategy:
      matrix:
        python_version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch
        hatch env create

    - name: Lint and typecheck
      run: |
        hatch run lint-check

    - name: Test
      run: |
        hatch run test

  release:
    runs-on: ubuntu-latest
    environment: release
    needs: test
    permissions:
        contents: write
        id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install hatch

    - name: Extract version
      id: extract_version
      shell: bash
      run: |
        # Extract __version__ from the specified file
        VERSION=$(python -c "exec(open('imxIcons/__init__.py').read()); print(__version__)")
        echo "version=$VERSION" >> $GITHUB_ENV

    - name: Build package
      run: |
        hatch build
    
    - name: Create draft release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        name: ðŸš€ Version ${{ env.version }}
        tag: v${{ env.version }}
        generateReleaseNotes: true
        artifacts: |
          dist/*.whl
          dist/*.tar.gz
          source-code.zip
        token: ${{ secrets.GITHUB_TOKEN }}
