id: legion-symcc
name: Legion/SymCC
input_languages:
  - C
project_url: https://github.com/gernst/legion-symcc
repository_url: https://github.com/gernst/legion-symcc
spdx_license_identifier: MIT
benchexec_toolinfo_module: "https://gitlab.com/sosy-lab/software/benchexec/-/raw/main/benchexec/tools/legion.py"
fmtools_format_version: "2.0"
fmtools_entry_maintainers:
  - gernst

maintainers:
  - name: Gidon Ernst
    institution: LMU Munich
    country: Germany
    url: https://www.sosy-lab.org/people/ernst/

versions:
  - version: "testcomp23"
    doi: 10.5281/zenodo.10412853
    benchexec_toolinfo_options: ['-a', 'True', '-q', '-b', './binary']
    required_ubuntu_packages: []

competition_participations:
  - competition: "Test-Comp 2025"
    track: "Test Generation"
    hors_concours: true
    tool_version: "testcomp23"
    jury_member:
      name: Hors Concours
      institution: --
      country: --
      url: null
  - competition: "Test-Comp 2024"
    track: "Test Generation"
    hors_concours: true
    tool_version: "testcomp23"
    jury_member:
      name: Hors Concours
      institution: --
      country: --
      url: null
  - competition: "Test-Comp 2023"
    track: "Test Generation"
    tool_version: "testcomp23"
    jury_member:
      name: Gidon Ernst
      institution: LMU Munich
      country: Germany
      url: https://www.sosy-lab.org/people/ernst/

techniques:
  - Explicit-Value Analysis
  - Floating-Point Arithmetics
  - Guidance by Coverage Measures
  - Random Execution
  - Symbolic Execution
  - Targeted Input Generation

frameworks_solvers: []
