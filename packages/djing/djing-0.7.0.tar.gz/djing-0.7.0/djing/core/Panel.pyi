from Illuminate.Contracts.Support.JsonSerializable import JsonSerializable
from Illuminate.Helpers.Util import Util as Util
from _typeshed import Incomplete
from djing.core.Fields.Collapsable import Collapsable as Collapsable
from djing.core.Fields.FieldCollection import FieldCollection as FieldCollection
from djing.core.Http.Resources.Resource import Resource as Resource
from djing.core.Makeable import Makeable as Makeable
from djing.core.MergeValue import MergeValue as MergeValue
from djing.core.Metable import Metable as Metable
from djing.core.Metrics.HasHelpText import HasHelpText as HasHelpText
from djing.core.ResourceToolElement import ResourceToolElement as ResourceToolElement
from typing import Self

class Panel(MergeValue, HasHelpText, Makeable, Metable, Collapsable, JsonSerializable):
    component: str
    name: Incomplete
    attribute: Incomplete
    def __init__(self, name, fields=[], attribute: Incomplete | None = None) -> None: ...
    @classmethod
    def default_name_for_detail(cls, resource: Resource): ...
    @classmethod
    def default_name_for_update(cls, resource: Resource): ...
    @classmethod
    def default_name_for_create(cls, resource: Resource): ...
    def prepare_fields(self, fields): ...
    @classmethod
    def mutate(cls, name: str, fields: FieldCollection): ...
    def limit(self, limit) -> Self: ...
    def with_toolbar(self) -> Self: ...
    def with_component(self, component) -> Self: ...
    def with_attribute(self, attribute) -> Self: ...
    def json_serialize(self): ...
