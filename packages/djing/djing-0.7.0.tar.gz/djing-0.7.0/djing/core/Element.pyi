from Illuminate.Contracts.Support.JsonSerializable import JsonSerializable
from _typeshed import Incomplete
from abc import ABC
from djing.core.AuthorizedToSee import AuthorizedToSee as AuthorizedToSee
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from djing.core.Makeable import Makeable as Makeable
from djing.core.Metable import Metable as Metable

class Element(ABC, AuthorizedToSee, Makeable, Metable, JsonSerializable):
    component: Incomplete
    def __init__(self, component: Incomplete | None = None) -> None: ...
    def authorize(self, request: DjingRequest): ...
    def get_component(self): ...
    def only_on_detail(self): ...
    def json_serialize(self) -> dict: ...
