from _typeshed import Incomplete
from djing.core.Fields.Field import Field as Field
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from typing import Self

class KeyValue(Field):
    component: str
    value: Incomplete
    def resolve(self, resource, attribute: Incomplete | None = None) -> None: ...
    def key_label(self, label) -> Self: ...
    def value_label(self, label) -> Self: ...
    def action_text(self, label) -> Self: ...
    def disable_editing_keys(self, callback: bool = True) -> Self: ...
    def readonly_keys(self, request: DjingRequest) -> bool: ...
    def disable_adding_rows(self) -> Self: ...
    def disable_deleting_rows(self) -> Self: ...
    def json_serialize(self): ...
