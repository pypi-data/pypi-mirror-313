from djing.core.Contracts.FilterableField import FilterableField as FilterableField
from djing.core.Fields.Field import Field as Field
from djing.core.Fields.FieldFilterable import FieldFilterable as FieldFilterable
from djing.core.Fields.Filters.BooleanFilter import BooleanFilter as BooleanFilter
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from typing import Self

class Boolean(Field, FieldFilterable, FilterableField):
    component: str
    def make_filter(self, request: DjingRequest): ...
    def resolve_default_value(self, request: DjingRequest): ...
    def true_value(self, value) -> Self: ...
    def false_value(self, value) -> Self: ...
    def values(self, true_value, false_value) -> Self: ...
    def serialize_for_filter(self): ...
