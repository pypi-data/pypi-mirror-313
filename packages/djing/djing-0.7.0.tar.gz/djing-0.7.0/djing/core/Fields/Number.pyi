from _typeshed import Incomplete
from django.db.models import QuerySet as QuerySet
from djing.core.Fields.Field import Field as Field
from djing.core.Fields.Filters.NumberFilter import NumberFilter as NumberFilter
from djing.core.Fields.Text import Text as Text
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from typing import Self

class Number(Text):
    component: str
    def __init__(self, name, attribute: Incomplete | None = None, resolve_callback: Incomplete | None = None) -> None: ...
    def min(self, min: int) -> Self: ...
    def max(self, max: int) -> Self: ...
    def step(self, step: int) -> Self: ...
    def make_filter(self, request: DjingRequest): ...
    def serialize_for_filter(self): ...
    def json_serialize(self): ...
