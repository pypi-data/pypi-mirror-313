from Illuminate.Collections.Collection import Collection
from djing.core.Contracts.ListableField import ListableField as ListableField
from djing.core.Fields.FieldFilterable import FieldFilterable as FieldFilterable
from djing.core.Fields.ID import ID as ID
from djing.core.Fields.Unfillable import Unfillable as Unfillable
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from djing.core.Makeable import Makeable as Makeable
from djing.core.Panel import Panel as Panel
from djing.core.ResourceTool import ResourceTool as ResourceTool
from djing.core.ResourceToolElement import ResourceToolElement as ResourceToolElement
from djing.core.Util import Util as Util
from typing import Any, Self

class FieldCollection(Collection, Makeable):
    def where_instance_of(self, instance: Any) -> Self: ...
    def filter_for_index(self, request: DjingRequest, resource) -> Self: ...
    def filter_for_detail(self, request: DjingRequest, resource) -> Self: ...
    def only_create_fields(self, request: DjingRequest, resource) -> Self: ...
    def only_update_fields(self, request: DjingRequest, resource) -> Self: ...
    def authorized(self, request: DjingRequest) -> Self: ...
    def without_listable_fields(self) -> Self: ...
    def without_readonly(self, request: DjingRequest) -> Self: ...
    def without_unfillable(self) -> Self: ...
    def resolve(self, resource): ...
    def resolve_for_display(self, resource) -> Self: ...
    def with_only_filterable_fields(self): ...
    def assign_default_panel(self, label: str) -> Self: ...
