from _typeshed import Incomplete
from django.db.models import QuerySet as QuerySet
from djing.core.Contracts.FilterableField import FilterableField as FilterableField
from djing.core.Fields.Field import Field as Field
from djing.core.Fields.FieldFilterable import FieldFilterable as FieldFilterable
from djing.core.Fields.Filters.MultiSelectFilter import MultiSelectFilter as MultiSelectFilter
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from typing import Self

class MultiSelect(Field, FieldFilterable, FilterableField):
    component: str
    option_callback: Incomplete
    def fill_attribute_from_request(self, request, request_attribute, model, attribute) -> None: ...
    def options(self, options) -> Self: ...
    def display_using_labels(self) -> Self: ...
    def serialize_options(self, searchable: bool = False): ...
    def make_filter(self, request: DjingRequest): ...
    def serialize_for_filter(self): ...
    def json_serialize(self): ...
