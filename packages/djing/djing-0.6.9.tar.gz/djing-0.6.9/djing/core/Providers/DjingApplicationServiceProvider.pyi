from Illuminate.Contracts.Foundation.Application import Application as Application
from Illuminate.Support.ServiceProvider import ServiceProvider
from _typeshed import Incomplete
from djing.core.Exceptions.DjingExceptionHandler import DjingExceptionHandler as DjingExceptionHandler
from djing.core.Exceptions.InvalidLicenseException import InvalidLicenseException as InvalidLicenseException
from djing.core.Facades.Djing import Djing as Djing
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest

class DjingApplicationServiceProvider(ServiceProvider):
    app: Incomplete
    def __init__(self, app: Application) -> None: ...
    def register(self) -> None: ...
    def boot(self) -> None: ...
    def authorization(self): ...
    def register_exception_handler(self) -> None: ...
    def resources(self) -> None: ...
    def routes(self) -> None: ...
    def gate(self): ...
    def dashboards(self): ...
    def tools(self): ...
