from django.db.models import QuerySet as QuerySet
from djing.core.Contracts.FilterableField import FilterableField as FilterableField
from djing.core.Fields.Field import Field as Field
from djing.core.Fields.FieldFilterable import FieldFilterable as FieldFilterable
from djing.core.Fields.Filters.BooleanGroupFilter import BooleanGroupFilter as BooleanGroupFilter
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from typing import Self

class BooleanGroup(Field, FieldFilterable, FilterableField):
    component: str
    def make_filter(self, request: DjingRequest): ...
    def options(self, options) -> Self: ...
    def fill_attribute_from_request(self, request, request_attribute, model, attribute) -> None: ...
    def hide_true_values(self) -> Self: ...
    def hide_false_values(self) -> Self: ...
    def no_value_text(self, text) -> Self: ...
    def serialize_for_filter(self): ...
    def json_serialize(self): ...
