from Illuminate.Contracts.Support.JsonSerializable import JsonSerializable
from _typeshed import Incomplete
from django.db.models import base as base
from djing.core.Actions.ActionResponse import ActionResponse as ActionResponse
from djing.core.Actions.DispatchAction import DispatchAction as DispatchAction
from djing.core.AuthorizedToSee import AuthorizedToSee as AuthorizedToSee
from djing.core.Facades.Djing import Djing as Djing
from djing.core.Fields.FieldCollection import FieldCollection as FieldCollection
from djing.core.Http.Requests.ActionRequest import ActionRequest as ActionRequest
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from djing.core.Makeable import Makeable as Makeable
from djing.core.Metable import Metable as Metable
from djing.core.Resource import Resource as Resource
from typing import Self

class Action(AuthorizedToSee, Makeable, Metable, JsonSerializable):
    FULLSCREEN_STYLE: str
    WINDOW_STYLE: str
    destructive: bool
    authorized_to_run_action: Incomplete
    def sole(self) -> Self: ...
    def standalone(self) -> Self: ...
    def fullscreen(self) -> Self: ...
    def size(self, size) -> Self: ...
    def without_confirmation(self) -> Self: ...
    def without_action_events(self) -> Self: ...
    def is_standalone(self) -> bool: ...
    def component(self) -> str: ...
    def with_name(self, name: str) -> Self: ...
    def name(self) -> str: ...
    def uri_key(self) -> str: ...
    def is_destructive(self) -> bool: ...
    def can_run(self, run_callback) -> Self: ...
    def authorized_to_run(self, request: DjingRequest, model: base.Model) -> bool: ...
    def show_inline(self) -> Self: ...
    def only_inline(self, value: bool = True) -> Self: ...
    def except_inline(self) -> Self: ...
    def only_on_table_row(self, value: bool = True): ...
    def except_on_table_row(self): ...
    def show_on_table_row(self): ...
    def shown_on_table_row(self): ...
    def show_on_detail(self) -> Self: ...
    def only_on_detail(self, value: bool = True) -> Self: ...
    def except_on_detail(self) -> Self: ...
    def shown_on_detail(self): ...
    def show_on_index(self) -> Self: ...
    def only_on_index(self, value: bool = True) -> Self: ...
    def except_on_index(self) -> Self: ...
    def shown_on_index(self): ...
    def fields(self, request: DjingRequest): ...
    def validate_fields(self, request: DjingRequest): ...
    def handle_request(self, request: ActionRequest): ...
    def json_serialize(self): ...
