from _typeshed import Incomplete
from django.db.models import QuerySet as QuerySet, base as base
from djing.core.Contracts.QueryBuilder import QueryBuilder as QueryBuilder
from djing.core.Facades.Djing import Djing as Djing
from djing.core.Resource import Resource as Resource

class InteractsWithResources:
    def resource(self) -> type['Resource']: ...
    def new_resource(self) -> Resource: ...
    def new_resource_with(self, model: base.Model) -> Resource: ...
    def find_resource_or_fail(self, resource_id: Incomplete | None = None) -> Resource: ...
    def find_model_query(self, resource_id: Incomplete | None = None) -> QuerySet: ...
    def find_model(self, resource_id: Incomplete | None = None) -> base.Model: ...
    def find_model_or_fail(self, resource_id: Incomplete | None = None) -> base.Model: ...
    def model(self) -> base.Model: ...
