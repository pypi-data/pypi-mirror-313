from Illuminate.Contracts.Support.JsonSerializable import JsonSerializable
from _typeshed import Incomplete
from typing import Self

class ValueResult(JsonSerializable):
    def __init__(self, value) -> None: ...
    def previous(self, results, previous_label: Incomplete | None = None) -> Self: ...
    def dollars(self, symbol: str = '$') -> Self: ...
    def currency(self, symbol: str = '$') -> Self: ...
    def prefix(self, prefix: str) -> Self: ...
    def suffix(self, suffix: str) -> Self: ...
    def without_suffix_inflection(self) -> Self: ...
    def format(self, format: str) -> Self: ...
    def tooltip_format(self, tooltip_format: str) -> Self: ...
    def allow_zero_result(self, zero_result: bool = True) -> Self: ...
    def copyable(self) -> Self: ...
    def json_serialize(self): ...
