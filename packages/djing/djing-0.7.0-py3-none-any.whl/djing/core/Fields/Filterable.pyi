import abc
from abc import abstractmethod
from django.db.models import QuerySet as QuerySet
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from typing import Callable, Self

class Filterable(metaclass=abc.ABCMeta):
    def filterable(self, callback: Callable | None = None) -> Self: ...
    def apply_filter(self, request: DjingRequest, query: QuerySet, value): ...
    def resolve_filter(self, request: DjingRequest): ...
    def serialize_for_filter(self): ...
    @abstractmethod
    def make_filter(self, request: DjingRequest): ...
