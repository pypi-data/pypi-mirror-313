

from maquinas.exceptions import *
from maquinas.regular import ndfa_e

m=ndfa_e.NonDeterministicFiniteAutomaton_epsilon(
    Q=['q_0','q_1'],
     sigma=['a','b'],
     q_0='q_0',
     A=['q_0'],
     delta=[
        (('q_0','Îµ'),['q_0']),
        (('q_0','a'),['q_0']),
        (('q_1','b'),['q_0']),
        (('q_1','a'),['q_1']),
        (('q_0','b'),['q_1']),
     ])

def test_bespares_af():
    """Test if bespares was correctly generated by NDFA-e"""
    assert len(m.Q)==2
    assert len(m.sigma)==3
    assert m.q_0=='q_0'
    assert len(m.A)==1
    assert len(m.ttable)==2

def test_bespares_accepted():
    """Test valid strings for pair of bes in NDFA-e"""
    assert m.accepts("a")
    assert m.accepts("abb")
    assert m.accepts("aaabab")
    assert m.accepts("aaababaaaa")
    assert m.accepts("aaababaaaabbaaaabaaaaaabaa")

def test_bespares_rejected():
    """Test invalid strings for pair of bs in NDFA-e"""
    assert m.accepts("b")==False
    assert m.accepts("ab")==False
    assert m.accepts("abbb")==False
    assert m.accepts("aababab")==False
    assert m.accepts("aaababaaaba")==False
    assert m.accepts("baaababaaaabbaaaabaaaaaabaa")==False

def test_bespares_properties():
    """Test propierties for pair of bs in NDFA-e"""
    assert len(m.reachable_states())==2
    assert len(m.unreachable_states())==0
