

from maquinas.exceptions import *
from maquinas.contextfree.pda import *

m=PushDownAutomaton(
    Q=['q_0','q_1','q_2'],
    sigma=['a','b'],
    gamma=['A'],
    q_0='q_0',
    A=['q_2'],
    delta=[
        (('q_0','a','Z0'),[('q_0','AZ0')]),
        (('q_0','a','A'),[('q_0','AA')]),
        (('q_0','b','A'),[('q_1','epsilon')]),
        (('q_1','b','A'),[('q_1','epsilon')]),
        (('q_1','epsilon','Z0'),[('q_2','Z0')]),
    ]
)

def test_anbn_pda():
    """Test if anbn was corrected generated by PDA"""
    assert len(m.Q)==3
    assert len(m.sigma)==3
    assert len(m.gamma)==3
    assert m.q_0=="q_0"
    assert m.Z_0=="Zâ‚€"
    assert len(m.A)==1
    assert len(m.ttable)==2

def test_anbn_accepted():
    """Test valid strings for anbn by PDA"""
    assert m.accepts("ab")
    assert m.accepts("aabb")
    assert m.accepts("aaabbb")
    assert m.accepts("aaaabbbb")
    assert m.accepts("a"*100+"b"*100)

def test_anbn_rejected():
    """Test invalid strings for anbn by PDA"""
    assert m.accepts("")==False
    assert m.accepts("b")==False
    assert m.accepts("abbb")==False
    assert m.accepts("aababab")==False
    assert m.accepts("aaababaaaba")==False
    assert m.accepts("baaababaaaabbaaaabaaaaaabaa")==False

