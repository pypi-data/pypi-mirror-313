{"version":3,"file":"index.He2go7UL.js","sources":["../../../../lib/src/components/elements/ImageList/styled-components.ts","../../../../lib/src/components/elements/ImageList/ImageList.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledImageList = styled.div(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  // Not supported in Safari, but at least it's not a regression for those users:\n  rowGap: theme.spacing.lg,\n  maxWidth: \"100%\",\n}))\n\nexport const StyledImageContainer = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"stretch\",\n  width: \"auto\",\n  flexGrow: 0,\n})\n\nexport const StyledCaption = styled.div(({ theme }) => ({\n  fontFamily: theme.genericFonts.bodyFont,\n  fontSize: theme.fontSizes.sm,\n  color: theme.colors.fadedText60,\n  textAlign: \"center\",\n  marginTop: theme.spacing.xs,\n  wordWrap: \"break-word\",\n  padding: theme.spacing.threeXS,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { CSSProperties, ReactElement } from \"react\"\n\nimport {\n  ImageList as ImageListProto,\n  Image as ImageProto,\n} from \"@streamlit/lib/src/proto\"\nimport { StreamlitEndpoints } from \"@streamlit/lib/src/StreamlitEndpoints\"\nimport Toolbar, {\n  StyledToolbarElementContainer,\n} from \"@streamlit/lib/src/components/shared/Toolbar\"\nimport { ElementFullscreenContext } from \"@streamlit/lib/src/components/shared/ElementFullscreen/ElementFullscreenContext\"\nimport { useRequiredContext } from \"@streamlit/lib/src/hooks/useRequiredContext\"\nimport { withFullScreenWrapper } from \"@streamlit/lib/src/components/shared/FullScreenWrapper\"\n\nimport {\n  StyledCaption,\n  StyledImageContainer,\n  StyledImageList,\n} from \"./styled-components\"\n\nexport interface ImageListProps {\n  endpoints: StreamlitEndpoints\n  width: number\n  element: ImageListProto\n  disableFullscreenMode?: boolean\n}\n\n/**\n * @see WidthBehavior on the Backend\n * @see the Image.proto file\n */\nenum WidthBehavior {\n  OriginalWidth = -1,\n  /** @deprecated */\n  ColumnWidth = -2,\n  /** @deprecated */\n  AutoWidth = -3,\n  MinImageOrContainer = -4,\n  MaxImageOrContainer = -5,\n}\n\n/**\n * Functional element for a horizontal list of images.\n */\nfunction ImageList({\n  element,\n  width,\n  endpoints,\n  disableFullscreenMode,\n}: Readonly<ImageListProps>): ReactElement {\n  const {\n    expanded: isFullScreen,\n    width: fullScreenWidth,\n    height,\n    expand,\n    collapse,\n  } = useRequiredContext(ElementFullscreenContext)\n\n  // The width field in the proto sets the image width, but has special\n  // cases the values in the WidthBehavior enum.\n  let containerWidth: number | undefined\n  const protoWidth = element.width\n\n  if (\n    [\n      WidthBehavior.OriginalWidth,\n      WidthBehavior.AutoWidth,\n      WidthBehavior.MinImageOrContainer,\n    ].includes(protoWidth)\n  ) {\n    // Use the original image width.\n    containerWidth = undefined\n  } else if (\n    [WidthBehavior.ColumnWidth, WidthBehavior.MaxImageOrContainer].includes(\n      protoWidth\n    )\n  ) {\n    // Use the column width unless the image is currently fullscreen, then use the fullscreen width\n    containerWidth = isFullScreen ? fullScreenWidth : width\n  } else if (protoWidth > 0) {\n    // Set the image width explicitly.\n    containerWidth = protoWidth\n  } else {\n    throw Error(`Invalid image width: ${protoWidth}`)\n  }\n\n  const imgStyle: CSSProperties = {}\n\n  if (height && isFullScreen) {\n    imgStyle.maxHeight = height\n    imgStyle.objectFit = \"contain\"\n  } else {\n    imgStyle.width = containerWidth\n    // Cap the image width, so it doesn't exceed its parent container width\n    imgStyle.maxWidth = \"100%\"\n  }\n\n  return (\n    <StyledToolbarElementContainer\n      width={containerWidth}\n      height={height}\n      useContainerWidth={isFullScreen}\n    >\n      <Toolbar\n        target={StyledToolbarElementContainer}\n        isFullScreen={isFullScreen}\n        onExpand={expand}\n        onCollapse={collapse}\n        disableFullscreenMode={disableFullscreenMode}\n      ></Toolbar>\n      <StyledImageList\n        className=\"stImage\"\n        data-testid=\"stImage\"\n        style={{ width: containerWidth }}\n      >\n        {element.imgs.map((iimage, idx): ReactElement => {\n          const image = iimage as ImageProto\n          return (\n            <StyledImageContainer data-testid=\"stImageContainer\" key={idx}>\n              <img\n                style={imgStyle}\n                src={endpoints.buildMediaURL(image.url)}\n                alt={idx.toString()}\n              />\n              {image.caption && (\n                <StyledCaption data-testid=\"stImageCaption\" style={imgStyle}>\n                  {` ${image.caption} `}\n                </StyledCaption>\n              )}\n            </StyledImageContainer>\n          )\n        })}\n      </StyledImageList>\n    </StyledToolbarElementContainer>\n  )\n}\n\nexport default withFullScreenWrapper(ImageList)\n"],"names":["StyledImageList","styled","theme","display","flexDirection","flexWrap","rowGap","spacing","lg","maxWidth","StyledImageContainer","alignItems","width","flexGrow","StyledCaption","fontFamily","genericFonts","bodyFont","fontSize","fontSizes","sm","color","colors","fadedText60","textAlign","marginTop","xs","wordWrap","padding","threeXS","WidthBehavior","ImageList","element","endpoints","disableFullscreenMode","expanded","isFullScreen","fullScreenWidth","height","expand","collapse","useRequiredContext","ElementFullscreenContext","containerWidth","protoWidth","includes","undefined","Error","imgStyle","maxHeight","objectFit","StyledToolbarElementContainer","useContainerWidth","Toolbar","target","onExpand","onCollapse","className","data-testid","style","imgs","map","iimage","idx","image","img","src","buildMediaURL","url","alt","toString","caption","_jsx","withFullScreenWrapper"],"mappings":"8KAkBaA,MAAAA,IAAkBC,MAAAA,mBAAW,CAAA,EAAA,CAAC,CAAEC,MAAAA,MAAa,CACxDC,QAAS,OACTC,cAAe,MACfC,SAAU,OAEVC,OAAQJ,EAAMK,QAAQC,GACtBC,SAAU,MACZ,EAAG,EAEUC,IAAuBT,MAAAA,mBAAW,CAAA,EAAA,CAC7CE,QAAS,OACTC,cAAe,SACfO,WAAY,UACZC,MAAO,OACPC,SAAU,CACZ,CAAE,EAEWC,IAAgBb,MAAAA,mBAAW,CAAA,EAAA,CAAC,CAAEC,MAAAA,MAAa,CACtDa,WAAYb,EAAMc,aAAaC,SAC/BC,SAAUhB,EAAMiB,UAAUC,GAC1BC,MAAOnB,EAAMoB,OAAOC,YACpBC,UAAW,SACXC,UAAWvB,EAAMK,QAAQmB,GACzBC,SAAU,aACVC,QAAS1B,EAAMK,QAAQsB,OACzB,EAAG,SCIEC,SAAAA,EAAAA,uCAEaA,EAAAA,EAAA,YAAA,EAAA,EAAA,cAEAA,EAAAA,EAAA,UAAA,EAAA,EAAA,kHAJbA,IAAAA,EAAAA,CAAAA,EAAAA,EAaL,SAASC,EAAU,CACjBC,QAAAA,EACApB,MAAAA,EACAqB,UAAAA,EACAC,sBAAAA,GACyB,CACnB,KAAA,CACJC,SAAUC,EACVxB,MAAOyB,EACPC,OAAAA,EACAC,OAAAA,EACAC,SAAAA,CAAAA,EACEC,EAAmBC,CAAAA,EAInBC,IAAAA,EACJ,MAAMC,EAAaZ,EAAQpB,MAGzB,GAAA,WAIEiC,SAASD,CACX,EAEiBE,EAAAA,eAEjB,QAA+DD,SAC7DD,CAEF,EAEAD,EAAiBP,EAAeC,EAAkBzB,UACzCgC,EAAa,EAELA,EAAAA,MAEXG,OAAAA,MAAM,wBAAwBH,GAAY,EAGlD,MAAMI,EAA0B,CAAA,EAEhC,OAAIV,GAAUF,GACZY,EAASC,UAAYX,EACrBU,EAASE,UAAY,YAErBF,EAASpC,MAAQ+B,EAEjBK,EAASvC,SAAW,UAInB0C,EAAAA,CACCvC,MAAO+B,EACPL,OAAAA,EACAc,kBAAmBhB,cAElBiB,EAAAA,CACCC,OAAQH,EACRf,aAAAA,EACAmB,SAAUhB,EACViB,WAAYhB,EACZN,sBAAAA,CAAAA,KAEDlC,EAAAA,CACCyD,UAAU,UACVC,cAAY,UACZC,MAAO,CAAE/C,MAAO+B,CAAe,EAE9BX,SAAAA,EAAQ4B,KAAKC,IAAI,CAACC,EAAQC,IAAAA,CACzB,MAAMC,EAAQF,EACd,SACGpD,EAAAA,CAAqBgD,cAAY,+BAC/BO,MAAAA,CACCN,MAAOX,EACPkB,IAAKjC,EAAUkC,cAAcH,EAAMI,GAAG,EACtCC,IAAKN,EAAIO,SAAQ,CAAA,GAElBN,EAAMO,SACLC,EAAC1D,EAAAA,CAAc4C,cAAY,iBAAiBC,MAAOX,EAChD,SAAA,IAAIgB,EAAMO,OAAO,GAAA,KARkCR,CAAAA,CAAAA,CAa9D,CAAA,KAIR,CAEA,MAAeU,EAAAA,EAAsB1C,CAAU"}