[build-system]
requires = ["setuptools>=60", "wheel", "setuptools_scm>=8.0", "numpy"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]




[project]
name = "halomod"
description = "A Halo Model calculator built on hmf"
readme = "README.rst"
authors = [
    {name="Steven Murray", email="murray.steveng@gmail.com"}
]
license = {text="MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Natural Language :: English",
	"Topic :: Scientific/Engineering :: Physics",
	"Topic :: Scientific/Engineering :: Astronomy",
]
dependencies = [
    "hmf",
    "mpmath",
    "numpy",
    "scipy>=1.12",
    "colossus",
    "hankel",
]
dynamic = ["version"]


[project.optional-dependencies]
docs = [
	"Sphinx>=1.7.5",
	"numpydoc>=0.8.0",
	"nbsphinx",
    "ipython",
    "furo",
]
tests = [
	"coverage>=4.5.1",
	"pytest>=3.5.1",
	"pytest-cov>=2.5.1",
	"pytest-plt",
	"pre-commit",
	"mpmath>=1.0.0",
	"numba",
]
dev = [
    "halomod[docs,tests]"
]
all = [
    "halomod[dev]",
	"camb>1.0.0,<2.0",
]

[tool.pytest.ini_options]
addopts = "--cov halomod --cov-report term-missing --verbose"
norecursedirs = [
	"dist",
	"build",
	".tox",
]
testpaths = "tests"

[tool.ruff]
line-length = 100
target-version = "py39"
exclude  = ['devel']

[tool.ruff.lint]
extend-select = [
  "E",    # pycodestyle
  "W",    # pycodestyle warning
  "UP",   # pyupgrade
  "C90",  # mccabe complexity
   "I",    # isort
#   "N",    # pep8-naming
#   "D",    # docstyle
   # "ANN"   # type annotations
   "B",    # bugbear
   "A",    # builtins
   "C4",   # comprehensions
   "DTZ",  # datetime
   "FA",   # future annotations
   "PIE",  # flake8-pie
   "T",    # print statements
#   "PT",   # pytest-style
   "Q",    # quotes
   "SIM",  # simplify
   "PTH",  # use Pathlib
#   "ERA",  # kill commented code
   "NPY",  # numpy-specific rules
   "PERF", # performance
   # "FURB", # refurb
#   "RUF",  # ruff-specific rules
]
ignore = [
    "DTZ007",   # use %z in strptime
    "A003",     # class attribute shadows python builtin
    "B008",     # function call in argument defaults
]
[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "D103",  # ignore missing docstring in tests
    "T",     # print statements
]
"docs/conf.py" = [
    "A",  # conf.py can shadow builtins
    "ERA",
]
"docs/examples/*.ipynb" = [
    "T", # allow printing
]
[tool.ruff.lint.pydocstyle]
convention = 'numpy'

[tool.ruff.lint.mccabe]
max-complexity = 15
