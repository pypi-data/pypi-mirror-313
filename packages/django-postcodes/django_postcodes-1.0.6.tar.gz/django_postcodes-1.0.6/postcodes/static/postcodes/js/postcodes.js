(()=>{"use strict";let t=0;function e(t){return""===t||"0"===t||0===t||null==t||null==t}const n={};function i(t,e=null,i=null){return i||(i={}),function(t,e){return t&&t.hasAttribute("pattern")}(t)?function(t,e){let i=t.getAttribute("pattern");if(i in n)return n[i];const o=new RegExp(i,"i");return n[i]=o,o}(t).test(e||t.value)?(t.classList.remove(i.pattern||"is-invalid-pattern"),!0):(t.classList.add(i.pattern||"is-invalid-pattern"),!1):function(t){return t&&t.hasAttribute("min")}(t)?function(t,e){let n=t.getAttribute("min");return!n||parseFloat(e)>=parseFloat(n)}(t,e||t.value)?(t.classList.remove(i.min||"is-invalid-min"),!0):(t.classList.add(i.min||"is-invalid-min"),!1):!function(t){return t&&t.hasAttribute("max")}(t)||(function(t,e){let n=t.getAttribute("max");return!n||parseFloat(e)<=parseFloat(n)}(t,e||t.value)?(t.classList.remove(i.max||"is-invalid-max"),!0):(t.classList.add(i.max||"is-invalid-max"),!1))}function o(t){return"string"==typeof t?document.querySelector(t):t}var r=function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{d(i.next(t))}catch(t){r(t)}}function a(t){try{d(i.throw(t))}catch(t){r(t)}}function d(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}d((i=i.apply(t,e||[])).next())}))};const s={empty:"is-empty",valid:"is-valid",invalid:"is-invalid",pattern:"is-invalid-pattern",min:"is-invalid-min",max:"is-invalid-max"},a=Object.values(s);function d(e,n,i){return r(this,void 0,void 0,(function*(){if(e=null==e?void 0:e.trim(),n=null==n?void 0:n.trim(),!e)throw new Error("No postcode provided");if(!n)throw new Error("No home number provided");let o=i.buildRequest||function(t,e){let n=function(t){return t.startsWith("http")||(t.startsWith("/")&&(t=t.slice(1)),t=`${window.location.origin}/${t}`),new URL(t)}(c);return n.searchParams.append("postcode",t),n.searchParams.append("home_number",e.toString()),{input:n,init:{method:"GET",headers:{"Content-Type":"application/json"}}}};const{input:r,init:s}=o(e,n),a=yield function(e,n){const i=fetch(e,n),o=Date.now();return t=o,new Promise(((e,n)=>{i.then((i=>{t===o&&(i.ok?e(i):n(i))})).catch(n)}))}(r,s);let d;try{d=yield a.json()}catch(t){throw new Error("Failed to parse response from postcode lookup service")}if(!("success"in d))throw new Error('Invalid response from postcode lookup service, missing "success" field');if(!d.success)throw d.error?new Error(d.error):new Error("Failed to fetch postcode data");if(!("data"in d))throw new Error('Invalid response from postcode lookup service, missing "data" field');const l=d.data;return i.success&&i.success(l),l}))}const c=document.currentScript.dataset.apiUrl;if(!c)throw new Error("No API URL provided, cannot initialize postcode lookup module");console.log("Postcode lookup module initialized with API URL:",c),window.lookupPostcode=function(t){return r(this,void 0,void 0,(function*(){let n=t.postcode,r=t.home_number;if(t&&t.bind&&t.bind.postcode&&t.bind.home_number){let c,l,u;const m=t.bind,p=()=>{c.classList.remove(s.invalid),l.classList.remove(s.invalid),c.classList.add(s.valid),l.classList.add(s.valid)},v=()=>{c.classList.remove(s.valid),l.classList.remove(s.valid)},f=()=>{if(!n&&!r){for(let t=0;t<a.length;t++){const e=a[t];c.classList.remove(e),l.classList.remove(e)}for(const t of u){const e=m[t];e&&(e.value="")}return!0}return!1},h=t=>{p();for(const i of u){const o=m[i];if(o){const d=t[i];for(const t of a)o.classList.remove(t);e(d)||!n&&!r?o.classList.add(s.empty):(o.classList.remove(s.empty),o.value=d.toString())}}},b=e=>{t&&t.error&&t.error(e),t.validate&&(c.classList.add(s.invalid),l.classList.add(s.invalid))},w=e=>(e.classList.add("postcodes-input"),()=>{v(),n=c.value,r=l.value,f()||t.validate&&!i(e,null,s)||d(n,r,t).then(h).catch(b)}),L=()=>{if(c=o(t.bind.postcode),l=o(t.bind.home_number),delete t.bind.postcode,delete t.bind.home_number,u=Object.keys(t.bind),0==u.length)throw new Error("At least postcode, home_number and one other field must be bound");for(let t=0;t<u.length;t++){const e=u[t];m[e]=o(m[e])}for(let t=0;t<u.length;t++){const e=u[t],n=m[e];n&&(n.classList.add("postcodes-input"),n.addEventListener("change",(()=>{n.classList.remove(s.empty),i(n,null,s)})))}c.addEventListener("input",w(c)),l.addEventListener("input",w(l))};"complete"===document.readyState||"interactive"===document.readyState?L():document.addEventListener("DOMContentLoaded",L)}else{if(t&&t.bind&&(!t.bind.postcode||!t.bind.home_number))throw new Error("Both postcode and home_number must be bound to use the bind option");try{return yield d(n,r,t)}catch(e){throw t&&t.error&&t.error(e),e}}}))}})();