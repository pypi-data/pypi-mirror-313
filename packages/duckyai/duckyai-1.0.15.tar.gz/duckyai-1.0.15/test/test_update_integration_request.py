# coding: utf-8

"""
    RAG as a Service API

    API for managing RAG configurations, integrations, prompt templates, and backtesting.

    The version of the OpenAPI document: 1.0.0
    Contact: support@ducky.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lycoai-ducky-sdk.models.update_integration_request import UpdateIntegrationRequest

class TestUpdateIntegrationRequest(unittest.TestCase):
    """UpdateIntegrationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateIntegrationRequest:
        """Test UpdateIntegrationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateIntegrationRequest`
        """
        model = UpdateIntegrationRequest()
        if include_optional:
            return UpdateIntegrationRequest(
                integration_name = '',
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                auth_details = {"access_token":"access_token","refresh_token":"refresh_token","api_key":"api_key","token_expiry":"2000-01-23T04:56:07.000+00:00"},
                metadata_fields = {"dynamic_fields":{"key":{"description":"description","type":"type"}},"static_fields":{"key":"static_fields"}}
            )
        else:
            return UpdateIntegrationRequest(
        )
        """

    def testUpdateIntegrationRequest(self):
        """Test UpdateIntegrationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
