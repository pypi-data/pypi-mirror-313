# coding: utf-8

"""
    RAG as a Service API

    API for managing RAG configurations, integrations, prompt templates, and backtesting.

    The version of the OpenAPI document: 1.0.0
    Contact: support@ducky.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lycoai-ducky-sdk.api.hub_api import HubApi


class TestHubApi(unittest.TestCase):
    """HubApi unit test stubs"""

    def setUp(self) -> None:
        self.api = HubApi()

    def tearDown(self) -> None:
        pass

    def test_create_index(self) -> None:
        """Test case for create_index

        Create an index
        """
        pass

    def test_create_project(self) -> None:
        """Test case for create_project

        Create a project
        """
        pass

    def test_delete_document(self) -> None:
        """Test case for delete_document

        Delete a document
        """
        pass

    def test_delete_index(self) -> None:
        """Test case for delete_index

        Delete an index
        """
        pass

    def test_delete_project(self) -> None:
        """Test case for delete_project

        Delete a project
        """
        pass

    def test_get_document(self) -> None:
        """Test case for get_document

        Get a document by ID with pagination
        """
        pass

    def test_get_organizations(self) -> None:
        """Test case for get_organizations

        Get Organizations
        """
        pass

    def test_get_project(self) -> None:
        """Test case for get_project

        Get a project by ID
        """
        pass

    def test_index_document_file(self) -> None:
        """Test case for index_document_file

        Index a document from a file
        """
        pass

    def test_index_document_text(self) -> None:
        """Test case for index_document_text

        Index a document from text content
        """
        pass

    def test_list_indexes(self) -> None:
        """Test case for list_indexes

        List indexes within a project
        """
        pass

    def test_list_projects(self) -> None:
        """Test case for list_projects

        List projects
        """
        pass

    def test_retrieve_documents(self) -> None:
        """Test case for retrieve_documents

        Retrieve documents with dynamic configuration and variant name
        """
        pass

    def test_sign_in(self) -> None:
        """Test case for sign_in

        User Sign In
        """
        pass


if __name__ == '__main__':
    unittest.main()
