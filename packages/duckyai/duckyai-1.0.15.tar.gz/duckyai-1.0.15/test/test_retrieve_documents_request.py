# coding: utf-8

"""
    RAG as a Service API

    API for managing RAG configurations, integrations, prompt templates, and backtesting.

    The version of the OpenAPI document: 1.0.0
    Contact: support@ducky.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lycoai-ducky-sdk.models.retrieve_documents_request import RetrieveDocumentsRequest

class TestRetrieveDocumentsRequest(unittest.TestCase):
    """RetrieveDocumentsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RetrieveDocumentsRequest:
        """Test RetrieveDocumentsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RetrieveDocumentsRequest`
        """
        model = RetrieveDocumentsRequest()
        if include_optional:
            return RetrieveDocumentsRequest(
                index_name = '',
                query = '',
                evaluation_id = '',
                variant_name = '',
                retrieval_strategy = {"result_type":"result_type","rerank":true,"contextual_compression":{"filter_type":"filter_type","enabled":true},"corrective_retrieval":{"fallback":"fallback","enabled":true},"alpha":6.027456183070403,"k":0,"store_type":"store_type"},
                query_translation_strategy = {"semantic_expansion":true,"hyde":true,"multiquery":true,"step_back":true,"decomposition":true,"rag_fusion":true},
                query_structuring = {"enabled":true},
                filter = {
                    'key' : {
                        'key' : None
                        }
                    }
            )
        else:
            return RetrieveDocumentsRequest(
        )
        """

    def testRetrieveDocumentsRequest(self):
        """Test RetrieveDocumentsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
