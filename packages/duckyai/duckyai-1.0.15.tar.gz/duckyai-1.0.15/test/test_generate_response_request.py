# coding: utf-8

"""
    RAG as a Service API

    API for managing RAG configurations, integrations, prompt templates, and backtesting.

    The version of the OpenAPI document: 1.0.0
    Contact: support@ducky.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lycoai-ducky-sdk.models.generate_response_request import GenerateResponseRequest

class TestGenerateResponseRequest(unittest.TestCase):
    """GenerateResponseRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GenerateResponseRequest:
        """Test GenerateResponseRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GenerateResponseRequest`
        """
        model = GenerateResponseRequest()
        if include_optional:
            return GenerateResponseRequest(
                max_completion_tokens = 56,
                index_name = '',
                retrieval_query = '',
                prompt = '',
                prompt_template_id = '',
                variables = {
                    'key' : ''
                    },
                evaluation_id = '',
                variant_name = '',
                retrieval_strategy = {"result_type":"result_type","rerank":true,"contextual_compression":{"filter_type":"filter_type","enabled":true},"corrective_retrieval":{"fallback":"fallback","enabled":true},"k":6},
                self_correction_strategy = {"fallback_to_web_search":true,"check_hallucinations":true,"enabled":true},
                query_translation_strategy = {"semantic_expansion":true,"multiquery":true,"decomposition":true}
            )
        else:
            return GenerateResponseRequest(
        )
        """

    def testGenerateResponseRequest(self):
        """Test GenerateResponseRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
