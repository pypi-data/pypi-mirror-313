# coding: utf-8

"""
    RAG as a Service API

    API for managing RAG configurations, integrations, prompt templates, and backtesting.

    The version of the OpenAPI document: 1.0.0
    Contact: support@ducky.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lycoai-ducky-sdk.models.evaluation_results_response import EvaluationResultsResponse

class TestEvaluationResultsResponse(unittest.TestCase):
    """EvaluationResultsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EvaluationResultsResponse:
        """Test EvaluationResultsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EvaluationResultsResponse`
        """
        model = EvaluationResultsResponse()
        if include_optional:
            return EvaluationResultsResponse(
                status = '',
                items_evaluated = 56,
                items_remaining = 56,
                evaluation_results = [
                    {"retrieval_strategy":"{}","prompt_template_id":"prompt_template_id","evaluator_scores":{"key":1.4658129805029452},"query_translation_strategy":"{}","variant_name":"variant_name","self_correction_strategy":"{}"}
                    ]
            )
        else:
            return EvaluationResultsResponse(
        )
        """

    def testEvaluationResultsResponse(self):
        """Test EvaluationResultsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
