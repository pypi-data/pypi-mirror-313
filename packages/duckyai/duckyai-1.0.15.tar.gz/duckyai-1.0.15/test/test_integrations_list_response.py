# coding: utf-8

"""
    RAG as a Service API

    API for managing RAG configurations, integrations, prompt templates, and backtesting.

    The version of the OpenAPI document: 1.0.0
    Contact: support@ducky.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lycoai-ducky-sdk.models.integrations_list_response import IntegrationsListResponse

class TestIntegrationsListResponse(unittest.TestCase):
    """IntegrationsListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IntegrationsListResponse:
        """Test IntegrationsListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IntegrationsListResponse`
        """
        model = IntegrationsListResponse()
        if include_optional:
            return IntegrationsListResponse(
                integrations = [
                    {"integration_name":"integration_name","integration_id":"integration_id","synced_up_to":"2000-01-23T04:56:07.000+00:00","sync_start_date":"2000-01-23T04:56:07.000+00:00","last_sync_attempt":"2000-01-23T04:56:07.000+00:00","next_sync":"2000-01-23T04:56:07.000+00:00","index_id":"index_id","integration_type":"integration_type","items_indexed":0}
                    ]
            )
        else:
            return IntegrationsListResponse(
        )
        """

    def testIntegrationsListResponse(self):
        """Test IntegrationsListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
