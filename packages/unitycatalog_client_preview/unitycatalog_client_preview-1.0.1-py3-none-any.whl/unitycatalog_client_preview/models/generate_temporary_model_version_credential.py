# coding: utf-8

"""
    Unity Catalog API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictInt, StrictStr
from unitycatalog_client_preview.models.model_version_operation import ModelVersionOperation

class GenerateTemporaryModelVersionCredential(BaseModel):
    """
    GenerateTemporaryModelVersionCredential
    """
    catalog_name: StrictStr = Field(default=..., description="Catalog name for which temporary credentials are generated.  Can be obtained from models/{full_name} (get model info) API. ")
    schema_name: StrictStr = Field(default=..., description="Schema name for which temporary credentials are generated.  Can be obtained from models/{full_name} (get model info) API. ")
    model_name: StrictStr = Field(default=..., description="Model name for which temporary credentials are generated.  Can be obtained from models/{full_name} (get model info) API. ")
    version: StrictInt = Field(default=..., description="Model version for which temporary credentials are generated. ")
    operation: ModelVersionOperation = Field(...)
    __properties = ["catalog_name", "schema_name", "model_name", "version", "operation"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> GenerateTemporaryModelVersionCredential:
        """Create an instance of GenerateTemporaryModelVersionCredential from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> GenerateTemporaryModelVersionCredential:
        """Create an instance of GenerateTemporaryModelVersionCredential from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return GenerateTemporaryModelVersionCredential.parse_obj(obj)

        _obj = GenerateTemporaryModelVersionCredential.parse_obj({
            "catalog_name": obj.get("catalog_name"),
            "schema_name": obj.get("schema_name"),
            "model_name": obj.get("model_name"),
            "version": obj.get("version"),
            "operation": obj.get("operation")
        })
        return _obj


