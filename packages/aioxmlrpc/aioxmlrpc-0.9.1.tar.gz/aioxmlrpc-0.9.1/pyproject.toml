[project]
name = "aioxmlrpc"
description = "XML-RPC client for asyncio"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Networking",
    "Typing :: Typed",
]
version = "0.9.1"
readme = "README.rst"
authors = [
    { name = "Guillaume Gauvrit", email = "guillaume@gauvr.it" },
]
requires-python = ">=3.9"
dependencies = [
    "httpx >=0.24, <1",
]

[project.license]
text = "MIT License"

[project.urls]
Homepage = "https://mardiros.github.io/aioxmlrpc"
Documentation = "https://mardiros.github.io/aioxmlrpc"
Repository = "https://github.com/mardiros/aioxmlrpc.git"
Issues = "https://github.com/mardiros/aioxmlrpc/issues"
Changelog = "https://mardiros.github.io/aioxmlrpc/user/changelog.html"

[tool.pdm.build]
includes = [
    "src",
    "CHANGELOG.rst",
    "CONTRIBUTORS.rst",
]
excludes = [
    "tests",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
overrides = [
    { disallow_any_generics = true, disallow_untyped_defs = true, module = "aioxmlrpc.*" },
]

[tool.pyright]
ignore = [
    "examples",
]
include = [
    "src",
    "tests",
]
reportPrivateUsage = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportShadowedImports = false
typeCheckingMode = "strict"
venvPath = ".venv"

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
    "\\s+\\.\\.\\.$",
    "# coverage: ignore",
]

[dependency-groups]
dev = [
    "mypy>=1.13.0,<2",
    "pytest >=8.3.3,<9",
    "pytest-asyncio >=0.24.0",
    "pytest-cov >=6.0.0,<7",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
