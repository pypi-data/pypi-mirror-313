[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.poetry]
name = "afxdl"
version = "0.2.1"
description = "Download audio from aphextwin.warp.net"
authors = [
  "eggplants <w10776e8w@yahoo.co.jp>",
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/eggplants/afxdl"
keywords = [
  "aphextwin",
  "warp",
  "downloader",
  "mp3",
  "id3-tag",
  "cli",
  "commandline-tool",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Multimedia :: Sound/Audio",
  "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.3"
pydantic = "^2.6.4"
mutagen = "^1.47.0"

[tool.poetry.group.dev.dependencies]
pre-commit = ">=3.7,<5.0"
pytest = "^8.1.1"
pytest-cov = ">=5,<7"
taskipy = "^1.12.2"
black = "^24.3.0"
ruff = ">=0.5.0,<0.9.0"
types-beautifulsoup4 = "^4.12.0.20240229"
types-requests = "^2.31.0.20240311"
mypy = "^1.9.0"

[tool.poetry.scripts]
afxdl = "afxdl.main:main"

[tool.black]
target-version = [
  "py312",
]

[tool.ruff]
lint.select = [
  "ALL",
]
lint.ignore = [
  "D211", # No blank lines allowed before class docstring
  "D213", # Multi-line docstring summary should start at the second line
]
lint.per-file-ignores."main.py" = [
  "T201", # `print` found
]
lint.per-file-ignores."tests/*.py" = [
  "D",
  "S101", # Use of assert detected
]
lint.pydocstyle.convention = "google"

[tool.mypy]
python_version = "3.12"
strict = true

# much harder
# disallow_any_decorated = true
# disallow_any_explicit = true
# disallow_any_expr = true
disallow_any_unimported = true
implicit_optional = false      # for mypy<1.0
strict_concatenate = true
warn_unreachable = true

# message
pretty = true
show_column_numbers = true
show_error_context = true

plugins = [
  "pydantic.mypy",
]

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "strict"

[tool.pydantic-mypy]
# frozen = true
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.taskipy.tasks]
test = "pytest --cov=afxdl --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"
