# coding: utf-8

"""
    Xray REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.test_run_iteration_information import TestRunIterationInformation

class TestTestRunIterationInformation(unittest.TestCase):
    """TestRunIterationInformation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestRunIterationInformation:
        """Test TestRunIterationInformation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestRunIterationInformation`
        """
        model = TestRunIterationInformation()
        if include_optional:
            return TestRunIterationInformation(
                id = 135,
                test_run_id = 83,
                status = 'FAIL',
                color = '#D45D52',
                parameters = [
                    openapi_client.models.dataset_parameter.DatasetParameter(
                        name = '', 
                        value = '', )
                    ],
                steps = [
                    openapi_client.models.iteration_step_information.IterationStepInformation(
                        index = 1, 
                        fields = {"Action":{"type":"Wiki","value":{"raw":"When prompted to login I fill the username field with John and the password with 12345","rendered":"<p>When prompted to login I fill the username field with John and the password with 12345</p>"}},"Expected Result":{"type":"Wiki","value":{"raw":"I'm authenticated!","rendered":"<p>I'm authenticated!</p>"}}}, )
                    ]
            )
        else:
            return TestRunIterationInformation(
        )
        """

    def testTestRunIterationInformation(self):
        """Test TestRunIterationInformation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
