# coding: utf-8

"""
    Xray REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_iteration import UpdateIteration

class TestUpdateIteration(unittest.TestCase):
    """UpdateIteration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateIteration:
        """Test UpdateIteration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateIteration`
        """
        model = UpdateIteration()
        if include_optional:
            return UpdateIteration(
                status = 'PASS',
                steps = [
                    openapi_client.models.update_step_result.UpdateStepResult(
                        id = 85778, 
                        status = 'FAIL', 
                        comment = 'Comment on step', 
                        defects = openapi_client.models.update_step_result_defects.UpdateStepResult_defects(
                            add = ["CALC-123","CALC-765"], 
                            remove = ["CALC-563","CALC-744"], ), 
                        evidences = openapi_client.models.update_step_result_evidences.UpdateStepResult_evidences(
                            add = [
                                openapi_client.models.file.File(
                                    data = 'gsddfgdsfg...(base64)', 
                                    filename = 'example.txt', 
                                    content_type = 'plain/text', )
                                ], 
                            remove = ["CALC-124","CALC- 657"], ), 
                        actual_result = 'Actual result on step', )
                    ]
            )
        else:
            return UpdateIteration(
        )
        """

    def testUpdateIteration(self):
        """Test UpdateIteration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
