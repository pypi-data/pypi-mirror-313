# coding: utf-8

"""
    Xray REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_test_run import UpdateTestRun

class TestUpdateTestRun(unittest.TestCase):
    """UpdateTestRun unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateTestRun:
        """Test UpdateTestRun
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateTestRun`
        """
        model = UpdateTestRun()
        if include_optional:
            return UpdateTestRun(
                status = 'PASS',
                comment = 'Comment on Test Run',
                assignee = 'admin',
                defects = openapi_client.models.defects.Defects(
                    add = ["CALC-1","CALC-2"], 
                    remove = ["CALC-3","CALC-4"], ),
                evidences = openapi_client.models.update_test_run_evidences.UpdateTestRun_evidences(
                    add = [
                        openapi_client.models.file.File(
                            data = 'gsddfgdsfg...(base64)', 
                            filename = 'example.txt', 
                            content_type = 'plain/text', )
                        ], 
                    remove = [1235,5674], ),
                custom_fields = [
                    null
                    ],
                iterations = [
                    openapi_client.models.update_iteration_status.UpdateIterationStatus(
                        id = 35, 
                        status = 'PASS', )
                    ],
                steps = [
                    openapi_client.models.update_step_result.UpdateStepResult(
                        id = 85778, 
                        status = 'FAIL', 
                        comment = 'Comment on step', 
                        defects = openapi_client.models.update_step_result_defects.UpdateStepResult_defects(
                            add = ["CALC-123","CALC-765"], 
                            remove = ["CALC-563","CALC-744"], ), 
                        evidences = openapi_client.models.update_step_result_evidences.UpdateStepResult_evidences(
                            add = [
                                openapi_client.models.file.File(
                                    data = 'gsddfgdsfg...(base64)', 
                                    filename = 'example.txt', 
                                    content_type = 'plain/text', )
                                ], 
                            remove = ["CALC-124","CALC- 657"], ), 
                        actual_result = 'Actual result on step', )
                    ],
                examples = openapi_client.models.update_test_run_examples.UpdateTestRun_examples(
                    id = '1379', 
                    rank = 1, 
                    values = ["value1","value2"], 
                    status = 'TODO', 
                    status_description = 'Description of the status', 
                    duration = '12960', 
                    backgrounds = [
                        openapi_client.models.test_example_step_bean.TestExampleStepBean(
                            id = 1, 
                            rank = 1, 
                            type = 'type', 
                            keyword = 'Example Keyword', 
                            name = 'Example Name', 
                            duration = '14226', 
                            log_error = '', 
                            status = 'PASS', )
                        ], 
                    hooks = [
                        openapi_client.models.test_example_step_bean.TestExampleStepBean(
                            id = 1, 
                            rank = 1, 
                            type = 'type', 
                            keyword = 'Example Keyword', 
                            name = 'Example Name', 
                            duration = '14226', 
                            log_error = '', 
                            status = 'PASS', )
                        ], 
                    steps = [
                        
                        ], )
            )
        else:
            return UpdateTestRun(
        )
        """

    def testUpdateTestRun(self):
        """Test UpdateTestRun"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
