# coding: utf-8

"""
    Xray REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.test_run_response import TestRunResponse

class TestTestRunResponse(unittest.TestCase):
    """TestRunResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestRunResponse:
        """Test TestRunResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestRunResponse`
        """
        model = TestRunResponse()
        if include_optional:
            return TestRunResponse(
                id = 1004725,
                status = 'FAIL',
                color = '#D45D52',
                test_key = 'CALC-67187',
                test_exec_key = 'CALC-67193',
                test_version = 'manual_1',
                assignee = 'admin',
                executed_by = 'admin',
                started_on = '2020-02-12T09:58:04Z',
                finished_on = '2020-02-12T10:58:04Z',
                started_on_iso = '2020-02-12T09:58:04Z',
                finished_on_iso = '2020-02-12T10:58:04Z',
                duration = 1923493000,
                defects = ["CALC-1","CALC-2"],
                evidences = [
                    {"id":25684,"fileName":"attachment.txt","fileIcon":"text.gif","mimeType":"plain/text","fileIconAlt":"Text File","fileSize":"100.0 kB","numericalFileSize":"12","created":"2020-02-06T10:39:37Z","createdDate":1580985577000,"author":"admin","authorFullName":"Bruce Wayne","fileURL":"http://example.com/attachment/25684/example2.txt","filePath":"/Users/example/path/attachment"}
                    ],
                comment = 'Test Run comment',
                test_environments = ["iOS","Android"],
                fix_versions = [
                    openapi_client.models.version.Version(
                        id = '97845', 
                        name = '1.0', 
                        description = 'Version 1.0', 
                        is_archived = True, 
                        is_released = False, )
                    ],
                custom_fields = [
                    null
                    ],
                steps = [
                    openapi_client.models.step_result.StepResult(
                        id = 85778, 
                        index = 1, 
                        fields = {"Action":{"type":"Wiki","value":{"raw":"This is a step action","rendered":"<p>This is a step action</p>"}},"Toggle":{"type":"Data","value":"false"}}, 
                        attachments = [
                            {"id":25684,"fileName":"attachment.txt","fileIcon":"text.gif","mimeType":"plain/text","fileIconAlt":"Text File","fileSize":"100.0 kB","numericalFileSize":"12","created":"2020-02-06T10:39:37Z","createdDate":1580985577000,"author":"admin","authorFullName":"Bruce Wayne","fileURL":"http://example.com/attachment/25684/example2.txt","filePath":"/Users/example/path/attachment"}
                            ], 
                        status = 'PASS', 
                        comment = openapi_client.models.step_result_comment.StepResult_comment(
                            rendered = 'Comment on step', ), 
                        defects = ["CALC-123","CALC-765"], 
                        evidences = [
                            {"id":25684,"fileName":"attachment.txt","fileIcon":"text.gif","mimeType":"plain/text","fileIconAlt":"Text File","fileSize":"100.0 kB","numericalFileSize":"12","created":"2020-02-06T10:39:37Z","createdDate":1580985577000,"author":"admin","authorFullName":"Bruce Wayne","fileURL":"http://example.com/attachment/25684/example2.txt","filePath":"/Users/example/path/attachment"}
                            ], 
                        actual_result = openapi_client.models.step_result_actual_result.StepResult_actualResult(
                            rendered = 'Actual result on step', ), )
                    ],
                iterations = [
                    openapi_client.models.test_run_iteration_status_information.TestRunIterationStatusInformation(
                        id = 56, 
                        status = '', 
                        color = '', 
                        parameters = [
                            openapi_client.models.dataset_parameter.DatasetParameter(
                                name = '', 
                                value = '', )
                            ], )
                    ],
                parameters = [
                    openapi_client.models.dataset_parameter.DatasetParameter(
                        name = '', 
                        value = '', )
                    ]
            )
        else:
            return TestRunResponse(
        )
        """

    def testTestRunResponse(self):
        """Test TestRunResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
