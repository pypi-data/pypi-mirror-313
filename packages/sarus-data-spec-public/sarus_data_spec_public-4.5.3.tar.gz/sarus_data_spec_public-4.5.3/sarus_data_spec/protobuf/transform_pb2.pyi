"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sarus_data_spec.protobuf.path_pb2
import sarus_data_spec.protobuf.scalar_pb2
import sarus_data_spec.protobuf.type_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Transform(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SQLDialect:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SQLDialectEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SQLDialect.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        NONE: Transform.SQLDialect.ValueType = ...  # 0
        POSTGRES: Transform.SQLDialect.ValueType = ...  # 1
        SQL_SERVER: Transform.SQLDialect.ValueType = ...  # 2
        MY_SQL: Transform.SQLDialect.ValueType = ...  # 3
        SQLLITE: Transform.SQLDialect.ValueType = ...  # 4
        ORACLE: Transform.SQLDialect.ValueType = ...  # 5
        BIG_QUERY: Transform.SQLDialect.ValueType = ...  # 6
        REDSHIFT: Transform.SQLDialect.ValueType = ...  # 7
        HIVE: Transform.SQLDialect.ValueType = ...  # 8
    class SQLDialect(_SQLDialect, metaclass=_SQLDialectEnumTypeWrapper):
        pass

    NONE: Transform.SQLDialect.ValueType = ...  # 0
    POSTGRES: Transform.SQLDialect.ValueType = ...  # 1
    SQL_SERVER: Transform.SQLDialect.ValueType = ...  # 2
    MY_SQL: Transform.SQLDialect.ValueType = ...  # 3
    SQLLITE: Transform.SQLDialect.ValueType = ...  # 4
    ORACLE: Transform.SQLDialect.ValueType = ...  # 5
    BIG_QUERY: Transform.SQLDialect.ValueType = ...  # 6
    REDSHIFT: Transform.SQLDialect.ValueType = ...  # 7
    HIVE: Transform.SQLDialect.ValueType = ...  # 8

    class PropertiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class Spec(google.protobuf.message.Message):
        """Definitions"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        IDENTITY_FIELD_NUMBER: builtins.int
        VARIABLE_FIELD_NUMBER: builtins.int
        COMPOSED_FIELD_NUMBER: builtins.int
        PROJECT_FIELD_NUMBER: builtins.int
        FILTER_FIELD_NUMBER: builtins.int
        SHUFFLE_FIELD_NUMBER: builtins.int
        JOIN_FIELD_NUMBER: builtins.int
        CAST_FIELD_NUMBER: builtins.int
        SAMPLE_FIELD_NUMBER: builtins.int
        USER_SETTINGS_FIELD_NUMBER: builtins.int
        PRIVACY_UNIT_TRACKING_FIELD_NUMBER: builtins.int
        EXTERNAL_FIELD_NUMBER: builtins.int
        SYNTHETIC_FIELD_NUMBER: builtins.int
        TRANSCODE_FIELD_NUMBER: builtins.int
        INVERSE_TRANSCODE_FIELD_NUMBER: builtins.int
        GET_ITEM_FIELD_NUMBER: builtins.int
        PRIVACY_UNIT_TRACKING_PATHS_FIELD_NUMBER: builtins.int
        AUTOMATIC_USER_SETTINGS_FIELD_NUMBER: builtins.int
        PUBLIC_PATHS_FIELD_NUMBER: builtins.int
        ASSIGN_BUDGET_FIELD_NUMBER: builtins.int
        AUTOMATIC_BUDGET_FIELD_NUMBER: builtins.int
        ATTRIBUTE_BUDGET_FIELD_NUMBER: builtins.int
        SD_BUDGET_FIELD_NUMBER: builtins.int
        DERIVE_SEED_FIELD_NUMBER: builtins.int
        GROUP_BY_PE_FIELD_NUMBER: builtins.int
        SAMPLING_RATIOS_FIELD_NUMBER: builtins.int
        SELECT_SQL_FIELD_NUMBER: builtins.int
        EXTRACT_FIELD_NUMBER: builtins.int
        RELATIONSHIP_SPEC_FIELD_NUMBER: builtins.int
        DIFFERENTIATED_SAMPLE_FIELD_NUMBER: builtins.int
        VALIDATED_USER_TYPE_FIELD_NUMBER: builtins.int
        ERROR_ESTIMATION_FIELD_NUMBER: builtins.int
        FIT_MODEL_FIELD_NUMBER: builtins.int
        FIT_MODEL_DP_FIELD_NUMBER: builtins.int
        GENERATE_FROM_MODEL_FIELD_NUMBER: builtins.int
        TO_SMALL_DATA_FIELD_NUMBER: builtins.int
        PUSH_SQL_FIELD_NUMBER: builtins.int
        SELECT_TABLE_FIELD_NUMBER: builtins.int
        @property
        def identity(self) -> global___Transform.Identity: ...
        @property
        def variable(self) -> global___Transform.Variable: ...
        @property
        def composed(self) -> global___Transform.Composed: ...
        @property
        def project(self) -> global___Transform.Project: ...
        @property
        def filter(self) -> global___Transform.Filter: ...
        @property
        def shuffle(self) -> global___Transform.Shuffle: ...
        @property
        def join(self) -> global___Transform.Join: ...
        @property
        def cast(self) -> global___Transform.Cast: ...
        @property
        def sample(self) -> global___Transform.Sample: ...
        @property
        def user_settings(self) -> global___Transform.UserSettings: ...
        @property
        def privacy_unit_tracking(self) -> global___Transform.PrivacyUnitTracking: ...
        @property
        def external(self) -> global___Transform.External:
            """np transforms, pd transforms,..."""
            pass
        @property
        def synthetic(self) -> global___Transform.Synthetic: ...
        @property
        def transcode(self) -> global___Transform.Transcode: ...
        @property
        def inverse_transcode(self) -> global___Transform.InverseTranscode: ...
        @property
        def get_item(self) -> global___Transform.GetItem: ...
        @property
        def privacy_unit_tracking_paths(self) -> global___Transform.PrivacyUnitTrackingPaths: ...
        @property
        def automatic_user_settings(self) -> global___Transform.AutomaticUserSettings: ...
        @property
        def public_paths(self) -> global___Transform.PublicPaths: ...
        @property
        def assign_budget(self) -> global___Transform.AssignBudget: ...
        @property
        def automatic_budget(self) -> global___Transform.AutomaticBudget: ...
        @property
        def attribute_budget(self) -> global___Transform.AttributesBudget: ...
        @property
        def sd_budget(self) -> global___Transform.SDBudget: ...
        @property
        def derive_seed(self) -> global___Transform.DeriveSeed: ...
        @property
        def group_by_pe(self) -> global___Transform.GroupByPE: ...
        @property
        def sampling_ratios(self) -> global___Transform.SamplingRatios:
            """not used anymore"""
            pass
        @property
        def select_sql(self) -> global___Transform.SelectSql: ...
        @property
        def extract(self) -> global___Transform.Extract: ...
        @property
        def relationship_spec(self) -> global___Transform.RelationshipSpec: ...
        @property
        def differentiated_sample(self) -> global___Transform.DifferentiatedSample: ...
        @property
        def validated_user_type(self) -> global___Transform.ValidatedUserType: ...
        @property
        def error_estimation(self) -> global___Transform.ErrorEstimation: ...
        @property
        def fit_model(self) -> global___Transform.FitModel: ...
        @property
        def fit_model_dp(self) -> global___Transform.FitModelDP: ...
        @property
        def generate_from_model(self) -> global___Transform.GenerateFromModel: ...
        @property
        def to_small_data(self) -> global___Transform.ToSmallData: ...
        @property
        def push_sql(self) -> global___Transform.PushSQL: ...
        @property
        def select_table(self) -> global___Transform.SelectTable: ...
        def __init__(self,
            *,
            identity : typing.Optional[global___Transform.Identity] = ...,
            variable : typing.Optional[global___Transform.Variable] = ...,
            composed : typing.Optional[global___Transform.Composed] = ...,
            project : typing.Optional[global___Transform.Project] = ...,
            filter : typing.Optional[global___Transform.Filter] = ...,
            shuffle : typing.Optional[global___Transform.Shuffle] = ...,
            join : typing.Optional[global___Transform.Join] = ...,
            cast : typing.Optional[global___Transform.Cast] = ...,
            sample : typing.Optional[global___Transform.Sample] = ...,
            user_settings : typing.Optional[global___Transform.UserSettings] = ...,
            privacy_unit_tracking : typing.Optional[global___Transform.PrivacyUnitTracking] = ...,
            external : typing.Optional[global___Transform.External] = ...,
            synthetic : typing.Optional[global___Transform.Synthetic] = ...,
            transcode : typing.Optional[global___Transform.Transcode] = ...,
            inverse_transcode : typing.Optional[global___Transform.InverseTranscode] = ...,
            get_item : typing.Optional[global___Transform.GetItem] = ...,
            privacy_unit_tracking_paths : typing.Optional[global___Transform.PrivacyUnitTrackingPaths] = ...,
            automatic_user_settings : typing.Optional[global___Transform.AutomaticUserSettings] = ...,
            public_paths : typing.Optional[global___Transform.PublicPaths] = ...,
            assign_budget : typing.Optional[global___Transform.AssignBudget] = ...,
            automatic_budget : typing.Optional[global___Transform.AutomaticBudget] = ...,
            attribute_budget : typing.Optional[global___Transform.AttributesBudget] = ...,
            sd_budget : typing.Optional[global___Transform.SDBudget] = ...,
            derive_seed : typing.Optional[global___Transform.DeriveSeed] = ...,
            group_by_pe : typing.Optional[global___Transform.GroupByPE] = ...,
            sampling_ratios : typing.Optional[global___Transform.SamplingRatios] = ...,
            select_sql : typing.Optional[global___Transform.SelectSql] = ...,
            extract : typing.Optional[global___Transform.Extract] = ...,
            relationship_spec : typing.Optional[global___Transform.RelationshipSpec] = ...,
            differentiated_sample : typing.Optional[global___Transform.DifferentiatedSample] = ...,
            validated_user_type : typing.Optional[global___Transform.ValidatedUserType] = ...,
            error_estimation : typing.Optional[global___Transform.ErrorEstimation] = ...,
            fit_model : typing.Optional[global___Transform.FitModel] = ...,
            fit_model_dp : typing.Optional[global___Transform.FitModelDP] = ...,
            generate_from_model : typing.Optional[global___Transform.GenerateFromModel] = ...,
            to_small_data : typing.Optional[global___Transform.ToSmallData] = ...,
            push_sql : typing.Optional[global___Transform.PushSQL] = ...,
            select_table : typing.Optional[global___Transform.SelectTable] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["assign_budget",b"assign_budget","attribute_budget",b"attribute_budget","automatic_budget",b"automatic_budget","automatic_user_settings",b"automatic_user_settings","cast",b"cast","composed",b"composed","derive_seed",b"derive_seed","differentiated_sample",b"differentiated_sample","error_estimation",b"error_estimation","external",b"external","extract",b"extract","filter",b"filter","fit_model",b"fit_model","fit_model_dp",b"fit_model_dp","generate_from_model",b"generate_from_model","get_item",b"get_item","group_by_pe",b"group_by_pe","identity",b"identity","inverse_transcode",b"inverse_transcode","join",b"join","privacy_unit_tracking",b"privacy_unit_tracking","privacy_unit_tracking_paths",b"privacy_unit_tracking_paths","project",b"project","public_paths",b"public_paths","push_sql",b"push_sql","relationship_spec",b"relationship_spec","sample",b"sample","sampling_ratios",b"sampling_ratios","sd_budget",b"sd_budget","select_sql",b"select_sql","select_table",b"select_table","shuffle",b"shuffle","spec",b"spec","synthetic",b"synthetic","to_small_data",b"to_small_data","transcode",b"transcode","user_settings",b"user_settings","validated_user_type",b"validated_user_type","variable",b"variable"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["assign_budget",b"assign_budget","attribute_budget",b"attribute_budget","automatic_budget",b"automatic_budget","automatic_user_settings",b"automatic_user_settings","cast",b"cast","composed",b"composed","derive_seed",b"derive_seed","differentiated_sample",b"differentiated_sample","error_estimation",b"error_estimation","external",b"external","extract",b"extract","filter",b"filter","fit_model",b"fit_model","fit_model_dp",b"fit_model_dp","generate_from_model",b"generate_from_model","get_item",b"get_item","group_by_pe",b"group_by_pe","identity",b"identity","inverse_transcode",b"inverse_transcode","join",b"join","privacy_unit_tracking",b"privacy_unit_tracking","privacy_unit_tracking_paths",b"privacy_unit_tracking_paths","project",b"project","public_paths",b"public_paths","push_sql",b"push_sql","relationship_spec",b"relationship_spec","sample",b"sample","sampling_ratios",b"sampling_ratios","sd_budget",b"sd_budget","select_sql",b"select_sql","select_table",b"select_table","shuffle",b"shuffle","spec",b"spec","synthetic",b"synthetic","to_small_data",b"to_small_data","transcode",b"transcode","user_settings",b"user_settings","validated_user_type",b"validated_user_type","variable",b"variable"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["spec",b"spec"]) -> typing.Optional[typing_extensions.Literal["identity","variable","composed","project","filter","shuffle","join","cast","sample","user_settings","privacy_unit_tracking","external","synthetic","transcode","inverse_transcode","get_item","privacy_unit_tracking_paths","automatic_user_settings","public_paths","assign_budget","automatic_budget","attribute_budget","sd_budget","derive_seed","group_by_pe","sampling_ratios","select_sql","extract","relationship_spec","differentiated_sample","validated_user_type","error_estimation","fit_model","fit_model_dp","generate_from_model","to_small_data","push_sql","select_table"]]: ...

    class External(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class OpIdentifier(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            STD_FIELD_NUMBER: builtins.int
            PANDAS_FIELD_NUMBER: builtins.int
            NUMPY_FIELD_NUMBER: builtins.int
            TENSORFLOW_FIELD_NUMBER: builtins.int
            SKLEARN_FIELD_NUMBER: builtins.int
            PANDAS_PROFILING_FIELD_NUMBER: builtins.int
            XGBOOST_FIELD_NUMBER: builtins.int
            SKOPT_FIELD_NUMBER: builtins.int
            IMBLEARN_FIELD_NUMBER: builtins.int
            SHAP_FIELD_NUMBER: builtins.int
            SCIPY_FIELD_NUMBER: builtins.int
            OPTBINNING_FIELD_NUMBER: builtins.int
            @property
            def std(self) -> global___Transform.External.Std: ...
            @property
            def pandas(self) -> global___Transform.External.Pandas: ...
            @property
            def numpy(self) -> global___Transform.External.Numpy: ...
            @property
            def tensorflow(self) -> global___Transform.External.Tensorflow: ...
            @property
            def sklearn(self) -> global___Transform.External.Sklearn: ...
            @property
            def pandas_profiling(self) -> global___Transform.External.PandasProfiling: ...
            @property
            def xgboost(self) -> global___Transform.External.XGBoost: ...
            @property
            def skopt(self) -> global___Transform.External.Skopt: ...
            @property
            def imblearn(self) -> global___Transform.External.Imblearn: ...
            @property
            def shap(self) -> global___Transform.External.Shap: ...
            @property
            def scipy(self) -> global___Transform.External.Scipy: ...
            @property
            def optbinning(self) -> global___Transform.External.OptBinning: ...
            def __init__(self,
                *,
                std : typing.Optional[global___Transform.External.Std] = ...,
                pandas : typing.Optional[global___Transform.External.Pandas] = ...,
                numpy : typing.Optional[global___Transform.External.Numpy] = ...,
                tensorflow : typing.Optional[global___Transform.External.Tensorflow] = ...,
                sklearn : typing.Optional[global___Transform.External.Sklearn] = ...,
                pandas_profiling : typing.Optional[global___Transform.External.PandasProfiling] = ...,
                xgboost : typing.Optional[global___Transform.External.XGBoost] = ...,
                skopt : typing.Optional[global___Transform.External.Skopt] = ...,
                imblearn : typing.Optional[global___Transform.External.Imblearn] = ...,
                shap : typing.Optional[global___Transform.External.Shap] = ...,
                scipy : typing.Optional[global___Transform.External.Scipy] = ...,
                optbinning : typing.Optional[global___Transform.External.OptBinning] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["imblearn",b"imblearn","numpy",b"numpy","op",b"op","optbinning",b"optbinning","pandas",b"pandas","pandas_profiling",b"pandas_profiling","scipy",b"scipy","shap",b"shap","sklearn",b"sklearn","skopt",b"skopt","std",b"std","tensorflow",b"tensorflow","xgboost",b"xgboost"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["imblearn",b"imblearn","numpy",b"numpy","op",b"op","optbinning",b"optbinning","pandas",b"pandas","pandas_profiling",b"pandas_profiling","scipy",b"scipy","shap",b"shap","sklearn",b"sklearn","skopt",b"skopt","std",b"std","tensorflow",b"tensorflow","xgboost",b"xgboost"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions.Literal["op",b"op"]) -> typing.Optional[typing_extensions.Literal["std","pandas","numpy","tensorflow","sklearn","pandas_profiling","xgboost","skopt","imblearn","shap","scipy","optbinning"]]: ...

        class Std(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class Pandas(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class Numpy(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class Tensorflow(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class Sklearn(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class PandasProfiling(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class XGBoost(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class Skopt(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class Imblearn(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class Shap(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class Scipy(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        class OptBinning(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            def __init__(self,
                *,
                name : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

        ARGUMENTS_FIELD_NUMBER: builtins.int
        NAMED_ARGUMENTS_FIELD_NUMBER: builtins.int
        OP_IDENTIFIER_FIELD_NUMBER: builtins.int
        arguments: builtins.bytes = ...
        named_arguments: builtins.bytes = ...
        @property
        def op_identifier(self) -> global___Transform.External.OpIdentifier: ...
        def __init__(self,
            *,
            arguments : builtins.bytes = ...,
            named_arguments : builtins.bytes = ...,
            op_identifier : typing.Optional[global___Transform.External.OpIdentifier] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["op_identifier",b"op_identifier"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["arguments",b"arguments","named_arguments",b"named_arguments","op_identifier",b"op_identifier"]) -> None: ...

    class Identity(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class Variable(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        POSITION_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        position: builtins.int = ...
        name: typing.Text = ...
        def __init__(self,
            *,
            position : builtins.int = ...,
            name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name",b"name","position",b"position"]) -> None: ...

    class Composed(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class NamedArgumentsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            value: typing.Text = ...
            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        TRANSFORM_FIELD_NUMBER: builtins.int
        ARGUMENTS_FIELD_NUMBER: builtins.int
        NAMED_ARGUMENTS_FIELD_NUMBER: builtins.int
        transform: typing.Text = ...
        """Transform"""

        @property
        def arguments(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Arguments of the current transform are transforms"""
            pass
        @property
        def named_arguments(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
        def __init__(self,
            *,
            transform : typing.Text = ...,
            arguments : typing.Optional[typing.Iterable[typing.Text]] = ...,
            named_arguments : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["arguments",b"arguments","named_arguments",b"named_arguments","transform",b"transform"]) -> None: ...

    class Project(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROJECTION_FIELD_NUMBER: builtins.int
        @property
        def projection(self) -> sarus_data_spec.protobuf.type_pb2.Type:
            """This should be a 'supertype' the type the data can project into."""
            pass
        def __init__(self,
            *,
            projection : typing.Optional[sarus_data_spec.protobuf.type_pb2.Type] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["projection",b"projection"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["projection",b"projection"]) -> None: ...

    class Filter(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FILTER_FIELD_NUMBER: builtins.int
        @property
        def filter(self) -> sarus_data_spec.protobuf.type_pb2.Type:
            """This should be a 'subtype' the type the data can be retricted to."""
            pass
        def __init__(self,
            *,
            filter : typing.Optional[sarus_data_spec.protobuf.type_pb2.Type] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["filter",b"filter"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter"]) -> None: ...

    class Shuffle(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class Join(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ON_FIELD_NUMBER: builtins.int
        @property
        def on(self) -> sarus_data_spec.protobuf.type_pb2.Type:
            """This should be a common 'supertype' between tables."""
            pass
        def __init__(self,
            *,
            on : typing.Optional[sarus_data_spec.protobuf.type_pb2.Type] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["on",b"on"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["on",b"on"]) -> None: ...

    class Cast(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TYPE_FIELD_NUMBER: builtins.int
        @property
        def type(self) -> sarus_data_spec.protobuf.type_pb2.Type:
            """Type to cast into."""
            pass
        def __init__(self,
            *,
            type : typing.Optional[sarus_data_spec.protobuf.type_pb2.Type] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["type",b"type"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...

    class Sample(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FRACTION_FIELD_NUMBER: builtins.int
        SIZE_FIELD_NUMBER: builtins.int
        SEED_FIELD_NUMBER: builtins.int
        fraction: builtins.float = ...
        size: builtins.int = ...
        @property
        def seed(self) -> sarus_data_spec.protobuf.scalar_pb2.Scalar: ...
        def __init__(self,
            *,
            fraction : builtins.float = ...,
            size : builtins.int = ...,
            seed : typing.Optional[sarus_data_spec.protobuf.scalar_pb2.Scalar] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["fraction",b"fraction","proportion",b"proportion","seed",b"seed","size",b"size"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["fraction",b"fraction","proportion",b"proportion","seed",b"seed","size",b"size"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["proportion",b"proportion"]) -> typing.Optional[typing_extensions.Literal["fraction","size"]]: ...

    class SchemaInference(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _CastPolicy:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _CastPolicyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CastPolicy.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            NONE: Transform.SchemaInference.CastPolicy.ValueType = ...  # 0
            MOST_LIKELY: Transform.SchemaInference.CastPolicy.ValueType = ...  # 1
        class CastPolicy(_CastPolicy, metaclass=_CastPolicyEnumTypeWrapper):
            pass

        NONE: Transform.SchemaInference.CastPolicy.ValueType = ...  # 0
        MOST_LIKELY: Transform.SchemaInference.CastPolicy.ValueType = ...  # 1

        CAST_POLICY_FIELD_NUMBER: builtins.int
        cast_policy: global___Transform.SchemaInference.CastPolicy.ValueType = ...
        def __init__(self,
            *,
            cast_policy : global___Transform.SchemaInference.CastPolicy.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["cast_policy",b"cast_policy"]) -> None: ...

    class GroupBy(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...

    class ToSmallData(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SIZE_FIELD_NUMBER: builtins.int
        RANDOM_SAMPLING_FIELD_NUMBER: builtins.int
        SEED_FIELD_NUMBER: builtins.int
        size: builtins.int = ...
        random_sampling: builtins.bool = ...
        @property
        def seed(self) -> sarus_data_spec.protobuf.scalar_pb2.Scalar: ...
        def __init__(self,
            *,
            size : builtins.int = ...,
            random_sampling : builtins.bool = ...,
            seed : typing.Optional[sarus_data_spec.protobuf.scalar_pb2.Scalar] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["seed",b"seed"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["random_sampling",b"random_sampling","seed",b"seed","size",b"size"]) -> None: ...

    class PushSQL(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DATACONNECTION_NAME_FIELD_NUMBER: builtins.int
        SCHEMA_NAME_FIELD_NUMBER: builtins.int
        TABLE_NAME_FIELD_NUMBER: builtins.int
        URI_FIELD_NUMBER: builtins.int
        dataconnection_name: typing.Text = ...
        schema_name: typing.Text = ...
        table_name: typing.Text = ...
        uri: typing.Text = ...
        def __init__(self,
            *,
            dataconnection_name : typing.Text = ...,
            schema_name : typing.Text = ...,
            table_name : typing.Text = ...,
            uri : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["dataconnection_name",b"dataconnection_name","schema_name",b"schema_name","table_name",b"table_name","uri",b"uri"]) -> None: ...

    class Synthetic(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class UserSettings(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class AutomaticUserSettings(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MAX_CATEGORIES_FIELD_NUMBER: builtins.int
        BATCH_SIZE_SAMPLE_FIELD_NUMBER: builtins.int
        MAX_TABLE_SIZE_SAMPLE_FIELD_NUMBER: builtins.int
        SAMPLING_RATIO_FIELD_NUMBER: builtins.int
        max_categories: builtins.int = ...
        batch_size_sample: builtins.int = ...
        max_table_size_sample: builtins.int = ...
        sampling_ratio: builtins.float = ...
        def __init__(self,
            *,
            max_categories : builtins.int = ...,
            batch_size_sample : builtins.int = ...,
            max_table_size_sample : builtins.int = ...,
            sampling_ratio : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["batch_size_sample",b"batch_size_sample","max_categories",b"max_categories","max_table_size_sample",b"max_table_size_sample","sampling_ratio",b"sampling_ratio"]) -> None: ...

    class PrivacyUnitTracking(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class Transcode(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class InverseTranscode(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class DifferentiatedSample(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FRACTION_FIELD_NUMBER: builtins.int
        SIZE_FIELD_NUMBER: builtins.int
        SEED_FIELD_NUMBER: builtins.int
        fraction: builtins.float = ...
        size: builtins.int = ...
        @property
        def seed(self) -> sarus_data_spec.protobuf.scalar_pb2.Scalar: ...
        def __init__(self,
            *,
            fraction : builtins.float = ...,
            size : builtins.int = ...,
            seed : typing.Optional[sarus_data_spec.protobuf.scalar_pb2.Scalar] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["fraction",b"fraction","proportion",b"proportion","seed",b"seed","size",b"size"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["fraction",b"fraction","proportion",b"proportion","seed",b"seed","size",b"size"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["proportion",b"proportion"]) -> typing.Optional[typing_extensions.Literal["fraction","size"]]: ...

    class PrivacyUnitTrackingPaths(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class PublicPaths(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class GetItem(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PATH_FIELD_NUMBER: builtins.int
        @property
        def path(self) -> sarus_data_spec.protobuf.path_pb2.Path: ...
        def __init__(self,
            *,
            path : typing.Optional[sarus_data_spec.protobuf.path_pb2.Path] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["path",b"path"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["path",b"path"]) -> None: ...

    class AssignBudget(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class AutomaticBudget(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class AttributesBudget(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class SDBudget(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class DeriveSeed(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        RANDOM_INTEGER_FIELD_NUMBER: builtins.int
        random_integer: builtins.int = ...
        def __init__(self,
            *,
            random_integer : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["random_integer",b"random_integer"]) -> None: ...

    class GroupByPE(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class SamplingRatios(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class RelationshipSpec(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class SelectSql(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class OpIdentifier(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _SqlOp:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _SqlOpEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlOp.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                NONE: Transform.SelectSql.OpIdentifier.SqlOp.ValueType = ...  # 0
                PUP: Transform.SelectSql.OpIdentifier.SqlOp.ValueType = ...  # 1
                DP: Transform.SelectSql.OpIdentifier.SqlOp.ValueType = ...  # 2
            class SqlOp(_SqlOp, metaclass=_SqlOpEnumTypeWrapper):
                pass

            NONE: Transform.SelectSql.OpIdentifier.SqlOp.ValueType = ...  # 0
            PUP: Transform.SelectSql.OpIdentifier.SqlOp.ValueType = ...  # 1
            DP: Transform.SelectSql.OpIdentifier.SqlOp.ValueType = ...  # 2

            SQL_OP_FIELD_NUMBER: builtins.int
            sql_op: global___Transform.SelectSql.OpIdentifier.SqlOp.ValueType = ...
            def __init__(self,
                *,
                sql_op : global___Transform.SelectSql.OpIdentifier.SqlOp.ValueType = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["sql_op",b"sql_op"]) -> None: ...

        QUERY_FIELD_NUMBER: builtins.int
        ALIASED_QUERIES_FIELD_NUMBER: builtins.int
        SQL_DIALECT_FIELD_NUMBER: builtins.int
        OP_IDENTIFIER_FIELD_NUMBER: builtins.int
        query: typing.Text = ...
        @property
        def aliased_queries(self) -> global___Transform.AliasedQueries: ...
        sql_dialect: global___Transform.SQLDialect.ValueType = ...
        @property
        def op_identifier(self) -> global___Transform.SelectSql.OpIdentifier: ...
        def __init__(self,
            *,
            query : typing.Text = ...,
            aliased_queries : typing.Optional[global___Transform.AliasedQueries] = ...,
            sql_dialect : global___Transform.SQLDialect.ValueType = ...,
            op_identifier : typing.Optional[global___Transform.SelectSql.OpIdentifier] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["aliased_queries",b"aliased_queries","op_identifier",b"op_identifier","query",b"query","select",b"select"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["aliased_queries",b"aliased_queries","op_identifier",b"op_identifier","query",b"query","select",b"select","sql_dialect",b"sql_dialect"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["select",b"select"]) -> typing.Optional[typing_extensions.Literal["query","aliased_queries"]]: ...

    class AliasedQueries(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ALIASED_QUERY_FIELD_NUMBER: builtins.int
        @property
        def aliased_query(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Transform.AliasedQuery]: ...
        def __init__(self,
            *,
            aliased_query : typing.Optional[typing.Iterable[global___Transform.AliasedQuery]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["aliased_query",b"aliased_query"]) -> None: ...

    class AliasedQuery(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PATH_FIELD_NUMBER: builtins.int
        QUERY_FIELD_NUMBER: builtins.int
        @property
        def path(self) -> sarus_data_spec.protobuf.path_pb2.Path: ...
        query: typing.Text = ...
        def __init__(self,
            *,
            path : typing.Optional[sarus_data_spec.protobuf.path_pb2.Path] = ...,
            query : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["path",b"path"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["path",b"path","query",b"query"]) -> None: ...

    class Extract(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SIZE_FIELD_NUMBER: builtins.int
        size: builtins.int = ...
        def __init__(self,
            *,
            size : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["size",b"size"]) -> None: ...

    class ValidatedUserType(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class ErrorEstimation(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class FitModel(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        BATCH_SIZE_FIELD_NUMBER: builtins.int
        EPOCHS_FIELD_NUMBER: builtins.int
        TEXT_KIND_FIELD_NUMBER: builtins.int
        QUANTIZE_FIELD_NUMBER: builtins.int
        USE_LORA_FIELD_NUMBER: builtins.int
        LEARNING_RATE_FIELD_NUMBER: builtins.int
        LORA_ATTN_MODULES_FIELD_NUMBER: builtins.int
        APPLY_LORA_TO_MLP_FIELD_NUMBER: builtins.int
        APPLY_LORA_TO_OUTPUT_FIELD_NUMBER: builtins.int
        LORA_RANK_FIELD_NUMBER: builtins.int
        LORA_ALPHA_FIELD_NUMBER: builtins.int
        batch_size: builtins.int = ...
        epochs: builtins.int = ...
        @property
        def text_kind(self) -> global___Transform.TextKind: ...
        quantize: builtins.bool = ...
        use_lora: builtins.bool = ...
        learning_rate: builtins.float = ...
        @property
        def lora_attn_modules(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
        apply_lora_to_mlp: builtins.bool = ...
        apply_lora_to_output: builtins.bool = ...
        lora_rank: builtins.int = ...
        lora_alpha: builtins.int = ...
        def __init__(self,
            *,
            batch_size : builtins.int = ...,
            epochs : builtins.int = ...,
            text_kind : typing.Optional[global___Transform.TextKind] = ...,
            quantize : builtins.bool = ...,
            use_lora : builtins.bool = ...,
            learning_rate : builtins.float = ...,
            lora_attn_modules : typing.Optional[typing.Iterable[typing.Text]] = ...,
            apply_lora_to_mlp : builtins.bool = ...,
            apply_lora_to_output : builtins.bool = ...,
            lora_rank : builtins.int = ...,
            lora_alpha : builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["text_kind",b"text_kind"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["apply_lora_to_mlp",b"apply_lora_to_mlp","apply_lora_to_output",b"apply_lora_to_output","batch_size",b"batch_size","epochs",b"epochs","learning_rate",b"learning_rate","lora_alpha",b"lora_alpha","lora_attn_modules",b"lora_attn_modules","lora_rank",b"lora_rank","quantize",b"quantize","text_kind",b"text_kind","use_lora",b"use_lora"]) -> None: ...

    class TextKind(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TEXT_FIELD_FIELD_NUMBER: builtins.int
        CHAT_FIELD_NUMBER: builtins.int
        text_field: typing.Text = ...
        @property
        def chat(self) -> global___Transform.Chat: ...
        def __init__(self,
            *,
            text_field : typing.Text = ...,
            chat : typing.Optional[global___Transform.Chat] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["chat",b"chat","text_field",b"text_field","text_kind",b"text_kind"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["chat",b"chat","text_field",b"text_field","text_kind",b"text_kind"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["text_kind",b"text_kind"]) -> typing.Optional[typing_extensions.Literal["text_field","chat"]]: ...

    class Chat(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        QUESTION_FIELD_FIELD_NUMBER: builtins.int
        ANSWER_FIELD_FIELD_NUMBER: builtins.int
        question_field: typing.Text = ...
        answer_field: typing.Text = ...
        def __init__(self,
            *,
            question_field : typing.Text = ...,
            answer_field : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["answer_field",b"answer_field","question_field",b"question_field"]) -> None: ...

    class FitModelDP(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        BATCH_SIZE_FIELD_NUMBER: builtins.int
        EPOCHS_FIELD_NUMBER: builtins.int
        L2_NORM_CLIP_FIELD_NUMBER: builtins.int
        TEXT_KIND_FIELD_NUMBER: builtins.int
        QUANTIZE_FIELD_NUMBER: builtins.int
        USE_LORA_FIELD_NUMBER: builtins.int
        LEARNING_RATE_FIELD_NUMBER: builtins.int
        LORA_ATTN_MODULES_FIELD_NUMBER: builtins.int
        APPLY_LORA_TO_MLP_FIELD_NUMBER: builtins.int
        APPLY_LORA_TO_OUTPUT_FIELD_NUMBER: builtins.int
        LORA_RANK_FIELD_NUMBER: builtins.int
        LORA_ALPHA_FIELD_NUMBER: builtins.int
        batch_size: builtins.int = ...
        epochs: builtins.int = ...
        l2_norm_clip: builtins.float = ...
        @property
        def text_kind(self) -> global___Transform.TextKind: ...
        quantize: builtins.bool = ...
        use_lora: builtins.bool = ...
        learning_rate: builtins.float = ...
        @property
        def lora_attn_modules(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
        apply_lora_to_mlp: builtins.bool = ...
        apply_lora_to_output: builtins.bool = ...
        lora_rank: builtins.int = ...
        lora_alpha: builtins.int = ...
        def __init__(self,
            *,
            batch_size : builtins.int = ...,
            epochs : builtins.int = ...,
            l2_norm_clip : builtins.float = ...,
            text_kind : typing.Optional[global___Transform.TextKind] = ...,
            quantize : builtins.bool = ...,
            use_lora : builtins.bool = ...,
            learning_rate : builtins.float = ...,
            lora_attn_modules : typing.Optional[typing.Iterable[typing.Text]] = ...,
            apply_lora_to_mlp : builtins.bool = ...,
            apply_lora_to_output : builtins.bool = ...,
            lora_rank : builtins.int = ...,
            lora_alpha : builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["text_kind",b"text_kind"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["apply_lora_to_mlp",b"apply_lora_to_mlp","apply_lora_to_output",b"apply_lora_to_output","batch_size",b"batch_size","epochs",b"epochs","l2_norm_clip",b"l2_norm_clip","learning_rate",b"learning_rate","lora_alpha",b"lora_alpha","lora_attn_modules",b"lora_attn_modules","lora_rank",b"lora_rank","quantize",b"quantize","text_kind",b"text_kind","use_lora",b"use_lora"]) -> None: ...

    class GenerateFromModel(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MAX_NEW_TOKENS_FIELD_NUMBER: builtins.int
        TEMPERATURE_FIELD_NUMBER: builtins.int
        max_new_tokens: builtins.int = ...
        temperature: builtins.float = ...
        def __init__(self,
            *,
            max_new_tokens : builtins.int = ...,
            temperature : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["max_new_tokens",b"max_new_tokens","temperature",b"temperature"]) -> None: ...

    class SelectTable(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PATH_FIELD_NUMBER: builtins.int
        @property
        def path(self) -> sarus_data_spec.protobuf.path_pb2.Path: ...
        def __init__(self,
            *,
            path : typing.Optional[sarus_data_spec.protobuf.path_pb2.Path] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["path",b"path"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["path",b"path"]) -> None: ...

    UUID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DOC_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    INVERSIBLE_FIELD_NUMBER: builtins.int
    SCHEMA_PRESERVING_FIELD_NUMBER: builtins.int
    uuid: typing.Text = ...
    """A dataset transform
    e.g. RFC 4122 id used to refer to the transform
    """

    name: typing.Text = ...
    doc: typing.Text = ...
    @property
    def spec(self) -> global___Transform.Spec: ...
    @property
    def properties(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Other properties"""
        pass
    inversible: builtins.bool = ...
    schema_preserving: builtins.bool = ...
    def __init__(self,
        *,
        uuid : typing.Text = ...,
        name : typing.Text = ...,
        doc : typing.Text = ...,
        spec : typing.Optional[global___Transform.Spec] = ...,
        properties : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        inversible : builtins.bool = ...,
        schema_preserving : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["spec",b"spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["doc",b"doc","inversible",b"inversible","name",b"name","properties",b"properties","schema_preserving",b"schema_preserving","spec",b"spec","uuid",b"uuid"]) -> None: ...
global___Transform = Transform
