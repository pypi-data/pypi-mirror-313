[tool.poetry]
name = "nonebug"
version = "0.4.3"
description = "nonebot2 test framework"
authors = ["AkiraXie <l997460364@outlook.com>", "yanyongyu <yyy@nonebot.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://nonebot.dev/"
repository = "https://github.com/nonebot/nonebug"
documentation = "https://nonebot.dev/"
keywords = ["nonebot", "pytest", "test", "bot", "onebot", "cqhttp"]
classifiers = ["Framework :: Pytest"]

[tool.poetry.dependencies]
python = "^3.9"
asgiref = "^3.4.0"
nonebot2 = "^2.2.0"
pytest = ">=7.0.0,<9.0.0"
typing-extensions = "^4.0.0"
async-asgi-testclient = "^1.4.8"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.0"
isort = "^5.10.1"
nonemoji = "^0.1.3"
pre-commit = "^4.0.0"

[tool.poetry.group.test.dependencies]
pydantic = "^2.6.3"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.24.0"
nonebot2 = { version = "^2.2.0", extras = ["fastapi"] }

[tool.poetry.plugins.pytest11]
nonebug = "nonebug.fixture"

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--cov nonebug --cov-report term-missing -p no:nonebug"

[tool.isort]
profile = "black"
line_length = 88
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
extra_standard_library = ["typing_extensions"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
  "F",   # Pyflakes
  "W",   # pycodestyle warnings
  "E",   # pycodestyle errors
  "C90", # mccabe
  # "I",     # isort
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "TID",   # flake8-tidy-imports
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.isort]
length-sort = true
force-sort-within-sections = true
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
typeCheckingMode = "standard"
reportPrivateImportUsage = false
reportShadowedImports = false
disableBytesTypePromotions = true

pythonVersion = "3.9"
pythonPlatform = "All"
executionEnvironments = [
  { root = "./tests", extraPaths = [
    "./",
  ] },
  { root = "./" },
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "if __name__ == .__main__.:",
  "if (typing\\.)?TYPE_CHECKING( is True)?:",
  "@(abc\\.)?abstractmethod",
  "@(typing\\.)?overload",
  "raise NotImplementedError",
  "\\.\\.\\.",
  "pass",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
