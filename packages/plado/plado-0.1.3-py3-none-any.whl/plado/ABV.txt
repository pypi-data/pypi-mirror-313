[(P22 ?x0), (P29 ?x1), (P29 ?x2), (P19 ?x3), (P28 ?x4), (P27 ?x5), (P27 ?x6), (P3 ?x0 ?x4), (P1 ?x0), (P13 ?x0 ?x1), (P5 ?x3), (P8 ?x1 ?x5 ?x3), (P16 ?x2 ?x5 ?x6 ?x3), (P10 ?x4 ?x7)]
[]
[(P22 ?x0), (P22 ?x1), (P28 ?x2), (P19 ?x3), (P3 ?x0 ?x3), (P1 ?x2), (P10 ?x2 ?x4), (P5 ?x3), (P9 ?x0 ?x3), (P17 ?x0 ?x1)]
[]
[(P22 ?x0), (P21 ?x1), (P28 ?x2), (P3 ?x0 ?x1), (P1 ?x2), (P10 ?x2 ?x3)]
[]
[(P22 ?x0), (P22 ?x1), (P28 ?x2), (P21 ?x3), (P24 ?x4), (P23 ?x5), (P23 ?x6), (P3 ?x0 ?x2), (P1 ?x3), (P10 ?x2 ?x7), (P7 ?x0 ?x4), (P15 ?x0 ?x1), (P6 ?x0 ?x5), (P11 ?x0 ?x6)]
[]
[(P22 ?x0), (P28 ?x1), (P25 ?x2), (P26 ?x3), (P23 ?x4), (P23 ?x5), (P23 ?x6), (P3 ?x0 ?x1), (P1 ?x2), (P10 ?x1 ?x3), (P10 ?x2 ?x3), (P6 ?x0 ?x4), (P2 ?x2 ?x5), (P12 ?x6 ?x4 ?x5 ?x2)]
[]
[(P22 ?x0), (P22 ?x1), (P28 ?x2), (P25 ?x3), (P26 ?x4), (P26 ?x5), (P23 ?x6), (P23 ?x7), (P23 ?x8), (P3 ?x0 ?x2), (P3 ?x1 ?x3), (P10 ?x2 ?x4), (P10 ?x3 ?x4), (P0 ?x1 ?x4), (P6 ?x0 ?x6), (P2 ?x3 ?x7), (P12 ?x8 ?x6 ?x7 ?x3)]
[]
[(P22 ?x0), (P28 ?x1), (P25 ?x2), (P26 ?x3), (P26 ?x4), (P23 ?x5), (P23 ?x6), (P23 ?x7), (P1 ?x1), (P3 ?x0 ?x2), (P10 ?x1 ?x3), (P10 ?x2 ?x3), (P0 ?x0 ?x8), (P0 ?x0 ?x9), (P6 ?x0 ?x5), (P2 ?x2 ?x6), (P12 ?x6 ?x5 ?x7 ?x2)]
[]
[(P22 ?x0), (P22 ?x1), (P28 ?x2), (P25 ?x3), (P26 ?x4), (P26 ?x5), (P23 ?x6), (P23 ?x7), (P23 ?x8), (P1 ?x2), (P3 ?x0 ?x3), (P3 ?x1 ?x3), (P10 ?x2 ?x4), (P10 ?x3 ?x4), (P0 ?x0 ?x4), (P4 ?x0 ?x1 ?x4), (P4 ?x1 ?x0 ?x5), (P6 ?x0 ?x6), (P2 ?x3 ?x7), (P12 ?x7 ?x6 ?x8 ?x3)]
[]
[(P19 ?x0), (P19 ?x1), (P5 ?x0), (P14 ?x0 ?x1), (P9 ?x2 ?x0), (P8 ?x3 ?x4 ?x0)]
[]
(P32 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) =: (P22 ?x0), (P29 ?x1), (P29 ?x2), (P19 ?x3), (P28 ?x4), (P27 ?x5), (P27 ?x6), (P3 ?x0 ?x4), (P1 ?x0), (P13 ?x0 ?x1), (P5 ?x3), (P8 ?x1 ?x5 ?x3), (P16 ?x2 ?x5 ?x6 ?x3), (P10 ?x4 ?x7), ?x7 = 0
[[[[[[[[[[[[[(P8 ?x1 ?x5 ?x3)] . [(P16 ?x2 ?x5 ?x6 ?x3)]] . [(P13 ?x0 ?x1)]] . [(P22 ?x0)]] . [(P3 ?x0 ?x4)]] . [(P28 ?x4)]] . [[[(P10 ?x4 ?x7)] where ?x7==0] project onto ?x4]] . [(P1 ?x0)]] . [(P29 ?x1)]] . [(P19 ?x3)]] . [(P5 ?x3)]] . [(P29 ?x2)]] . [(P27 ?x5)]] . [(P27 ?x6)]
(P33 ?x0 ?x1 ?x2 ?x3) =: (P22 ?x0), (P22 ?x1), (P28 ?x2), (P19 ?x3), (P3 ?x0 ?x3), (P1 ?x2), (P10 ?x2 ?x4), (P5 ?x3), (P9 ?x0 ?x3), (P17 ?x0 ?x1), ?x4 = 0
[[[[[[[(P22 ?x0)] . [(P9 ?x0 ?x3)]] . [(P3 ?x0 ?x3)]] . [(P19 ?x3)]] . [(P5 ?x3)]] . [(P17 ?x0 ?x1)]] . [(P22 ?x1)]] X [[[(P28 ?x2)] . [[[(P10 ?x2 ?x4)] where ?x4==0] project onto ?x2]] . [(P1 ?x2)]]
(P34 ?x0 ?x1 ?x2) =: (P22 ?x0), (P21 ?x1), (P28 ?x2), (P3 ?x0 ?x1), (P1 ?x2), (P10 ?x2 ?x3), ?x3 = 4
[[[(P22 ?x0)] . [(P3 ?x0 ?x1)]] . [(P21 ?x1)]] X [[[(P28 ?x2)] . [[[(P10 ?x2 ?x3)] where ?x3==4] project onto ?x2]] . [(P1 ?x2)]]
(P35 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) =: (P22 ?x0), (P22 ?x1), (P28 ?x2), (P21 ?x3), (P24 ?x4), (P23 ?x5), (P23 ?x6), (P3 ?x0 ?x2), (P1 ?x3), (P10 ?x2 ?x7), (P7 ?x0 ?x4), (P15 ?x0 ?x1), (P6 ?x0 ?x5), (P11 ?x0 ?x6), ?x7 = 4
[[[[[[[[[[[[(P22 ?x0)] . [(P3 ?x0 ?x2)]] . [(P28 ?x2)]] . [[[(P10 ?x2 ?x7)] where ?x7==4] project onto ?x2]] . [(P7 ?x0 ?x4)]] . [(P24 ?x4)]] . [(P15 ?x0 ?x1)]] . [(P22 ?x1)]] . [(P6 ?x0 ?x5)]] . [(P23 ?x5)]] . [(P11 ?x0 ?x6)]] . [(P23 ?x6)]] X [[(P21 ?x3)] . [(P1 ?x3)]]
(P36 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) =: (P22 ?x0), (P28 ?x1), (P25 ?x2), (P26 ?x3), (P23 ?x4), (P23 ?x5), (P23 ?x6), (P3 ?x0 ?x1), (P1 ?x2), (P10 ?x1 ?x3), (P10 ?x2 ?x3), (P6 ?x0 ?x4), (P2 ?x2 ?x5), (P12 ?x6 ?x4 ?x5 ?x2)
[[[[[[[[[[[[[(P10 ?x2 ?x3)] . [(P12 ?x6 ?x4 ?x5 ?x2)]] . [(P10 ?x1 ?x3)]] . [(P3 ?x0 ?x1)]] . [(P22 ?x0)]] . [(P28 ?x1)]] . [(P26 ?x3)]] . [(P25 ?x2)]] . [(P1 ?x2)]] . [(P2 ?x2 ?x5)]] . [(P23 ?x5)]] . [(P23 ?x4)]] . [(P6 ?x0 ?x4)]] . [(P23 ?x6)]
(P37 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7 ?x8) =: (P22 ?x0), (P22 ?x1), (P28 ?x2), (P25 ?x3), (P26 ?x4), (P26 ?x5), (P23 ?x6), (P23 ?x7), (P23 ?x8), (P3 ?x0 ?x2), (P3 ?x1 ?x3), (P10 ?x2 ?x4), (P10 ?x3 ?x4), (P0 ?x1 ?x4), (P6 ?x0 ?x6), (P2 ?x3 ?x7), (P12 ?x8 ?x6 ?x7 ?x3), ?x4 != ?x5
[[[[[[[[[[[[[[[[[(P10 ?x3 ?x4)] . [(P12 ?x8 ?x6 ?x7 ?x3)]] . [(P10 ?x2 ?x4)]] . [(P3 ?x0 ?x2)]] . [(P22 ?x0)]] . [(P28 ?x2)]] . [(P26 ?x4)]] . [(P25 ?x3)]] . [(P3 ?x1 ?x3)]] . [(P22 ?x1)]] . [(P0 ?x1 ?x4)]] . [(P2 ?x3 ?x7)]] . [(P23 ?x7)]] . [(P23 ?x6)]] . [(P6 ?x0 ?x6)]] . [(P23 ?x8)]] X [(P26 ?x5)]] where ?x4!=?x5
(P38 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7) =: (P22 ?x0), (P28 ?x1), (P25 ?x2), (P26 ?x3), (P26 ?x4), (P23 ?x5), (P23 ?x6), (P23 ?x7), (P1 ?x1), (P3 ?x0 ?x2), (P10 ?x1 ?x3), (P10 ?x2 ?x3), (P0 ?x0 ?x8), (P0 ?x0 ?x9), (P6 ?x0 ?x5), (P2 ?x2 ?x6), (P12 ?x6 ?x5 ?x7 ?x2), ?x3 != ?x4, ?x8 = 0, ?x9 = 4
[[[[[[[[[[[[[[[[[[(P3 ?x0 ?x2)] . [(P12 ?x6 ?x5 ?x7 ?x2)]] . [(P22 ?x0)]] . [(P25 ?x2)]] . [(P10 ?x2 ?x3)]] . [(P26 ?x3)]] . [(P10 ?x1 ?x3)]] . [(P28 ?x1)]] . [(P1 ?x1)]] . [(P2 ?x2 ?x6)]] . [(P23 ?x6)]] . [(P23 ?x5)]] . [(P6 ?x0 ?x5)]] . [[(P0 ?x0 ?x8)] where ?x8==0]] . [[(P0 ?x0 ?x9)] where ?x9==4]] . [(P23 ?x7)]] X [(P26 ?x4)]] where ?x3!=?x4] project onto ?x0, ?x1, ?x2, ?x3, ?x4, ?x5, ?x6, ?x7
(P39 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7 ?x8) =: (P22 ?x0), (P22 ?x1), (P28 ?x2), (P25 ?x3), (P26 ?x4), (P26 ?x5), (P23 ?x6), (P23 ?x7), (P23 ?x8), (P1 ?x2), (P3 ?x0 ?x3), (P3 ?x1 ?x3), (P10 ?x2 ?x4), (P10 ?x3 ?x4), (P0 ?x0 ?x4), (P4 ?x0 ?x1 ?x4), (P4 ?x1 ?x0 ?x5), (P6 ?x0 ?x6), (P2 ?x3 ?x7), (P12 ?x7 ?x6 ?x8 ?x3), ?x4 != ?x5
[[[[[[[[[[[[[[[[[[[[(P3 ?x0 ?x3)] . [(P12 ?x7 ?x6 ?x8 ?x3)]] . [(P22 ?x0)]] . [(P25 ?x3)]] . [(P3 ?x1 ?x3)]] . [(P22 ?x1)]] . [(P4 ?x0 ?x1 ?x4)]] . [(P26 ?x4)]] . [(P10 ?x2 ?x4)]] . [(P28 ?x2)]] . [(P1 ?x2)]] . [(P10 ?x3 ?x4)]] . [(P0 ?x0 ?x4)]] . [(P4 ?x1 ?x0 ?x5)]] where ?x4!=?x5] . [(P26 ?x5)]] . [(P6 ?x0 ?x6)]] . [(P23 ?x6)]] . [(P23 ?x7)]] . [(P2 ?x3 ?x7)]] . [(P23 ?x8)]
(P40 ?x0 ?x1) =: (P19 ?x0), (P19 ?x1), (P5 ?x0), (P14 ?x0 ?x1), (P9 ?x2 ?x0), (P8 ?x3 ?x4 ?x0), ?x2 = 1, ?x3 = 3, ?x4 = 2
[[[[[(P19 ?x0)] . [[[[(P8 ?x3 ?x4 ?x0)] where ?x4==2] where ?x3==3] project onto ?x0]] . [(P5 ?x0)]] . [(P14 ?x0 ?x1)]] . [(P19 ?x1)]] . [[[(P9 ?x2 ?x0)] where ?x2==1] project onto ?x0]


### num clauses: 9
### num relations: 42
### clause 0: (P32 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) := [[[[[[[[[[[[[(P8 ?x1 ?x5 ?x3)] . [(P16 ?x2 ?x5 ?x6 ?x3)]] . [(P13 ?x0 ?x1)]] . [(P22 ?x0)]] . [(P3 ?x0 ?x4)]] . [(P28 ?x4)]] . [[[(P10 ?x4 ?x7)] where ?x7==0] project onto ?x4]] . [(P1 ?x0)]] . [(P29 ?x1)]] . [(P19 ?x3)]] . [(P5 ?x3)]] . [(P29 ?x2)]] . [(P27 ?x5)]] . [(P27 ?x6)]
### clause 1: (P33 ?x0 ?x1 ?x2 ?x3) := [[[[[[[(P22 ?x0)] . [(P9 ?x0 ?x3)]] . [(P3 ?x0 ?x3)]] . [(P19 ?x3)]] . [(P5 ?x3)]] . [(P17 ?x0 ?x1)]] . [(P22 ?x1)]] X [[[(P28 ?x2)] . [[[(P10 ?x2 ?x4)] where ?x4==0] project onto ?x2]] . [(P1 ?x2)]]
### clause 2: (P34 ?x0 ?x1 ?x2) := [[[(P22 ?x0)] . [(P3 ?x0 ?x1)]] . [(P21 ?x1)]] X [[[(P28 ?x2)] . [[[(P10 ?x2 ?x3)] where ?x3==4] project onto ?x2]] . [(P1 ?x2)]]
### clause 3: (P35 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) := [[[[[[[[[[[[(P22 ?x0)] . [(P3 ?x0 ?x2)]] . [(P28 ?x2)]] . [[[(P10 ?x2 ?x7)] where ?x7==4] project onto ?x2]] . [(P7 ?x0 ?x4)]] . [(P24 ?x4)]] . [(P15 ?x0 ?x1)]] . [(P22 ?x1)]] . [(P6 ?x0 ?x5)]] . [(P23 ?x5)]] . [(P11 ?x0 ?x6)]] . [(P23 ?x6)]] X [[(P21 ?x3)] . [(P1 ?x3)]]
### clause 4: (P36 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) := [[[[[[[[[[[[[(P10 ?x2 ?x3)] . [(P12 ?x6 ?x4 ?x5 ?x2)]] . [(P10 ?x1 ?x3)]] . [(P3 ?x0 ?x1)]] . [(P22 ?x0)]] . [(P28 ?x1)]] . [(P26 ?x3)]] . [(P25 ?x2)]] . [(P1 ?x2)]] . [(P2 ?x2 ?x5)]] . [(P23 ?x5)]] . [(P23 ?x4)]] . [(P6 ?x0 ?x4)]] . [(P23 ?x6)]
### clause 5: (P37 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7 ?x8) := [[[[[[[[[[[[[[[[[(P10 ?x3 ?x4)] . [(P12 ?x8 ?x6 ?x7 ?x3)]] . [(P10 ?x2 ?x4)]] . [(P3 ?x0 ?x2)]] . [(P22 ?x0)]] . [(P28 ?x2)]] . [(P26 ?x4)]] . [(P25 ?x3)]] . [(P3 ?x1 ?x3)]] . [(P22 ?x1)]] . [(P0 ?x1 ?x4)]] . [(P2 ?x3 ?x7)]] . [(P23 ?x7)]] . [(P23 ?x6)]] . [(P6 ?x0 ?x6)]] . [(P23 ?x8)]] X [(P26 ?x5)]] where ?x4!=?x5
### clause 6: (P38 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7) := [[[[[[[[[[[[[[[[[[(P3 ?x0 ?x2)] . [(P12 ?x6 ?x5 ?x7 ?x2)]] . [(P22 ?x0)]] . [(P25 ?x2)]] . [(P10 ?x2 ?x3)]] . [(P26 ?x3)]] . [(P10 ?x1 ?x3)]] . [(P28 ?x1)]] . [(P1 ?x1)]] . [(P2 ?x2 ?x6)]] . [(P23 ?x6)]] . [(P23 ?x5)]] . [(P6 ?x0 ?x5)]] . [[(P0 ?x0 ?x8)] where ?x8==0]] . [[(P0 ?x0 ?x9)] where ?x9==4]] . [(P23 ?x7)]] X [(P26 ?x4)]] where ?x3!=?x4] project onto ?x0, ?x1, ?x2, ?x3, ?x4, ?x5, ?x6, ?x7
### clause 7: (P39 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7 ?x8) := [[[[[[[[[[[[[[[[[[[[(P3 ?x0 ?x3)] . [(P12 ?x7 ?x6 ?x8 ?x3)]] . [(P22 ?x0)]] . [(P25 ?x3)]] . [(P3 ?x1 ?x3)]] . [(P22 ?x1)]] . [(P4 ?x0 ?x1 ?x4)]] . [(P26 ?x4)]] . [(P10 ?x2 ?x4)]] . [(P28 ?x2)]] . [(P1 ?x2)]] . [(P10 ?x3 ?x4)]] . [(P0 ?x0 ?x4)]] . [(P4 ?x1 ?x0 ?x5)]] where ?x4!=?x5] . [(P26 ?x5)]] . [(P6 ?x0 ?x6)]] . [(P23 ?x6)]] . [(P23 ?x7)]] . [(P2 ?x3 ?x7)]] . [(P23 ?x8)]
### clause 8: (P40 ?x0 ?x1) := [[[[[(P19 ?x0)] . [[[[(P8 ?x3 ?x4 ?x0)] where ?x4==2] where ?x3==3] project onto ?x0]] . [(P5 ?x0)]] . [(P14 ?x0 ?x1)]] . [(P19 ?x1)]] . [[[(P9 ?x2 ?x0)] where ?x2==1] project onto ?x0]
## (P32 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) := [[[[[[[[[[[[[(P8 ?x1 ?x5 ?x3)] . [(P16 ?x2 ?x5 ?x6 ?x3)]] . [(P13 ?x0 ?x1)]] . [(P22 ?x0)]] . [(P3 ?x0 ?x4)]] . [(P28 ?x4)]] . [[[(P10 ?x4 ?x7)] where ?x7==0] project onto ?x4]] . [(P1 ?x0)]] . [(P29 ?x1)]] . [(P19 ?x3)]] . [(P5 ?x3)]] . [(P29 ?x2)]] . [(P27 ?x5)]] . [(P27 ?x6)]
_aux0 = set()
_reg1 = {}
for _reg2 in relations[10]:
  if not (_reg2[1] == 0):
    continue
  if (_reg2[0],) not in _reg1:
    _reg1[(_reg2[0],)] = set()
  _reg1[(_reg2[0],)].add((_reg2[0],))
_reg5 = {}
for _reg6 in relations[3]:
  if (_reg6[0],) not in _reg5:
    _reg5[(_reg6[0],)] = set()
  _reg5[(_reg6[0],)].add((_reg6[0], _reg6[1],))
_reg9 = {}
for _reg10 in relations[13]:
  if (_reg10[1],) not in _reg9:
    _reg9[(_reg10[1],)] = set()
  _reg9[(_reg10[1],)].add((_reg10[0], _reg10[1],))
_reg12 = {}
for _reg13 in relations[16]:
  if (_reg13[3], _reg13[1],) not in _reg12:
    _reg12[(_reg13[3], _reg13[1],)] = set()
  _reg12[(_reg13[3], _reg13[1],)].add((_reg13[0], _reg13[1], _reg13[2], _reg13[3],))
for _reg15 in relations[8]:
  for _reg14 in _reg12.get((_reg15[2], _reg15[1], ), []):
    for _reg11 in _reg9.get((_reg15[0], ), []):
      if (_reg11[0], ) in relations[22]:
        for _reg7 in _reg5.get((_reg11[0], ), []):
          if (_reg7[1], ) in relations[28]:
            for _reg3 in _reg1.get((_reg7[1], ), []):
              if (_reg7[0], ) in relations[1]:
                _aux0.add((_reg7[0], _reg11[1], _reg14[0], _reg14[3], _reg3[0], _reg14[1], _reg14[2], ))
del _reg12
del _reg9
del _reg5
del _reg1
for _reg22 in _aux0:
  if (_reg22[1], ) in relations[29]:
    if (_reg22[3], ) in relations[19]:
      if (_reg22[3], ) in relations[5]:
        if (_reg22[2], ) in relations[29]:
          if (_reg22[5], ) in relations[27]:
            if (_reg22[6], ) in relations[27]:
              relations[32].add((_reg22[0], _reg22[1], _reg22[2], _reg22[3], _reg22[4], _reg22[5], _reg22[6], ))
del _aux0
## (P33 ?x0 ?x1 ?x2 ?x3) := [[[[[[[(P22 ?x0)] . [(P9 ?x0 ?x3)]] . [(P3 ?x0 ?x3)]] . [(P19 ?x3)]] . [(P5 ?x3)]] . [(P17 ?x0 ?x1)]] . [(P22 ?x1)]] X [[[(P28 ?x2)] . [[[(P10 ?x2 ?x4)] where ?x4==0] project onto ?x2]] . [(P1 ?x2)]]
_reg0 = set()
_reg2 = {}
for _reg3 in relations[10]:
  if not (_reg3[1] == 0):
    continue
  if (_reg3[0],) not in _reg2:
    _reg2[(_reg3[0],)] = set()
  _reg2[(_reg3[0],)].add((_reg3[0],))
for _reg5 in relations[28]:
  for _reg4 in _reg2.get((_reg5[0], ), []):
    if (_reg4[0], ) in relations[1]:
      _reg0.add((_reg4[0], ))
del _reg2
_reg8 = {}
for _reg9 in relations[17]:
  if (_reg9[0],) not in _reg8:
    _reg8[(_reg9[0],)] = set()
  _reg8[(_reg9[0],)].add((_reg9[0], _reg9[1],))
_reg14 = {}
for _reg15 in relations[9]:
  if (_reg15[0],) not in _reg14:
    _reg14[(_reg15[0],)] = set()
  _reg14[(_reg15[0],)].add((_reg15[0], _reg15[1],))
for _reg17 in relations[22]:
  for _reg16 in _reg14.get((_reg17[0], ), []):
    if (_reg16[0], _reg16[1], ) in relations[3]:
      if (_reg16[1], ) in relations[19]:
        if (_reg16[1], ) in relations[5]:
          for _reg10 in _reg8.get((_reg16[0], ), []):
            if (_reg10[1], ) in relations[22]:
              for _reg6 in _reg0:
                relations[33].add((_reg10[0], _reg10[1], _reg6[0], _reg16[1], ))
del _reg14
del _reg8
del _reg0
## (P34 ?x0 ?x1 ?x2) := [[[(P22 ?x0)] . [(P3 ?x0 ?x1)]] . [(P21 ?x1)]] X [[[(P28 ?x2)] . [[[(P10 ?x2 ?x3)] where ?x3==4] project onto ?x2]] . [(P1 ?x2)]]
_reg0 = set()
_reg2 = {}
for _reg3 in relations[10]:
  if not (_reg3[1] == 4):
    continue
  if (_reg3[0],) not in _reg2:
    _reg2[(_reg3[0],)] = set()
  _reg2[(_reg3[0],)].add((_reg3[0],))
for _reg5 in relations[28]:
  for _reg4 in _reg2.get((_reg5[0], ), []):
    if (_reg4[0], ) in relations[1]:
      _reg0.add((_reg4[0], ))
del _reg2
_reg8 = {}
for _reg9 in relations[3]:
  if (_reg9[0],) not in _reg8:
    _reg8[(_reg9[0],)] = set()
  _reg8[(_reg9[0],)].add((_reg9[0], _reg9[1],))
for _reg11 in relations[22]:
  for _reg10 in _reg8.get((_reg11[0], ), []):
    if (_reg10[1], ) in relations[21]:
      for _reg6 in _reg0:
        relations[34].add((_reg10[0], _reg10[1], _reg6[0], ))
del _reg8
del _reg0
## (P35 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) := [[[[[[[[[[[[(P22 ?x0)] . [(P3 ?x0 ?x2)]] . [(P28 ?x2)]] . [[[(P10 ?x2 ?x7)] where ?x7==4] project onto ?x2]] . [(P7 ?x0 ?x4)]] . [(P24 ?x4)]] . [(P15 ?x0 ?x1)]] . [(P22 ?x1)]] . [(P6 ?x0 ?x5)]] . [(P23 ?x5)]] . [(P11 ?x0 ?x6)]] . [(P23 ?x6)]] X [[(P21 ?x3)] . [(P1 ?x3)]]
_aux0 = set()
_reg1 = {}
for _reg2 in relations[15]:
  if (_reg2[0],) not in _reg1:
    _reg1[(_reg2[0],)] = set()
  _reg1[(_reg2[0],)].add((_reg2[0], _reg2[1],))
_reg5 = {}
for _reg6 in relations[7]:
  if (_reg6[0],) not in _reg5:
    _reg5[(_reg6[0],)] = set()
  _reg5[(_reg6[0],)].add((_reg6[0], _reg6[1],))
_reg8 = {}
for _reg9 in relations[10]:
  if not (_reg9[1] == 4):
    continue
  if (_reg9[0],) not in _reg8:
    _reg8[(_reg9[0],)] = set()
  _reg8[(_reg9[0],)].add((_reg9[0],))
_reg12 = {}
for _reg13 in relations[3]:
  if (_reg13[0],) not in _reg12:
    _reg12[(_reg13[0],)] = set()
  _reg12[(_reg13[0],)].add((_reg13[0], _reg13[1],))
for _reg15 in relations[22]:
  for _reg14 in _reg12.get((_reg15[0], ), []):
    if (_reg14[1], ) in relations[28]:
      for _reg10 in _reg8.get((_reg14[1], ), []):
        for _reg7 in _reg5.get((_reg14[0], ), []):
          if (_reg7[1], ) in relations[24]:
            for _reg3 in _reg1.get((_reg7[0], ), []):
              if (_reg3[1], ) in relations[22]:
                _aux0.add((_reg3[0], _reg3[1], _reg10[0], _reg7[1], ))
del _reg12
del _reg8
del _reg5
del _reg1
_reg16 = set()
for _reg18 in relations[21]:
  if (_reg18[0], ) in relations[1]:
    _reg16.add((_reg18[0], ))
_reg21 = {}
for _reg22 in relations[11]:
  if (_reg22[0],) not in _reg21:
    _reg21[(_reg22[0],)] = set()
  _reg21[(_reg22[0],)].add((_reg22[0], _reg22[1],))
_reg25 = {}
for _reg26 in relations[6]:
  if (_reg26[0],) not in _reg25:
    _reg25[(_reg26[0],)] = set()
  _reg25[(_reg26[0],)].add((_reg26[0], _reg26[1],))
for _reg28 in _aux0:
  for _reg27 in _reg25.get((_reg28[0], ), []):
    if (_reg27[1], ) in relations[23]:
      for _reg23 in _reg21.get((_reg27[0], ), []):
        if (_reg23[1], ) in relations[23]:
          for _reg19 in _reg16:
            relations[35].add((_reg23[0], _reg28[1], _reg28[2], _reg19[0], _reg28[3], _reg27[1], _reg23[1], ))
del _reg25
del _reg21
del _reg16
del _aux0
## (P36 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6) := [[[[[[[[[[[[[(P10 ?x2 ?x3)] . [(P12 ?x6 ?x4 ?x5 ?x2)]] . [(P10 ?x1 ?x3)]] . [(P3 ?x0 ?x1)]] . [(P22 ?x0)]] . [(P28 ?x1)]] . [(P26 ?x3)]] . [(P25 ?x2)]] . [(P1 ?x2)]] . [(P2 ?x2 ?x5)]] . [(P23 ?x5)]] . [(P23 ?x4)]] . [(P6 ?x0 ?x4)]] . [(P23 ?x6)]
_aux0 = set()
_reg4 = {}
for _reg5 in relations[3]:
  if (_reg5[1],) not in _reg4:
    _reg4[(_reg5[1],)] = set()
  _reg4[(_reg5[1],)].add((_reg5[0], _reg5[1],))
_reg7 = {}
for _reg8 in relations[10]:
  if (_reg8[1],) not in _reg7:
    _reg7[(_reg8[1],)] = set()
  _reg7[(_reg8[1],)].add((_reg8[0], _reg8[1],))
_reg10 = {}
for _reg11 in relations[12]:
  if (_reg11[3],) not in _reg10:
    _reg10[(_reg11[3],)] = set()
  _reg10[(_reg11[3],)].add((_reg11[0], _reg11[1], _reg11[2], _reg11[3],))
for _reg13 in relations[10]:
  for _reg12 in _reg10.get((_reg13[0], ), []):
    for _reg9 in _reg7.get((_reg13[1], ), []):
      for _reg6 in _reg4.get((_reg9[0], ), []):
        if (_reg6[0], ) in relations[22]:
          if (_reg6[1], ) in relations[28]:
            if (_reg9[1], ) in relations[26]:
              if (_reg12[3], ) in relations[25]:
                _aux0.add((_reg6[0], _reg6[1], _reg12[3], _reg9[1], _reg12[1], _reg12[2], _reg12[0], ))
del _reg10
del _reg7
del _reg4
for _reg20 in _aux0:
  if (_reg20[2], ) in relations[1]:
    if (_reg20[2], _reg20[5], ) in relations[2]:
      if (_reg20[5], ) in relations[23]:
        if (_reg20[4], ) in relations[23]:
          if (_reg20[0], _reg20[4], ) in relations[6]:
            if (_reg20[6], ) in relations[23]:
              relations[36].add((_reg20[0], _reg20[1], _reg20[2], _reg20[3], _reg20[4], _reg20[5], _reg20[6], ))
del _aux0
## (P37 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7 ?x8) := [[[[[[[[[[[[[[[[[(P10 ?x3 ?x4)] . [(P12 ?x8 ?x6 ?x7 ?x3)]] . [(P10 ?x2 ?x4)]] . [(P3 ?x0 ?x2)]] . [(P22 ?x0)]] . [(P28 ?x2)]] . [(P26 ?x4)]] . [(P25 ?x3)]] . [(P3 ?x1 ?x3)]] . [(P22 ?x1)]] . [(P0 ?x1 ?x4)]] . [(P2 ?x3 ?x7)]] . [(P23 ?x7)]] . [(P23 ?x6)]] . [(P6 ?x0 ?x6)]] . [(P23 ?x8)]] X [(P26 ?x5)]] where ?x4!=?x5
_aux0 = set()
_reg4 = {}
for _reg5 in relations[3]:
  if (_reg5[1],) not in _reg4:
    _reg4[(_reg5[1],)] = set()
  _reg4[(_reg5[1],)].add((_reg5[0], _reg5[1],))
_reg7 = {}
for _reg8 in relations[10]:
  if (_reg8[1],) not in _reg7:
    _reg7[(_reg8[1],)] = set()
  _reg7[(_reg8[1],)].add((_reg8[0], _reg8[1],))
_reg10 = {}
for _reg11 in relations[12]:
  if (_reg11[3],) not in _reg10:
    _reg10[(_reg11[3],)] = set()
  _reg10[(_reg11[3],)].add((_reg11[0], _reg11[1], _reg11[2], _reg11[3],))
for _reg13 in relations[10]:
  for _reg12 in _reg10.get((_reg13[0], ), []):
    for _reg9 in _reg7.get((_reg13[1], ), []):
      for _reg6 in _reg4.get((_reg9[0], ), []):
        if (_reg6[0], ) in relations[22]:
          if (_reg6[1], ) in relations[28]:
            if (_reg9[1], ) in relations[26]:
              if (_reg12[3], ) in relations[25]:
                _aux0.add((_reg6[0], _reg6[1], _reg12[3], _reg9[1], _reg12[1], _reg12[2], _reg12[0], ))
del _reg10
del _reg7
del _reg4
_aux1 = set()
_reg20 = {}
for _reg21 in relations[3]:
  if (_reg21[1],) not in _reg20:
    _reg20[(_reg21[1],)] = set()
  _reg20[(_reg21[1],)].add((_reg21[0], _reg21[1],))
for _reg23 in _aux0:
  for _reg22 in _reg20.get((_reg23[2], ), []):
    if (_reg22[0], ) in relations[22]:
      if (_reg22[0], _reg23[3], ) in relations[0]:
        if (_reg22[1], _reg23[5], ) in relations[2]:
          if (_reg23[5], ) in relations[23]:
            if (_reg23[4], ) in relations[23]:
              if (_reg23[0], _reg23[4], ) in relations[6]:
                _aux1.add((_reg23[0], _reg22[0], _reg23[1], _reg22[1], _reg23[3], _reg23[4], _reg23[5], _reg23[6], ))
del _reg20
del _aux0
for _reg26 in _aux1:
  if (_reg26[7], ) in relations[23]:
    for _reg24 in relations[26]:
      if _reg26[4] != _reg24[0]:
        relations[37].add((_reg26[0], _reg26[1], _reg26[2], _reg26[3], _reg26[4], _reg24[0], _reg26[5], _reg26[6], _reg26[7], ))
del _aux1
## (P38 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7) := [[[[[[[[[[[[[[[[[[(P3 ?x0 ?x2)] . [(P12 ?x6 ?x5 ?x7 ?x2)]] . [(P22 ?x0)]] . [(P25 ?x2)]] . [(P10 ?x2 ?x3)]] . [(P26 ?x3)]] . [(P10 ?x1 ?x3)]] . [(P28 ?x1)]] . [(P1 ?x1)]] . [(P2 ?x2 ?x6)]] . [(P23 ?x6)]] . [(P23 ?x5)]] . [(P6 ?x0 ?x5)]] . [[(P0 ?x0 ?x8)] where ?x8==0]] . [[(P0 ?x0 ?x9)] where ?x9==4]] . [(P23 ?x7)]] X [(P26 ?x4)]] where ?x3!=?x4] project onto ?x0, ?x1, ?x2, ?x3, ?x4, ?x5, ?x6, ?x7
_aux0 = set()
_reg1 = {}
for _reg2 in relations[10]:
  if (_reg2[1],) not in _reg1:
    _reg1[(_reg2[1],)] = set()
  _reg1[(_reg2[1],)].add((_reg2[0], _reg2[1],))
_reg5 = {}
for _reg6 in relations[10]:
  if (_reg6[0],) not in _reg5:
    _reg5[(_reg6[0],)] = set()
  _reg5[(_reg6[0],)].add((_reg6[0], _reg6[1],))
_reg10 = {}
for _reg11 in relations[12]:
  if (_reg11[3],) not in _reg10:
    _reg10[(_reg11[3],)] = set()
  _reg10[(_reg11[3],)].add((_reg11[0], _reg11[1], _reg11[2], _reg11[3],))
for _reg13 in relations[3]:
  for _reg12 in _reg10.get((_reg13[1], ), []):
    if (_reg13[0], ) in relations[22]:
      if (_reg12[3], ) in relations[25]:
        for _reg7 in _reg5.get((_reg12[3], ), []):
          if (_reg7[1], ) in relations[26]:
            for _reg3 in _reg1.get((_reg7[1], ), []):
              if (_reg3[0], ) in relations[28]:
                _aux0.add((_reg13[0], _reg3[0], _reg7[0], _reg3[1], _reg12[1], _reg12[0], _reg12[2], ))
del _reg10
del _reg5
del _reg1
_aux1 = set()
_reg14 = {}
for _reg15 in relations[0]:
  if not (_reg15[1] == 4):
    continue
  if (_reg15[0],) not in _reg14:
    _reg14[(_reg15[0],)] = set()
  _reg14[(_reg15[0],)].add((_reg15[0], _reg15[1],))
_reg17 = {}
for _reg18 in relations[0]:
  if not (_reg18[1] == 0):
    continue
  if (_reg18[0],) not in _reg17:
    _reg17[(_reg18[0],)] = set()
  _reg17[(_reg18[0],)].add((_reg18[0], _reg18[1],))
for _reg25 in _aux0:
  if (_reg25[1], ) in relations[1]:
    if (_reg25[2], _reg25[5], ) in relations[2]:
      if (_reg25[5], ) in relations[23]:
        if (_reg25[4], ) in relations[23]:
          if (_reg25[0], _reg25[4], ) in relations[6]:
            for _reg19 in _reg17.get((_reg25[0], ), []):
              for _reg16 in _reg14.get((_reg19[0], ), []):
                _aux1.add((_reg16[0], _reg25[1], _reg25[2], _reg25[3], _reg25[4], _reg25[5], _reg25[6], _reg19[1], _reg16[1], ))
del _reg17
del _reg14
del _aux0
for _reg28 in _aux1:
  if (_reg28[6], ) in relations[23]:
    for _reg26 in relations[26]:
      if _reg28[3] != _reg26[0]:
        relations[38].add((_reg28[0], _reg28[1], _reg28[2], _reg28[3], _reg26[0], _reg28[4], _reg28[5], _reg28[6], ))
del _aux1
## (P39 ?x0 ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ?x7 ?x8) := [[[[[[[[[[[[[[[[[[[[(P3 ?x0 ?x3)] . [(P12 ?x7 ?x6 ?x8 ?x3)]] . [(P22 ?x0)]] . [(P25 ?x3)]] . [(P3 ?x1 ?x3)]] . [(P22 ?x1)]] . [(P4 ?x0 ?x1 ?x4)]] . [(P26 ?x4)]] . [(P10 ?x2 ?x4)]] . [(P28 ?x2)]] . [(P1 ?x2)]] . [(P10 ?x3 ?x4)]] . [(P0 ?x0 ?x4)]] . [(P4 ?x1 ?x0 ?x5)]] where ?x4!=?x5] . [(P26 ?x5)]] . [(P6 ?x0 ?x6)]] . [(P23 ?x6)]] . [(P23 ?x7)]] . [(P2 ?x3 ?x7)]] . [(P23 ?x8)]
_aux0 = set()
_reg1 = {}
for _reg2 in relations[4]:
  if (_reg2[0], _reg2[1],) not in _reg1:
    _reg1[(_reg2[0], _reg2[1],)] = set()
  _reg1[(_reg2[0], _reg2[1],)].add((_reg2[0], _reg2[1], _reg2[2],))
_reg5 = {}
for _reg6 in relations[3]:
  if (_reg6[1],) not in _reg5:
    _reg5[(_reg6[1],)] = set()
  _reg5[(_reg6[1],)].add((_reg6[0], _reg6[1],))
_reg10 = {}
for _reg11 in relations[12]:
  if (_reg11[3],) not in _reg10:
    _reg10[(_reg11[3],)] = set()
  _reg10[(_reg11[3],)].add((_reg11[0], _reg11[1], _reg11[2], _reg11[3],))
for _reg13 in relations[3]:
  for _reg12 in _reg10.get((_reg13[1], ), []):
    if (_reg13[0], ) in relations[22]:
      if (_reg12[3], ) in relations[25]:
        for _reg7 in _reg5.get((_reg12[3], ), []):
          if (_reg7[0], ) in relations[22]:
            for _reg3 in _reg1.get((_reg13[0], _reg7[0], ), []):
              if (_reg3[2], ) in relations[26]:
                _aux0.add((_reg3[0], _reg3[1], _reg7[1], _reg3[2], _reg12[1], _reg12[0], _reg12[2], ))
del _reg10
del _reg5
del _reg1
_aux1 = set()
_reg15 = {}
for _reg16 in relations[4]:
  if (_reg16[1], _reg16[0],) not in _reg15:
    _reg15[(_reg16[1], _reg16[0],)] = set()
  _reg15[(_reg16[1], _reg16[0],)].add((_reg16[0], _reg16[1], _reg16[2],))
_reg22 = {}
for _reg23 in relations[10]:
  if (_reg23[1],) not in _reg22:
    _reg22[(_reg23[1],)] = set()
  _reg22[(_reg23[1],)].add((_reg23[0], _reg23[1],))
for _reg25 in _aux0:
  for _reg24 in _reg22.get((_reg25[3], ), []):
    if (_reg24[0], ) in relations[28]:
      if (_reg24[0], ) in relations[1]:
        if (_reg25[2], _reg24[1], ) in relations[10]:
          if (_reg25[0], _reg24[1], ) in relations[0]:
            for _reg17 in _reg15.get((_reg25[0], _reg25[1], ), []):
              if _reg24[1] != _reg17[2]:
                if (_reg17[2], ) in relations[26]:
                  _aux1.add((_reg17[1], _reg17[0], _reg24[0], _reg25[2], _reg24[1], _reg17[2], _reg25[4], _reg25[5], _reg25[6], ))
del _reg22
del _reg15
del _aux0
for _reg31 in _aux1:
  if (_reg31[0], _reg31[6], ) in relations[6]:
    if (_reg31[6], ) in relations[23]:
      if (_reg31[7], ) in relations[23]:
        if (_reg31[3], _reg31[7], ) in relations[2]:
          if (_reg31[8], ) in relations[23]:
            relations[39].add((_reg31[0], _reg31[1], _reg31[2], _reg31[3], _reg31[4], _reg31[5], _reg31[6], _reg31[7], _reg31[8], ))
del _aux1
## (P40 ?x0 ?x1) := [[[[[(P19 ?x0)] . [[[[(P8 ?x3 ?x4 ?x0)] where ?x4==2] where ?x3==3] project onto ?x0]] . [(P5 ?x0)]] . [(P14 ?x0 ?x1)]] . [(P19 ?x1)]] . [[[(P9 ?x2 ?x0)] where ?x2==1] project onto ?x0]
_reg0 = {}
for _reg1 in relations[9]:
  if not (_reg1[0] == 1):
    continue
  if (_reg1[1],) not in _reg0:
    _reg0[(_reg1[1],)] = set()
  _reg0[(_reg1[1],)].add((_reg1[1],))
_reg4 = {}
for _reg5 in relations[14]:
  if (_reg5[0],) not in _reg4:
    _reg4[(_reg5[0],)] = set()
  _reg4[(_reg5[0],)].add((_reg5[0], _reg5[1],))
_reg8 = {}
for _reg9 in relations[8]:
  if not (_reg9[0] == 3 and _reg9[1] == 2):
    continue
  if (_reg9[2],) not in _reg8:
    _reg8[(_reg9[2],)] = set()
  _reg8[(_reg9[2],)].add((_reg9[2],))
for _reg11 in relations[19]:
  for _reg10 in _reg8.get((_reg11[0], ), []):
    if (_reg10[0], ) in relations[5]:
      for _reg6 in _reg4.get((_reg10[0], ), []):
        if (_reg6[1], ) in relations[19]:
          for _reg2 in _reg0.get((_reg6[0], ), []):
            relations[40].add((_reg2[0], _reg6[1], ))
del _reg8
del _reg4
del _reg0


[]
[GroundAtomRef(relation=1, objects=[61]), GroundAtomRef(relation=1, objects=[69]), GroundAtomRef(relation=1, objects=[66]), GroundAtomRef(relation=1, objects=[74]), GroundAtomRef(relation=1, objects=[76]), GroundAtomRef(relation=1, objects=[82]), GroundAtomRef(relation=1, objects=[68]), GroundAtomRef(relation=1, objects=[72]), GroundAtomRef(relation=1, objects=[60]), GroundAtomRef(relation=1, objects=[67]), GroundAtomRef(relation=1, objects=[98]), GroundAtomRef(relation=1, objects=[70]), GroundAtomRef(relation=1, objects=[79]), GroundAtomRef(relation=1, objects=[83]), GroundAtomRef(relation=1, objects=[80]), GroundAtomRef(relation=1, objects=[87]), GroundAtomRef(relation=1, objects=[104]), GroundAtomRef(relation=1, objects=[96]), GroundAtomRef(relation=1, objects=[91]), GroundAtomRef(relation=1, objects=[94]), GroundAtomRef(relation=1, objects=[81]), GroundAtomRef(relation=1, objects=[101]), GroundAtomRef(relation=1, objects=[109]), GroundAtomRef(relation=1, objects=[103]), GroundAtomRef(relation=1, objects=[111]), GroundAtomRef(relation=1, objects=[100]), GroundAtomRef(relation=1, objects=[113]), GroundAtomRef(relation=1, objects=[117]), GroundAtomRef(relation=1, objects=[112]), GroundAtomRef(relation=1, objects=[118]), GroundAtomRef(relation=1, objects=[125]), GroundAtomRef(relation=1, objects=[62]), GroundAtomRef(relation=1, objects=[64]), GroundAtomRef(relation=1, objects=[65]), GroundAtomRef(relation=1, objects=[63]), GroundAtomRef(relation=1, objects=[78]), GroundAtomRef(relation=1, objects=[73]), GroundAtomRef(relation=1, objects=[90]), GroundAtomRef(relation=1, objects=[89]), GroundAtomRef(relation=1, objects=[86]), GroundAtomRef(relation=1, objects=[75]), GroundAtomRef(relation=1, objects=[97]), GroundAtomRef(relation=1, objects=[102]), GroundAtomRef(relation=1, objects=[71]), GroundAtomRef(relation=1, objects=[85]), GroundAtomRef(relation=1, objects=[88]), GroundAtomRef(relation=1, objects=[84]), GroundAtomRef(relation=1, objects=[92]), GroundAtomRef(relation=1, objects=[77]), GroundAtomRef(relation=1, objects=[105]), GroundAtomRef(relation=1, objects=[93]), GroundAtomRef(relation=1, objects=[108]), GroundAtomRef(relation=1, objects=[95]), GroundAtomRef(relation=1, objects=[107]), GroundAtomRef(relation=1, objects=[106]), GroundAtomRef(relation=1, objects=[114]), GroundAtomRef(relation=1, objects=[99]), GroundAtomRef(relation=1, objects=[119]), GroundAtomRef(relation=1, objects=[115]), GroundAtomRef(relation=1, objects=[110]), GroundAtomRef(relation=1, objects=[122]), GroundAtomRef(relation=1, objects=[123]), GroundAtomRef(relation=9, objects=[1, 143]), GroundAtomRef(relation=9, objects=[1, 144]), GroundAtomRef(relation=9, objects=[1, 145]), GroundAtomRef(relation=9, objects=[1, 146]), GroundAtomRef(relation=9, objects=[1, 147]), GroundAtomRef(relation=9, objects=[1, 148]), GroundAtomRef(relation=9, objects=[1, 149]), GroundAtomRef(relation=9, objects=[1, 150]), GroundAtomRef(relation=9, objects=[1, 151]), GroundAtomRef(relation=9, objects=[1, 152]), GroundAtomRef(relation=9, objects=[1, 153]), GroundAtomRef(relation=9, objects=[1, 154]), GroundAtomRef(relation=9, objects=[1, 155]), GroundAtomRef(relation=9, objects=[1, 156]), GroundAtomRef(relation=9, objects=[1, 157]), GroundAtomRef(relation=9, objects=[1, 158]), GroundAtomRef(relation=9, objects=[1, 159]), GroundAtomRef(relation=9, objects=[1, 160]), GroundAtomRef(relation=9, objects=[1, 161]), GroundAtomRef(relation=9, objects=[1, 162]), GroundAtomRef(relation=9, objects=[1, 163]), GroundAtomRef(relation=9, objects=[1, 164]), GroundAtomRef(relation=9, objects=[1, 165]), GroundAtomRef(relation=9, objects=[1, 166]), GroundAtomRef(relation=9, objects=[1, 167]), GroundAtomRef(relation=9, objects=[1, 168]), GroundAtomRef(relation=9, objects=[1, 169]), GroundAtomRef(relation=9, objects=[1, 170]), GroundAtomRef(relation=9, objects=[1, 171]), GroundAtomRef(relation=9, objects=[1, 172]), GroundAtomRef(relation=9, objects=[1, 173]), GroundAtomRef(relation=9, objects=[1, 174]), GroundAtomRef(relation=9, objects=[1, 175]), GroundAtomRef(relation=9, objects=[1, 176]), GroundAtomRef(relation=9, objects=[1, 177]), GroundAtomRef(relation=9, objects=[1, 178]), GroundAtomRef(relation=9, objects=[1, 179]), GroundAtomRef(relation=9, objects=[1, 180]), GroundAtomRef(relation=9, objects=[1, 181]), GroundAtomRef(relation=9, objects=[1, 182]), GroundAtomRef(relation=9, objects=[1, 183]), GroundAtomRef(relation=9, objects=[1, 184]), GroundAtomRef(relation=9, objects=[1, 185]), GroundAtomRef(relation=9, objects=[1, 186]), GroundAtomRef(relation=9, objects=[1, 187]), GroundAtomRef(relation=9, objects=[1, 188]), GroundAtomRef(relation=9, objects=[1, 189]), GroundAtomRef(relation=9, objects=[1, 190]), GroundAtomRef(relation=9, objects=[1, 191]), GroundAtomRef(relation=9, objects=[1, 192]), GroundAtomRef(relation=9, objects=[1, 193]), GroundAtomRef(relation=9, objects=[1, 194]), GroundAtomRef(relation=9, objects=[1, 195]), GroundAtomRef(relation=9, objects=[1, 196]), GroundAtomRef(relation=9, objects=[1, 197]), GroundAtomRef(relation=9, objects=[1, 198]), GroundAtomRef(relation=9, objects=[1, 199]), GroundAtomRef(relation=9, objects=[1, 200]), GroundAtomRef(relation=9, objects=[1, 201]), GroundAtomRef(relation=8, objects=[3, 2, 143]), GroundAtomRef(relation=8, objects=[3, 2, 144]), GroundAtomRef(relation=8, objects=[3, 2, 145]), GroundAtomRef(relation=8, objects=[3, 2, 146]), GroundAtomRef(relation=8, objects=[3, 2, 147]), GroundAtomRef(relation=8, objects=[3, 2, 148]), GroundAtomRef(relation=8, objects=[3, 2, 149]), GroundAtomRef(relation=8, objects=[3, 2, 150]), GroundAtomRef(relation=8, objects=[3, 2, 151]), GroundAtomRef(relation=8, objects=[3, 2, 152]), GroundAtomRef(relation=8, objects=[3, 2, 153]), GroundAtomRef(relation=8, objects=[3, 2, 154]), GroundAtomRef(relation=8, objects=[3, 2, 155]), GroundAtomRef(relation=8, objects=[3, 2, 156]), GroundAtomRef(relation=8, objects=[3, 2, 157]), GroundAtomRef(relation=8, objects=[3, 2, 158]), GroundAtomRef(relation=8, objects=[3, 2, 159]), GroundAtomRef(relation=8, objects=[3, 2, 160]), GroundAtomRef(relation=8, objects=[3, 2, 161]), GroundAtomRef(relation=8, objects=[3, 2, 162]), GroundAtomRef(relation=8, objects=[3, 2, 163]), GroundAtomRef(relation=8, objects=[3, 2, 164]), GroundAtomRef(relation=8, objects=[3, 2, 165]), GroundAtomRef(relation=8, objects=[3, 2, 166]), GroundAtomRef(relation=8, objects=[3, 2, 167]), GroundAtomRef(relation=8, objects=[3, 2, 168]), GroundAtomRef(relation=8, objects=[3, 2, 169]), GroundAtomRef(relation=8, objects=[3, 2, 170]), GroundAtomRef(relation=8, objects=[3, 2, 171]), GroundAtomRef(relation=8, objects=[3, 2, 172]), GroundAtomRef(relation=8, objects=[3, 2, 173]), GroundAtomRef(relation=8, objects=[3, 2, 174]), GroundAtomRef(relation=8, objects=[3, 2, 175]), GroundAtomRef(relation=8, objects=[3, 2, 176]), GroundAtomRef(relation=8, objects=[3, 2, 177]), GroundAtomRef(relation=8, objects=[3, 2, 178]), GroundAtomRef(relation=8, objects=[3, 2, 179]), GroundAtomRef(relation=8, objects=[3, 2, 180]), GroundAtomRef(relation=8, objects=[3, 2, 181]), GroundAtomRef(relation=8, objects=[3, 2, 182]), GroundAtomRef(relation=8, objects=[3, 2, 183]), GroundAtomRef(relation=8, objects=[3, 2, 184]), GroundAtomRef(relation=8, objects=[3, 2, 185]), GroundAtomRef(relation=8, objects=[3, 2, 186]), GroundAtomRef(relation=8, objects=[3, 2, 187]), GroundAtomRef(relation=8, objects=[3, 2, 188]), GroundAtomRef(relation=8, objects=[3, 2, 189]), GroundAtomRef(relation=8, objects=[3, 2, 190]), GroundAtomRef(relation=8, objects=[3, 2, 191]), GroundAtomRef(relation=8, objects=[3, 2, 192]), GroundAtomRef(relation=8, objects=[3, 2, 193]), GroundAtomRef(relation=8, objects=[3, 2, 194]), GroundAtomRef(relation=8, objects=[3, 2, 195]), GroundAtomRef(relation=8, objects=[3, 2, 196]), GroundAtomRef(relation=8, objects=[3, 2, 197]), GroundAtomRef(relation=8, objects=[3, 2, 198]), GroundAtomRef(relation=8, objects=[3, 2, 199]), GroundAtomRef(relation=8, objects=[3, 2, 200]), GroundAtomRef(relation=8, objects=[3, 2, 201])]
(P32) =: 
[{()}] if [61] in R1, [69] in R1, [66] in R1, [74] in R1, [76] in R1, [82] in R1, [68] in R1, [72] in R1, [60] in R1, [67] in R1, [98] in R1, [70] in R1, [79] in R1, [83] in R1, [80] in R1, [87] in R1, [104] in R1, [96] in R1, [91] in R1, [94] in R1, [81] in R1, [101] in R1, [109] in R1, [103] in R1, [111] in R1, [100] in R1, [113] in R1, [117] in R1, [112] in R1, [118] in R1, [125] in R1, [62] in R1, [64] in R1, [65] in R1, [63] in R1, [78] in R1, [73] in R1, [90] in R1, [89] in R1, [86] in R1, [75] in R1, [97] in R1, [102] in R1, [71] in R1, [85] in R1, [88] in R1, [84] in R1, [92] in R1, [77] in R1, [105] in R1, [93] in R1, [108] in R1, [95] in R1, [107] in R1, [106] in R1, [114] in R1, [99] in R1, [119] in R1, [115] in R1, [110] in R1, [122] in R1, [123] in R1, [1, 143] in R9, [1, 144] in R9, [1, 145] in R9, [1, 146] in R9, [1, 147] in R9, [1, 148] in R9, [1, 149] in R9, [1, 150] in R9, [1, 151] in R9, [1, 152] in R9, [1, 153] in R9, [1, 154] in R9, [1, 155] in R9, [1, 156] in R9, [1, 157] in R9, [1, 158] in R9, [1, 159] in R9, [1, 160] in R9, [1, 161] in R9, [1, 162] in R9, [1, 163] in R9, [1, 164] in R9, [1, 165] in R9, [1, 166] in R9, [1, 167] in R9, [1, 168] in R9, [1, 169] in R9, [1, 170] in R9, [1, 171] in R9, [1, 172] in R9, [1, 173] in R9, [1, 174] in R9, [1, 175] in R9, [1, 176] in R9, [1, 177] in R9, [1, 178] in R9, [1, 179] in R9, [1, 180] in R9, [1, 181] in R9, [1, 182] in R9, [1, 183] in R9, [1, 184] in R9, [1, 185] in R9, [1, 186] in R9, [1, 187] in R9, [1, 188] in R9, [1, 189] in R9, [1, 190] in R9, [1, 191] in R9, [1, 192] in R9, [1, 193] in R9, [1, 194] in R9, [1, 195] in R9, [1, 196] in R9, [1, 197] in R9, [1, 198] in R9, [1, 199] in R9, [1, 200] in R9, [1, 201] in R9, [3, 2, 143] in R8, [3, 2, 144] in R8, [3, 2, 145] in R8, [3, 2, 146] in R8, [3, 2, 147] in R8, [3, 2, 148] in R8, [3, 2, 149] in R8, [3, 2, 150] in R8, [3, 2, 151] in R8, [3, 2, 152] in R8, [3, 2, 153] in R8, [3, 2, 154] in R8, [3, 2, 155] in R8, [3, 2, 156] in R8, [3, 2, 157] in R8, [3, 2, 158] in R8, [3, 2, 159] in R8, [3, 2, 160] in R8, [3, 2, 161] in R8, [3, 2, 162] in R8, [3, 2, 163] in R8, [3, 2, 164] in R8, [3, 2, 165] in R8, [3, 2, 166] in R8, [3, 2, 167] in R8, [3, 2, 168] in R8, [3, 2, 169] in R8, [3, 2, 170] in R8, [3, 2, 171] in R8, [3, 2, 172] in R8, [3, 2, 173] in R8, [3, 2, 174] in R8, [3, 2, 175] in R8, [3, 2, 176] in R8, [3, 2, 177] in R8, [3, 2, 178] in R8, [3, 2, 179] in R8, [3, 2, 180] in R8, [3, 2, 181] in R8, [3, 2, 182] in R8, [3, 2, 183] in R8, [3, 2, 184] in R8, [3, 2, 185] in R8, [3, 2, 186] in R8, [3, 2, 187] in R8, [3, 2, 188] in R8, [3, 2, 189] in R8, [3, 2, 190] in R8, [3, 2, 191] in R8, [3, 2, 192] in R8, [3, 2, 193] in R8, [3, 2, 194] in R8, [3, 2, 195] in R8, [3, 2, 196] in R8, [3, 2, 197] in R8, [3, 2, 198] in R8, [3, 2, 199] in R8, [3, 2, 200] in R8, [3, 2, 201] in R8


### num clauses: 1
### num relations: 34
### clause 0: (P32) := [{()}] if [61] in R1, [69] in R1, [66] in R1, [74] in R1, [76] in R1, [82] in R1, [68] in R1, [72] in R1, [60] in R1, [67] in R1, [98] in R1, [70] in R1, [79] in R1, [83] in R1, [80] in R1, [87] in R1, [104] in R1, [96] in R1, [91] in R1, [94] in R1, [81] in R1, [101] in R1, [109] in R1, [103] in R1, [111] in R1, [100] in R1, [113] in R1, [117] in R1, [112] in R1, [118] in R1, [125] in R1, [62] in R1, [64] in R1, [65] in R1, [63] in R1, [78] in R1, [73] in R1, [90] in R1, [89] in R1, [86] in R1, [75] in R1, [97] in R1, [102] in R1, [71] in R1, [85] in R1, [88] in R1, [84] in R1, [92] in R1, [77] in R1, [105] in R1, [93] in R1, [108] in R1, [95] in R1, [107] in R1, [106] in R1, [114] in R1, [99] in R1, [119] in R1, [115] in R1, [110] in R1, [122] in R1, [123] in R1, [1, 143] in R9, [1, 144] in R9, [1, 145] in R9, [1, 146] in R9, [1, 147] in R9, [1, 148] in R9, [1, 149] in R9, [1, 150] in R9, [1, 151] in R9, [1, 152] in R9, [1, 153] in R9, [1, 154] in R9, [1, 155] in R9, [1, 156] in R9, [1, 157] in R9, [1, 158] in R9, [1, 159] in R9, [1, 160] in R9, [1, 161] in R9, [1, 162] in R9, [1, 163] in R9, [1, 164] in R9, [1, 165] in R9, [1, 166] in R9, [1, 167] in R9, [1, 168] in R9, [1, 169] in R9, [1, 170] in R9, [1, 171] in R9, [1, 172] in R9, [1, 173] in R9, [1, 174] in R9, [1, 175] in R9, [1, 176] in R9, [1, 177] in R9, [1, 178] in R9, [1, 179] in R9, [1, 180] in R9, [1, 181] in R9, [1, 182] in R9, [1, 183] in R9, [1, 184] in R9, [1, 185] in R9, [1, 186] in R9, [1, 187] in R9, [1, 188] in R9, [1, 189] in R9, [1, 190] in R9, [1, 191] in R9, [1, 192] in R9, [1, 193] in R9, [1, 194] in R9, [1, 195] in R9, [1, 196] in R9, [1, 197] in R9, [1, 198] in R9, [1, 199] in R9, [1, 200] in R9, [1, 201] in R9, [3, 2, 143] in R8, [3, 2, 144] in R8, [3, 2, 145] in R8, [3, 2, 146] in R8, [3, 2, 147] in R8, [3, 2, 148] in R8, [3, 2, 149] in R8, [3, 2, 150] in R8, [3, 2, 151] in R8, [3, 2, 152] in R8, [3, 2, 153] in R8, [3, 2, 154] in R8, [3, 2, 155] in R8, [3, 2, 156] in R8, [3, 2, 157] in R8, [3, 2, 158] in R8, [3, 2, 159] in R8, [3, 2, 160] in R8, [3, 2, 161] in R8, [3, 2, 162] in R8, [3, 2, 163] in R8, [3, 2, 164] in R8, [3, 2, 165] in R8, [3, 2, 166] in R8, [3, 2, 167] in R8, [3, 2, 168] in R8, [3, 2, 169] in R8, [3, 2, 170] in R8, [3, 2, 171] in R8, [3, 2, 172] in R8, [3, 2, 173] in R8, [3, 2, 174] in R8, [3, 2, 175] in R8, [3, 2, 176] in R8, [3, 2, 177] in R8, [3, 2, 178] in R8, [3, 2, 179] in R8, [3, 2, 180] in R8, [3, 2, 181] in R8, [3, 2, 182] in R8, [3, 2, 183] in R8, [3, 2, 184] in R8, [3, 2, 185] in R8, [3, 2, 186] in R8, [3, 2, 187] in R8, [3, 2, 188] in R8, [3, 2, 189] in R8, [3, 2, 190] in R8, [3, 2, 191] in R8, [3, 2, 192] in R8, [3, 2, 193] in R8, [3, 2, 194] in R8, [3, 2, 195] in R8, [3, 2, 196] in R8, [3, 2, 197] in R8, [3, 2, 198] in R8, [3, 2, 199] in R8, [3, 2, 200] in R8, [3, 2, 201] in R8
## (P32) := [{()}] if [61] in R1, [69] in R1, [66] in R1, [74] in R1, [76] in R1, [82] in R1, [68] in R1, [72] in R1, [60] in R1, [67] in R1, [98] in R1, [70] in R1, [79] in R1, [83] in R1, [80] in R1, [87] in R1, [104] in R1, [96] in R1, [91] in R1, [94] in R1, [81] in R1, [101] in R1, [109] in R1, [103] in R1, [111] in R1, [100] in R1, [113] in R1, [117] in R1, [112] in R1, [118] in R1, [125] in R1, [62] in R1, [64] in R1, [65] in R1, [63] in R1, [78] in R1, [73] in R1, [90] in R1, [89] in R1, [86] in R1, [75] in R1, [97] in R1, [102] in R1, [71] in R1, [85] in R1, [88] in R1, [84] in R1, [92] in R1, [77] in R1, [105] in R1, [93] in R1, [108] in R1, [95] in R1, [107] in R1, [106] in R1, [114] in R1, [99] in R1, [119] in R1, [115] in R1, [110] in R1, [122] in R1, [123] in R1, [1, 143] in R9, [1, 144] in R9, [1, 145] in R9, [1, 146] in R9, [1, 147] in R9, [1, 148] in R9, [1, 149] in R9, [1, 150] in R9, [1, 151] in R9, [1, 152] in R9, [1, 153] in R9, [1, 154] in R9, [1, 155] in R9, [1, 156] in R9, [1, 157] in R9, [1, 158] in R9, [1, 159] in R9, [1, 160] in R9, [1, 161] in R9, [1, 162] in R9, [1, 163] in R9, [1, 164] in R9, [1, 165] in R9, [1, 166] in R9, [1, 167] in R9, [1, 168] in R9, [1, 169] in R9, [1, 170] in R9, [1, 171] in R9, [1, 172] in R9, [1, 173] in R9, [1, 174] in R9, [1, 175] in R9, [1, 176] in R9, [1, 177] in R9, [1, 178] in R9, [1, 179] in R9, [1, 180] in R9, [1, 181] in R9, [1, 182] in R9, [1, 183] in R9, [1, 184] in R9, [1, 185] in R9, [1, 186] in R9, [1, 187] in R9, [1, 188] in R9, [1, 189] in R9, [1, 190] in R9, [1, 191] in R9, [1, 192] in R9, [1, 193] in R9, [1, 194] in R9, [1, 195] in R9, [1, 196] in R9, [1, 197] in R9, [1, 198] in R9, [1, 199] in R9, [1, 200] in R9, [1, 201] in R9, [3, 2, 143] in R8, [3, 2, 144] in R8, [3, 2, 145] in R8, [3, 2, 146] in R8, [3, 2, 147] in R8, [3, 2, 148] in R8, [3, 2, 149] in R8, [3, 2, 150] in R8, [3, 2, 151] in R8, [3, 2, 152] in R8, [3, 2, 153] in R8, [3, 2, 154] in R8, [3, 2, 155] in R8, [3, 2, 156] in R8, [3, 2, 157] in R8, [3, 2, 158] in R8, [3, 2, 159] in R8, [3, 2, 160] in R8, [3, 2, 161] in R8, [3, 2, 162] in R8, [3, 2, 163] in R8, [3, 2, 164] in R8, [3, 2, 165] in R8, [3, 2, 166] in R8, [3, 2, 167] in R8, [3, 2, 168] in R8, [3, 2, 169] in R8, [3, 2, 170] in R8, [3, 2, 171] in R8, [3, 2, 172] in R8, [3, 2, 173] in R8, [3, 2, 174] in R8, [3, 2, 175] in R8, [3, 2, 176] in R8, [3, 2, 177] in R8, [3, 2, 178] in R8, [3, 2, 179] in R8, [3, 2, 180] in R8, [3, 2, 181] in R8, [3, 2, 182] in R8, [3, 2, 183] in R8, [3, 2, 184] in R8, [3, 2, 185] in R8, [3, 2, 186] in R8, [3, 2, 187] in R8, [3, 2, 188] in R8, [3, 2, 189] in R8, [3, 2, 190] in R8, [3, 2, 191] in R8, [3, 2, 192] in R8, [3, 2, 193] in R8, [3, 2, 194] in R8, [3, 2, 195] in R8, [3, 2, 196] in R8, [3, 2, 197] in R8, [3, 2, 198] in R8, [3, 2, 199] in R8, [3, 2, 200] in R8, [3, 2, 201] in R8
if (61,) in relations[1] and (69,) in relations[1] and (66,) in relations[1] and (74,) in relations[1] and (76,) in relations[1] and (82,) in relations[1] and (68,) in relations[1] and (72,) in relations[1] and (60,) in relations[1] and (67,) in relations[1] and (98,) in relations[1] and (70,) in relations[1] and (79,) in relations[1] and (83,) in relations[1] and (80,) in relations[1] and (87,) in relations[1] and (104,) in relations[1] and (96,) in relations[1] and (91,) in relations[1] and (94,) in relations[1] and (81,) in relations[1] and (101,) in relations[1] and (109,) in relations[1] and (103,) in relations[1] and (111,) in relations[1] and (100,) in relations[1] and (113,) in relations[1] and (117,) in relations[1] and (112,) in relations[1] and (118,) in relations[1] and (125,) in relations[1] and (62,) in relations[1] and (64,) in relations[1] and (65,) in relations[1] and (63,) in relations[1] and (78,) in relations[1] and (73,) in relations[1] and (90,) in relations[1] and (89,) in relations[1] and (86,) in relations[1] and (75,) in relations[1] and (97,) in relations[1] and (102,) in relations[1] and (71,) in relations[1] and (85,) in relations[1] and (88,) in relations[1] and (84,) in relations[1] and (92,) in relations[1] and (77,) in relations[1] and (105,) in relations[1] and (93,) in relations[1] and (108,) in relations[1] and (95,) in relations[1] and (107,) in relations[1] and (106,) in relations[1] and (114,) in relations[1] and (99,) in relations[1] and (119,) in relations[1] and (115,) in relations[1] and (110,) in relations[1] and (122,) in relations[1] and (123,) in relations[1] and (1, 143) in relations[9] and (1, 144) in relations[9] and (1, 145) in relations[9] and (1, 146) in relations[9] and (1, 147) in relations[9] and (1, 148) in relations[9] and (1, 149) in relations[9] and (1, 150) in relations[9] and (1, 151) in relations[9] and (1, 152) in relations[9] and (1, 153) in relations[9] and (1, 154) in relations[9] and (1, 155) in relations[9] and (1, 156) in relations[9] and (1, 157) in relations[9] and (1, 158) in relations[9] and (1, 159) in relations[9] and (1, 160) in relations[9] and (1, 161) in relations[9] and (1, 162) in relations[9] and (1, 163) in relations[9] and (1, 164) in relations[9] and (1, 165) in relations[9] and (1, 166) in relations[9] and (1, 167) in relations[9] and (1, 168) in relations[9] and (1, 169) in relations[9] and (1, 170) in relations[9] and (1, 171) in relations[9] and (1, 172) in relations[9] and (1, 173) in relations[9] and (1, 174) in relations[9] and (1, 175) in relations[9] and (1, 176) in relations[9] and (1, 177) in relations[9] and (1, 178) in relations[9] and (1, 179) in relations[9] and (1, 180) in relations[9] and (1, 181) in relations[9] and (1, 182) in relations[9] and (1, 183) in relations[9] and (1, 184) in relations[9] and (1, 185) in relations[9] and (1, 186) in relations[9] and (1, 187) in relations[9] and (1, 188) in relations[9] and (1, 189) in relations[9] and (1, 190) in relations[9] and (1, 191) in relations[9] and (1, 192) in relations[9] and (1, 193) in relations[9] and (1, 194) in relations[9] and (1, 195) in relations[9] and (1, 196) in relations[9] and (1, 197) in relations[9] and (1, 198) in relations[9] and (1, 199) in relations[9] and (1, 200) in relations[9] and (1, 201) in relations[9] and (3, 2, 143) in relations[8] and (3, 2, 144) in relations[8] and (3, 2, 145) in relations[8] and (3, 2, 146) in relations[8] and (3, 2, 147) in relations[8] and (3, 2, 148) in relations[8] and (3, 2, 149) in relations[8] and (3, 2, 150) in relations[8] and (3, 2, 151) in relations[8] and (3, 2, 152) in relations[8] and (3, 2, 153) in relations[8] and (3, 2, 154) in relations[8] and (3, 2, 155) in relations[8] and (3, 2, 156) in relations[8] and (3, 2, 157) in relations[8] and (3, 2, 158) in relations[8] and (3, 2, 159) in relations[8] and (3, 2, 160) in relations[8] and (3, 2, 161) in relations[8] and (3, 2, 162) in relations[8] and (3, 2, 163) in relations[8] and (3, 2, 164) in relations[8] and (3, 2, 165) in relations[8] and (3, 2, 166) in relations[8] and (3, 2, 167) in relations[8] and (3, 2, 168) in relations[8] and (3, 2, 169) in relations[8] and (3, 2, 170) in relations[8] and (3, 2, 171) in relations[8] and (3, 2, 172) in relations[8] and (3, 2, 173) in relations[8] and (3, 2, 174) in relations[8] and (3, 2, 175) in relations[8] and (3, 2, 176) in relations[8] and (3, 2, 177) in relations[8] and (3, 2, 178) in relations[8] and (3, 2, 179) in relations[8] and (3, 2, 180) in relations[8] and (3, 2, 181) in relations[8] and (3, 2, 182) in relations[8] and (3, 2, 183) in relations[8] and (3, 2, 184) in relations[8] and (3, 2, 185) in relations[8] and (3, 2, 186) in relations[8] and (3, 2, 187) in relations[8] and (3, 2, 188) in relations[8] and (3, 2, 189) in relations[8] and (3, 2, 190) in relations[8] and (3, 2, 191) in relations[8] and (3, 2, 192) in relations[8] and (3, 2, 193) in relations[8] and (3, 2, 194) in relations[8] and (3, 2, 195) in relations[8] and (3, 2, 196) in relations[8] and (3, 2, 197) in relations[8] and (3, 2, 198) in relations[8] and (3, 2, 199) in relations[8] and (3, 2, 200) in relations[8] and (3, 2, 201) in relations[8]:
  for _reg0 in [tuple()]:
    relations[32].add(tuple())


interrupted
