Metadata-Version: 2.1
Name: aquasol
Version: 1.6.1
Summary: Thermodynamic and physico-chemical properties for water and aqueous solutions
Home-page: https://github.com/ovinc/aquasol
Author: Olivier Vincent
Author-email: ovinc.py@gmail.com
License: CeCILL-2.1
Keywords: water,solutions,salt,thermodynamic,properties,relations,convert,IAPWS,supersaturated,supersaturation,pitzer,kelvin,activity,volumetric,vapor_pressure,dewpoint,density,surface tension,viscosity,diffusivity,solubility,activity coefficient,osmotic,refractive index,electrical conductivity,physics,chemistry
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

General information
===================

This package computes useful thermodynamic quantities for water and aqueous solutions (undersaturated, saturated and supersaturated). Is is divided in two modules: **water** (properties of pure water) and **solutions** (properties of aqueous solutions), which provide various functions to calculate properties of interest. There is also a list of useful constants in the *constants.py* module.

It is also possible to just see plots of the properties by running the package directly from a shell console with
```bash
python -m aquasol
```

The package is under CeCILL-2.1 license, which is equivalent to GNU-GPL (see license file and information below)

How to install:
```bash
pip install aquasol
```



WATER
=====

Properties
----------

The *water* module has the following functions(*), which return the respective properties of interest as a function of temperature:
- `density_sat()` for density on the liquid-vapor coexistence line (kg/m^3)
- `density_atm()` for density at ambient pressure 0.1 MPa (kg/m^3)
- `dielectric_constant()` for the dielectric constant at 0.1 MPa (-)
- `diffusivity_in_air()` for diffusivity of water vapor in air (m^2/s)
- `surface_tension()` for surface tension of pure water (N/m).
- `vapor_pressure()` for saturation vapor pressure of pure water (Pa),
- `viscosity()` for viscosity of liquid water (Pa.s)

The structure of the call for any property (replace *property* below by one of the function names above) is
```python
from aquasol.water import property

value = property(T=25, unit='C', source=None)
```
*Inputs*

- `T` (int, float, array, list, or tuple): temperature
- `unit` (str, default 'C'): 'C' for Celsius, 'K' for Kelvin
- `source` (str, default None) : Source for the used equation, if *None* then the default source for the particular property is used.

*Output*

- Property in SI units, returned as numpy array if input is not a scalar.

*Note*

- See further below for `dewpoint()`, `kelvin_pressure()`, `kelvin_humidity()`, `kelvin_radius()` and `molar_volume()`, which work a bit differently.

(*) As of aquasol 1.5, the main functions (excluding `dewpoint` etc.) are now callable objects, which act as functions but have additional attributes, see *Attributes and Methods* below.


### Examples

(See docstrings for more details)

```python
from aquasol.water import vapor_pressure, surface_tension
from aquasol.water import density_atm, density_sat
from aquasol.water import diffusivity_in_air, viscosity

vapor_pressure()             # Saturation vapor pressure (Pa) at 25°C (3170 Pa)
vapor_pressure(298.15, 'K')        # same thing
vapor_pressure(source='Wexler')    # same thing, but according to Wexler
vapor_pressure(T=[5, 15, 25])          # psat at different temperatures in °C

surface_tension(T=[5, 15, 25])         # same, but for surface tension (N/m)

density_atm(4)               # density of water at atmospheric pressure at 4°C
density_sat(277.15, 'K')     # same thing, but on the coexistence line

diffusivity_in_air(27)  # Diffusivity of water vapor in air at 27°C

viscosity()         # Viscosity of liquid water at 25°C

dielectric_constant(T=20)   # Dielectric constant at 20°C ( = 80)
```

### Attributes & Methods

The properties listed above are in fact (since version 1.5) extended functions (i.e. callable objects), with additional attributes and methods that can be useful in various contexts; below are some examples using `vapor_pressure`.
```python
from aquasol.water import vapor_pressure

vapor_pressure()         # Saturation vapor pressure (Pa) at 25°C

vapor_pressure.sources         # all available sources
vapor_pressure.default_source  # source used by default if None is provided
vapor_pressure.get_source()          # return default source
vapor_pressure.get_source('Wexler')  # checks if source exists and returns it

vapor_pressure.quantity  # 'saturated vapor pressure'
vapor_pressure.unit      # '[Pa]'
```

It is also possible to access specific formulas (i.e. corresponding to a specific source), and get their properties.

```python
formula = vapor_pressure.get_formula('Wexler')  # default formula if no arg.

formula.source  # 'Wexler'
formula.temperature_range  # validity range of expression
formula.temperature_unit   # 'C' or 'K', varies across formulas

formula.calculate(T=300)  # Return value at given T (input in temperature_unit)
```


Inverse and other property functions
------------------------------------

Based on the functions above, some inverse and other properties are also provided:

- `dewpoint()`
- `kelvin_pressure()`
- `kelvin_radius()`
- `kelvin_humidity()`
- `molar_volume()`

### Examples

(See docstrings for more details)

```python
from aquasol.water import dewpoint, kelvin_radius, kelvin_humidity

dewpoint(p=1000)  # Dew point of a vapor at 1kPa
dewpoint(rh=50)  # Dew point at 50%RH and 25°C (default)
dewpoint('K', 300, rh=50)  # specify temperature
dewpoint(aw=[0.5, 0.7])     # It is possible to input lists, tuples, arrays

kelvin_pressure(rh=80)  # (liquid) Kelvin pressure corresponding to 80%RH
kelvin_pressure(aw=[0.5, 0.7, 0.9], T=20)  # at 20°C for 50%RH, 70%RH, 90%RH

kelvin_radius(aw=0.8)  # Kelvin radius at 80%RH and T=25°C
kelvin_radius(rh=80, ncurv=1)  # assume cylindrical meniscus instead of spherical

kelvin_humidity(r=4.7e-9)  # activity corresponding to Kelvin radius of 4.7 nm at 25°C
kelvin_humidity(r=4.7e-9, out='rh')  # same, but expressed in %RH instead of activity
kelvin_humidity(r=4.7e-9, ncurv=1, out='p')  # cylindrical interface, output as pressure
kelvin_humidity(P=[-30e6, -50e6])  # input can also be liquid pressure

molar_volume()  # molar volume of water at 25°C
molar_volume(T=30)  # at 30°C
molar_volume(condition='atm')  # using atmosph. density instead of sat.
```


Sources
-------

Below are the sources for water vapor pressure (1, 2, 3), density (1, 4, 5), surface tension (6), diffusivity in air (7, 8), viscosity (9)

(1) Wagner, W. & Pruß, A. *The IAPWS Formulation 1995 for the Thermodynamic Properties of Ordinary Water Substance for General and Scientific Use.* Journal of Physical and Chemical Reference Data 31, 387–535 (2002). [*]

(2) Wexler, A. & Greenspan, L. *Vapor Pressure Equation for Water in the Range 0 to 100°C.* Journal of Research of the National Bureau of Standards - A. Physics and Chemistry 75A, 213–245 (1971).

(3) Bridgeman, O. C. & Aldrich, E. W. *Vapor Pressure Tables for Water.* Journal of Heat Transfer 86, 279–286 (1964).

(4) Pátek, J., Hrubý, J., Klomfar, J., Součková, M. & Harvey, A. H. *Reference Correlations for Thermophysical Properties of Liquid Water at 0.1MPa.* Journal of Physical and Chemical Reference Data 38, 21–29 (2009). [*]

(5) Kell, G. S. Density, thermal expansivity, and compressibility of liquid water from 0.deg. to 150.deg.. *Correlations and tables for atmospheric pressure and saturation reviewed and expressed on 1968 temperature scale.* J. Chem. Eng. Data 20, 97–105 (1975).

(6) IAPWS *Revised Release on Surface Tension of Ordinary Water Substance.* Moscow, Russia, June 2014. [*]

(7) Massman, W. J. *A review of the molecular diffusivities of H2O, CO2, CH4, CO, O3, SO2, NH3, N2O, NO, and NO2 in air, O2 and N2 near STP.* Atmospheric Environment 32, 1111-1127 (1998).

(8) Marrero, T. R. and Mason E. A., *Gaseous diffusion coeffcients.* Journal of Physics and Chemistry Reference Data 1, 3-118 (1972)

(9) Huber, M. L. et al. *New International Formulation for the Viscosity of H2O.* Journal of Physical and Chemical Reference Data 38, 101-125 (2009). [*]

(10) Archer, D. G. & Wang, P. *The Dielectric Constant of Water and Debye-Hückel Limiting Law Slopes.* Journal of Physical and Chemical Reference Data 19, 371-411 (1990).

[*] Recommended by IAPWS.


SOLUTIONS
=========

Properties
----------

The *solutions* module has the following functions(**), which return the respective properties of interest as a function of solute concentration and temperature (when available) of an aqueous solution.
- `density()` for absolute (kg / m^3) or relative density,
- `activity_coefficient()` for molal activity coefficient of solute (dimensionless)
- `water_activity()` for solvent activity (dimensionless, range 0-1),
- `surface_tension()` for absolute surface tension (N/m) or relative (normalized by that of pure water at the same temperature).
- `refractive_index()` (dimensionless)
- `electrical_conductivity()` (S/m)
- `solubility()` (output unit can be chosen)

The following functions, which are based on some of the ones above, are also defined:
- `osmotic_coefficient()`: $\phi$, calculated using `water_activity()`
- `osmotic_pressure()`: $\Pi$, calculated using `water_activity()`
- `aw_saturated()`: water activity of saturated solutions (i.e., equilibrium humidity)
- `debye_length()`: Debye length as a function of temperature and concentration

The structure of the call for any property (replace *property* below by one of the function names above) is
```python
data = property(solute='NaCl', T=25, unit='C', source=None, **concentration)
```
with an additional parameter `relative=False` where applicable.

Note that the solubility has a slightly different call:
```python
data = solubility(solute='NaCl', T=25, unit='C', source=None, out='m')
```

*Inputs*

- `solute` (str): solute name, default 'NaCl'
- `T` (float): temperature (default 25)
- `unit` (str, default 'C'): 'C' for Celsius, 'K' for Kelvin
- `source` (str, default None) : Source for the used equation, if None then
gets the default source for the particular solute (defined in submodules).
- `**concentration`: kwargs with any unit that is allowed by `convert()` (see below), e.g. `property(m=5.3)` for molality.
- when applicable: `relative` (bool, default False): True for relative density
- for solubility, the `out` parameter is the unit in which the solubility will be expressed (see `convert()` below)

*Output*

- Property in SI units, returned as numpy array if input is not a scalar.

Note: similarly to temperature, the values in `**concentration` can be an array, list or tuple, however if it's the case, temperature needs to be a scalar.

(**) As of aquasol 1.5, the main property functions (excluding `osmotic pressure` etc.) are now callable objects, which act as functions but have additional attributes, see *Attributes and Methods* below.*


### Examples

```python
from aquasol.solutions import water_activity, activity_coefficient
from aquasol.solutions import osmotic_pressure, osmotic_coefficient
from aquasol.solutions import density, surface_tension, refractive_index
from aquasol.solutions import solubility, aw_saturated
from aquasol.solutions import ionic_strength, debye_length

# Water activity (dimensionless, 'aw') ---------------------------------------
water_activity(x=0.1)            # NaCl solution, mole fraction 10%, 25°C
water_activity(r=0.3)           # solution when mixing 55g NaCl with 100g H2O
water_activity('LiCl', w=0.3, T=70)  # LiCl solution, 30% weight fraction, 70°C
water_activity(solute='CaCl2', m=[2, 4, 6])  # for several molalities (mol/kg)

# Other ways to express water activity:
osmotic_pressure(m=5)
osmotic_coefficient(x=0.1, solute='LiCl')

# Molal activity coefficient (dimensionless, 'gamma') ------------------------
activity_coefficient(m=6.1)            # ~ Saturated NaCl solution, 25°C
activity_coefficient(solute='Na2SO3', m=2.2)  # Na2SO3 at 2.2 mol/kg

# Density (absolute, kg / m^3, or relative) ----------------------------------
density(source='Tang', x=0.23)  # supersaturatad NaCl, 25°C, using Tang equation
density(c=5000, relative=True)  # relative density of NaCl, 5 mol/L.
density('LiCl', w=[0.11, 0.22, 0.51])  # for several weight fractions of LiCl

# Surface tension (N / m) ----------------------------------------------------
surface_tension(r=0.55)           # solution when mixing 55g NaCl with 100g H2O
surface_tension(c=5000, relative=True)  # sigma / sigma(H2O) at 5 mol/L of NaCl
surface_tension('CaCl2', 353, 'K', c=5e3)    # CaCl2, 300K, 5 mol/L
surface_tension(x=[0.02, 0.04, 0.08], T=21)  # iterable mole fraction

# Refractive index -----------------------------------------------------------
refractive_index(c=4321)  # concentration of 4.321 mol/L of NaCl, 25°C
refractive_index('KCl', T=22, r=[0.1, 0.175])  # various mass ratios of KCl

# Electrical conductivity ----------------------------------------------------
electrical_conductivity('KCl', m=0.1)  # molality of 0.1 mol/L of KCl, 25°C
electrical_conductivity('KCl', T=50, x=[0.01, 0.02])  # various mole fractions
electrical_conductivity('KCl', T=[0, 25, 50], m=1)  # various mole fractions

# Solubility -----------------------------------------------------------------
solubility()       # NaCl at 25°C
solubility(T=10)   # NaCl at 10°C
solubility('KCl')  # KCl, 25°C
solubility('Na2SO4,10H20', T=10)  # Mirabilite at T=10°C

# Other ways to express solubility:
aw_saturated()        # Activity of saturated NaCl solution = 0.753
aw_saturated('LiCl')  # etc.

# Debye length and ionic strength
debye_length('Na2SO4', c=100)  # sodium sulfate at 100mM
ionic_strength('KCl', m=2)     # molal ionic strength
```

### Attributes & Methods

Similarly to the `water` module, the properties listed above are in fact (since version 1.5) extended functions (i.e. callable objects), with additional attributes and methods that can be useful in various contexts; below are some examples using `density`.
```python
from aquasol.solutions import density

density(m=6)  # Density of an NaCl solution at 6 mol/kg

density.quantity  # 'density'
density.unit  #   # '[kg/m^3]'

density.solutes  # All solutes available for the given property
density.default_solute  # solute used by default if None provided
density.get_solute()  # get solute or defautl solute, see docstring

density.sources  # Dictionary of sources available for each solute
density.default_sources  # Dict of sources used by default if None provided
density.get_source()   # get source or default source, see docstring
```

It is also possible to access specific formulas (i.e. corresponding to a specific source and solute), and get their properties.

```python
formula = density.get_formula(solute='KCl', source='Krumgalz')

formula.source  # 'Krumgalz'
formula.temperature_range  # validity range of expression in temperature
formula.temperature_unit   # 'C' or 'K', varies across formulas
formula.solute             # solute of interest

formula.concentration_range  # validity range of expression in concentration
formula.concentration_unit   # 'm' 'w', 'x', etc., varies across formulas

formula.with_water_reference  # if true, returns a tuple with value at c=0 and value at c
formula.calculate(m=2.2)      # Value at given concentration (in concentration_unit)
```


Inverse property functions
--------------------------

The `aw_to_conc` calculates what concentration of solute is necessary to reach a specific water activity:
```python
aw_to_conc(a, out='w', solute='NaCl', T=25, unit='C', source=None):
```
For example:
```python
aw_to_conc(0.8)  # weight fraction of NaCl to have a humidity of 80%RH
aw_to_conc([0.6, 0.85], out='m')  # molality of NaCl to get 60%RH and 85%RH
aw_to_conc(0.33, 'r', 'LiCl', T=50)  # in terms of mass ratio, for LiCl at 50°C
```

Other functions
---------------

The *solutions* module also has a function to convert between concentration units:
```python
value_out = convert(value, unit_in, unit_out, solute='NaCl', density_source=None)
```
where unit_in and unit_out can be in the following list:
- *'m'* (molality, mol/kg)
- *'c'* (molarity, mol/m^3)
- *'x'* (mole fraction)
- *'w'* (weight fraction)
- *'r'* (ratio solute mass to solvent mass).

By default, solute is `'NaCl'`. When converting to/from molarity, one must also use a formula to calculate the density of the solution. It's possible to specify a formula different than the default one by providing an argument to the `density_source` argument.

**NOTE**: In case of issues such as `ValueError: Requested values higher than the higher limit of the image`, try playing with the `density_wmin` and `density_wmax` parameters in `convert()`.

One can access more elaborate quantities with the following functions:

```python
Iy = ionic_strength(solute, **concentration)
```
for ionic strength, which can be expressed in terms of molarity, molality or mole fraction. Which version is chosen among these three possibilities depend on the input parameters, e.g. *m=5.3* for molality, *x=0.08* for mole fraction, *c=5000* for molarity.

```python
y1, y2 = ion_quantities(solute, **concentration)
```
which calculate quantities of individual ions within the solution instead of considering the solute as a whole. Similarly, the result depends on the input unit, which can also be only among `m`, `c` or `x`.

*See docstrings for more details.*

Available Solutes
-----------------

Sorted by alphabetical order. When available, the sources are written in parentheses. For convert, an X means available.

| Solute | Water Activity | Activity Coeff. |      Density      | Surface Tension | Refr. Index | Elec. Conduct. | Solubility | Convert (*) |
|:------:|:--------------:|:---------------:|:-----------------:|:---------------:|:-----------:|:--------------:|:----------:|:-----------:|
| CaCl2  |      (1)       |                 |     (1,3,14)      |      (1,6)      |     (7)     |                |            |      X      |
| KCl    |     (8,13)     |     (8,13)      |     (3,14,21)     |       (6)       |    (7,21)   |       (9)      |    (13)    |      X      |
| KI     |                |                 |      (3,14)       |                 |             |                |            |      X      |
| LiBr   |    (19,20)     |      (20)       |                   |                 |             |                |    (18)    |      -      |
| LiCl   |   (1,19,20)    |      (20)       |      (1,14)       |       (1)       |             |                |    (17)    |      X      |
| MgCl2  |                |                 |      (3,14)       |       (6)       |             |                |            |      X      |
| Na2SO4 |   (2,12,13)    |    (12,13)      |    (10,14,15)     |       (6)       |     (21)    |                |    (13)    |      X      |
| NaCl   | (2,8,12,13,20) |  (8,12,13,20)   | (3,4,5,11,14,15)  |      (6,11)     |    (7,21)   |                | (13,16,17) |      X      |

(*) Solutes with no density data cannot use conversion to/from molarity ('c') but all other conversions work. They are noted with - instead of X.

Sources
-------

(1) Conde, M. R., *Properties of aqueous solutions of lithium and calcium chlorides: formulations for use in air conditioning equipment design.*
International Journal of Thermal Sciences 43, 367–382 (2004).

(2) Clegg, S. L., Brimblecombe, P., Liang, Z. & Chan, C. K., *Thermodynamic Properties of Aqueous Aerosols to High Supersaturation: II — A Model of the System Na+ Cl− NO3- SO42- H2O at 298.15 K.* Aerosol Science and Technology 27, 345–366 (1997).

(3) Al Ghafri, S., Maitland, G. C. & Trusler, J. P. M., *Densities of Aqueous MgCl 2 (aq), CaCl 2 (aq), KI(aq), NaCl(aq), KCl(aq), AlCl 3 (aq), and (0.964 NaCl + 0.136 KCl)(aq) at Temperatures Between (283 and 472) K, Pressures up to 68.5 MPa, and Molalities up to 6 mol·kg –1.* Journal of Chemical & Engineering Data 57, 1288–1304 (2012).

(4) Tang, I. N., *Chemical and size effects of hygroscopic aerosols on light scattering coefficients.* Journal of Geophysical Research: Atmospheres 101, 19245–19250 (1996).

(5) Simion, A. I., Grigoras, C., Rosu, A.-M. & Gavrilă, L. *Mathematical modelling of density and viscosity of NaCl aqueous solutions.* Journal of Agroalimentary Processing and Technologies 21, 41–52 (2015).

(6) Dutcher, C. S., Wexler, A. S. & Clegg, S. L. *Surface Tensions of Inorganic Multicomponent Aqueous Electrolyte Solutions and Melts.* J. Phys. Chem. A 114, 12216–12230 (2010).

(7) Tan, C.-Y. & Huang, Y.-X. *Dependence of Refractive Index on Concentration and Temperature in Electrolyte Solution, Polar Solution, Nonpolar Solution, and Protein Solution.* J. Chem. Eng. Data 60, 2827–2833 (2015).

(8) Tang, I. N., Munkelwitz, H. R. & Wang, N. *Water activity measurements with single suspended droplets: The NaCl-H2O and KCl-H2O systems.* Journal of Colloid and Interface Science 114, 409–415 (1986).

(9) McKee, C. B., *An Accurate Equation for the Electrolytic Conductivity of Potassium Chloride Solutions*. J Solution Chem 38, 1155-1172 (2009).

(10) Tang, I. N. & Munkelwitz, H. R., *Simultaneous Determination of Refractive Index and Density of an Evaporating Aqueous Solution Droplet*. Aerosol Science and Technology 15, 201–207 (1991).

(11) Talreja-Muthreja, T., Linnow, K., Enke, D. & Steiger. *M. Deliquescence of NaCl Confined in Nanoporous Silica*. Langmuir 38, 10963-10974 (2022).

(12) Steiger, M., *Crystal growth in porous materials—I: The crystallization pressure of large crystals.* Journal of Crystal Growth 282, 455-469 (2005).

(13) Steiger, M., Kiekbusch, J. & Nicolai, *An improved model incorporating Pitzer's equations for calculation of thermodynamic properties of pore solutions implemented into an efficient program code.* Construction and Building Materials 22, 1841-1850 (2008).

(14) Krumgalz, B. S., Pogorelsky, R. & Pitzer, K. S., *Volumetric Properties of Single Aqueous Electrolytes from Zero to Saturation Concentration at 298.15 K Represented by Pitzer's Ion-Interaction Equations.* Journal of Physical and Chemical Reference Data 25, 663-689 (1996).

(15) Clegg, S. L. & Wexler, A. S., *Densities and Apparent Molar Volumes of Atmospherically Important Electrolyte Solutions. 1. The Solutes H2SO4, HNO3, HCl, Na2SO4, NaNO3, NaCl, (NH4)2SO4, NH4NO3, and NH4Cl from 0 to 50°C, Including Extrapolations to Very Low Temperature and to the Pure Liquid State, and NaHSO4, NaOH, and NH3 at 25°C.* J. Phys. Chem. A 115, 3393-3460 (2011).

(16) Sparrow, B. S., *Empirical equations for the thermodynamic properties of aqueous sodium chloride*. Desalination 159, 161-170 (2003).

(17) CRC Handbook of Chemistry and Physics: A Ready-Reference Book of Chemical and Physical Data. (CRC Press, Boca Raton London New York, 2023).

(18) Duvall, K. N., Dirksen, J. A. & Ring, T. A. *Ostwald-Meyers Metastable Region in LiBr Crystallization—Comparison of Measurements with Predictions.* Journal of Colloid and Interface Science 239, 391-398 (2001).

(19) Patil, K. R., Tripathi, A. D., Pathak, G. & Katti, S. S. *Thermodynamic Properties of Aqueous Electrolyte Solutions. 1. Vapor Pressure of Aqueous Solutions of LiCI, LiBr, and LiI.* J. Chem. Eng. Data 35, 166-168 (1990)

(20) Pitzer, K. S. & Mayorga, G., *Thermodynamics of electrolytes. II. Activity and osmotic coefficients for strong electrolytes with one or both ions univalent.* J. Phys. Chem. 77, 2300-2308 (1973).

(21) Tang, I. N., *Thermodynamic and optical properties of mixed-salt aerosols of atmospheric importance*. Journal of Geophysical Research 102, 1883-1893 (1997).


Constants
=========

The *constants.py* file includes useful values including critical point data, molecular weights of species, dissociation numbers etc. Use the function `molar_mass` to get the molar mass (in kg/mol) of a specific solute from the available solutes, e.g.:

```python
from aquasol.constants import Mw           # molar mass of water (kg/mol)
from aquasol.constants import molar_mass   # molar mass of specific solute
from aquasol.constants import get_solute   # returns solute object with info

Na2SO4 = get_solute('Na2SO4')

molar_mass('Na2SO4')            # 0.142 kg/mol
Na2SO4.molar_mass               # same
Na2SO4.molecular_weight         # same but in Daltons (142)

z_m, z_x = Na2SO4.charges          # (1, -2) for Na(1+), SO4(2-)
nu_m, nu_x = Na2SO4.stoichiometry   # (2, 1) for Na(2) SO4(1)
```


Shortcut functions
==================

For rapid calculations without much typing, the following shortcuts are provided:

|       original function       | shortcut |
|:-----------------------------:|:--------:|
| `water.vapor_pressure()`      |  `ps()`  |
| `water.dewpoint()`            |  `dp()`  |
| `water.kelvin_pressure()`     |  `kp()`  |
| `water.kelvin_radius()`       |  `kr()`  |
| `water.kelvin_humidity()`     |  `kh()`  |
| `water.molar_volume()`        |  `vm()`  |
| `solutions.water_activity()`  |  `aw()`  |
| `solutions.aw_to_conc()`      |  `ac()`  |
| `solutions.convert()`         |  `cv()`  |

For example, the two following imports are equivalent:
```python
from aquasol.solutions import water_activity as aw
from aquasol import aw
```

Information
===========

Package requirements
--------------------
- numpy
- pynverse
- [optional] matplotlib (only if running the package directly as a main file to plot the properties)

Python requirements
-------------------
Python : >= 3.6

Author
------

Olivier Vincent

(ovinc.py@gmail.com)

Contributors
------------
Marine Poizat (2019), Léo Martin (2020), Hugo Bellezza (2023)

License
-------

CeCILL v.2.1 (equivalent to GNU GPL, see https://cecill.info/)
See LICENSE file.

Copyright Olivier Vincent (2020-2024)
(ovinc.py@gmail.com)

This software is a computer program whose purpose is to provide the
properties of water and aqueous solutions as a function of temperature
and/or concentration (along with other useful tools).

This software is governed by the CeCILL license under French law and
abiding by the rules of distribution of free software. You can  use,
modify and/ or redistribute the software under the terms of the CeCILL
license as circulated by CEA, CNRS and INRIA at the following URL
"http://www.cecill.info".

As a counterpart to the access to the source code and rights to copy,
modify and redistribute granted by the license, users are provided only
with a limited warranty  and the software's author, the holder of the
economic rights, and the successive licensors have only limited
liability.

In this respect, the user's attention is drawn to the risks associated
with loading, using, modifying and/or developing or reproducing the
software by the user in light of its specific status of free software,
that may mean that it is complicated to manipulate, and that also
therefore means that it is reserved for developers and experienced
professionals having in-depth computer knowledge. Users are therefore
encouraged to load and test the software's suitability as regards their
requirements in conditions enabling the security of their systems and/or
data to be ensured and, more generally, to use and operate it in the
same conditions as regards security.

The fact that you are presently reading this means that you have had
knowledge of the CeCILL license and that you accept its terms.


  CeCILL FREE SOFTWARE LICENSE AGREEMENT

Version 2.1 dated 2013-06-21


    Notice

This Agreement is a Free Software license agreement that is the result
of discussions between its authors in order to ensure compliance with
the two main principles guiding its drafting:

  * firstly, compliance with the principles governing the distribution
    of Free Software: access to source code, broad rights granted to users,
  * secondly, the election of a governing law, French law, with which it
    is conformant, both as regards the law of torts and intellectual
    property law, and the protection that it offers to both authors and
    holders of the economic rights over software.

The authors of the CeCILL (for Ce[a] C[nrs] I[nria] L[ogiciel] L[ibre])
license are:

Commissariat à l'énergie atomique et aux énergies alternatives - CEA, a
public scientific, technical and industrial research establishment,
having its principal place of business at 25 rue Leblanc, immeuble Le
Ponant D, 75015 Paris, France.

Centre National de la Recherche Scientifique - CNRS, a public scientific
and technological establishment, having its principal place of business
at 3 rue Michel-Ange, 75794 Paris cedex 16, France.

Institut National de Recherche en Informatique et en Automatique -
Inria, a public scientific and technological establishment, having its
principal place of business at Domaine de Voluceau, Rocquencourt, BP
105, 78153 Le Chesnay cedex, France.


    Preamble

The purpose of this Free Software license agreement is to grant users
the right to modify and redistribute the software governed by this
license within the framework of an open source distribution model.

The exercising of this right is conditional upon certain obligations for
users so as to preserve this status for all subsequent redistributions.

In consideration of access to the source code and the rights to copy,
modify and redistribute granted by the license, users are provided only
with a limited warranty and the software's author, the holder of the
economic rights, and the successive licensors only have limited liability.

In this respect, the risks associated with loading, using, modifying
and/or developing or reproducing the software by the user are brought to
the user's attention, given its Free Software status, which may make it
complicated to use, with the result that its use is reserved for
developers and experienced professionals having in-depth computer
knowledge. Users are therefore encouraged to load and test the
suitability of the software as regards their requirements in conditions
enabling the security of their systems and/or data to be ensured and,
more generally, to use and operate it in the same conditions of
security. This Agreement may be freely reproduced and published,
provided it is not altered, and that no provisions are either added or
removed herefrom.

This Agreement may apply to any or all software for which the holder of
the economic rights decides to submit the use thereof to its provisions.

Frequently asked questions can be found on the official website of the
CeCILL licenses family (http://www.cecill.info/index.en.html) for any
necessary clarification.


    Article 1 - DEFINITIONS

For the purpose of this Agreement, when the following expressions
commence with a capital letter, they shall have the following meaning:

Agreement: means this license agreement, and its possible subsequent
versions and annexes.

Software: means the software in its Object Code and/or Source Code form
and, where applicable, its documentation, "as is" when the Licensee
accepts the Agreement.

Initial Software: means the Software in its Source Code and possibly its
Object Code form and, where applicable, its documentation, "as is" when
it is first distributed under the terms and conditions of the Agreement.

Modified Software: means the Software modified by at least one
Contribution.

Source Code: means all the Software's instructions and program lines to
which access is required so as to modify the Software.

Object Code: means the binary files originating from the compilation of
the Source Code.

Holder: means the holder(s) of the economic rights over the Initial
Software.

Licensee: means the Software user(s) having accepted the Agreement.

Contributor: means a Licensee having made at least one Contribution.

Licensor: means the Holder, or any other individual or legal entity, who
distributes the Software under the Agreement.

Contribution: means any or all modifications, corrections, translations,
adaptations and/or new functions integrated into the Software by any or
all Contributors, as well as any or all Internal Modules.

Module: means a set of sources files including their documentation that
enables supplementary functions or services in addition to those offered
by the Software.

External Module: means any or all Modules, not derived from the
Software, so that this Module and the Software run in separate address
spaces, with one calling the other when they are run.

Internal Module: means any or all Module, connected to the Software so
that they both execute in the same address space.

GNU GPL: means the GNU General Public License version 2 or any
subsequent version, as published by the Free Software Foundation Inc.

GNU Affero GPL: means the GNU Affero General Public License version 3 or
any subsequent version, as published by the Free Software Foundation Inc.

EUPL: means the European Union Public License version 1.1 or any
subsequent version, as published by the European Commission.

Parties: mean both the Licensee and the Licensor.

These expressions may be used both in singular and plural form.


    Article 2 - PURPOSE

The purpose of the Agreement is the grant by the Licensor to the
Licensee of a non-exclusive, transferable and worldwide license for the
Software as set forth in Article 5 <#scope> hereinafter for the whole
term of the protection granted by the rights over said Software.


    Article 3 - ACCEPTANCE

3.1 The Licensee shall be deemed as having accepted the terms and
conditions of this Agreement upon the occurrence of the first of the
following events:

  * (i) loading the Software by any or all means, notably, by
    downloading from a remote server, or by loading from a physical medium;
  * (ii) the first time the Licensee exercises any of the rights granted
    hereunder.

3.2 One copy of the Agreement, containing a notice relating to the
characteristics of the Software, to the limited warranty, and to the
fact that its use is restricted to experienced users has been provided
to the Licensee prior to its acceptance as set forth in Article 3.1
<#accepting> hereinabove, and the Licensee hereby acknowledges that it
has read and understood it.


    Article 4 - EFFECTIVE DATE AND TERM


      4.1 EFFECTIVE DATE

The Agreement shall become effective on the date when it is accepted by
the Licensee as set forth in Article 3.1 <#accepting>.


      4.2 TERM

The Agreement shall remain in force for the entire legal term of
protection of the economic rights over the Software.


    Article 5 - SCOPE OF RIGHTS GRANTED

The Licensor hereby grants to the Licensee, who accepts, the following
rights over the Software for any or all use, and for the term of the
Agreement, on the basis of the terms and conditions set forth hereinafter.

Besides, if the Licensor owns or comes to own one or more patents
protecting all or part of the functions of the Software or of its
components, the Licensor undertakes not to enforce the rights granted by
these patents against successive Licensees using, exploiting or
modifying the Software. If these patents are transferred, the Licensor
undertakes to have the transferees subscribe to the obligations set
forth in this paragraph.


      5.1 RIGHT OF USE

The Licensee is authorized to use the Software, without any limitation
as to its fields of application, with it being hereinafter specified
that this comprises:

 1. permanent or temporary reproduction of all or part of the Software
    by any or all means and in any or all form.

 2. loading, displaying, running, or storing the Software on any or all
    medium.

 3. entitlement to observe, study or test its operation so as to
    determine the ideas and principles behind any or all constituent
    elements of said Software. This shall apply when the Licensee
    carries out any or all loading, displaying, running, transmission or
    storage operation as regards the Software, that it is entitled to
    carry out hereunder.


      5.2 ENTITLEMENT TO MAKE CONTRIBUTIONS

The right to make Contributions includes the right to translate, adapt,
arrange, or make any or all modifications to the Software, and the right
to reproduce the resulting software.

The Licensee is authorized to make any or all Contributions to the
Software provided that it includes an explicit notice that it is the
author of said Contribution and indicates the date of the creation thereof.


      5.3 RIGHT OF DISTRIBUTION

In particular, the right of distribution includes the right to publish,
transmit and communicate the Software to the general public on any or
all medium, and by any or all means, and the right to market, either in
consideration of a fee, or free of charge, one or more copies of the
Software by any means.

The Licensee is further authorized to distribute copies of the modified
or unmodified Software to third parties according to the terms and
conditions set forth hereinafter.


        5.3.1 DISTRIBUTION OF SOFTWARE WITHOUT MODIFICATION

The Licensee is authorized to distribute true copies of the Software in
Source Code or Object Code form, provided that said distribution
complies with all the provisions of the Agreement and is accompanied by:

 1. a copy of the Agreement,

 2. a notice relating to the limitation of both the Licensor's warranty
    and liability as set forth in Articles 8 and 9,

and that, in the event that only the Object Code of the Software is
redistributed, the Licensee allows effective access to the full Source
Code of the Software for a period of at least three years from the
distribution of the Software, it being understood that the additional
acquisition cost of the Source Code shall not exceed the cost of the
data transfer.


        5.3.2 DISTRIBUTION OF MODIFIED SOFTWARE

When the Licensee makes a Contribution to the Software, the terms and
conditions for the distribution of the resulting Modified Software
become subject to all the provisions of this Agreement.

The Licensee is authorized to distribute the Modified Software, in
source code or object code form, provided that said distribution
complies with all the provisions of the Agreement and is accompanied by:

 1. a copy of the Agreement,

 2. a notice relating to the limitation of both the Licensor's warranty
    and liability as set forth in Articles 8 and 9,

and, in the event that only the object code of the Modified Software is
redistributed,

 3. a note stating the conditions of effective access to the full source
    code of the Modified Software for a period of at least three years
    from the distribution of the Modified Software, it being understood
    that the additional acquisition cost of the source code shall not
    exceed the cost of the data transfer.


        5.3.3 DISTRIBUTION OF EXTERNAL MODULES

When the Licensee has developed an External Module, the terms and
conditions of this Agreement do not apply to said External Module, that
may be distributed under a separate license agreement.


        5.3.4 COMPATIBILITY WITH OTHER LICENSES

The Licensee can include a code that is subject to the provisions of one
of the versions of the GNU GPL, GNU Affero GPL and/or EUPL in the
Modified or unmodified Software, and distribute that entire code under
the terms of the same version of the GNU GPL, GNU Affero GPL and/or EUPL.

The Licensee can include the Modified or unmodified Software in a code
that is subject to the provisions of one of the versions of the GNU GPL,
GNU Affero GPL and/or EUPL and distribute that entire code under the
terms of the same version of the GNU GPL, GNU Affero GPL and/or EUPL.


    Article 6 - INTELLECTUAL PROPERTY


      6.1 OVER THE INITIAL SOFTWARE

The Holder owns the economic rights over the Initial Software. Any or
all use of the Initial Software is subject to compliance with the terms
and conditions under which the Holder has elected to distribute its work
and no one shall be entitled to modify the terms and conditions for the
distribution of said Initial Software.

The Holder undertakes that the Initial Software will remain ruled at
least by this Agreement, for the duration set forth in Article 4.2 <#term>.


      6.2 OVER THE CONTRIBUTIONS

The Licensee who develops a Contribution is the owner of the
intellectual property rights over this Contribution as defined by
applicable law.


      6.3 OVER THE EXTERNAL MODULES

The Licensee who develops an External Module is the owner of the
intellectual property rights over this External Module as defined by
applicable law and is free to choose the type of agreement that shall
govern its distribution.


      6.4 JOINT PROVISIONS

The Licensee expressly undertakes:

 1. not to remove, or modify, in any manner, the intellectual property
    notices attached to the Software;

 2. to reproduce said notices, in an identical manner, in the copies of
    the Software modified or not.

The Licensee undertakes not to directly or indirectly infringe the
intellectual property rights on the Software of the Holder and/or
Contributors, and to take, where applicable, vis-à-vis its staff, any
and all measures required to ensure respect of said intellectual
property rights of the Holder and/or Contributors.


    Article 7 - RELATED SERVICES

7.1 Under no circumstances shall the Agreement oblige the Licensor to
provide technical assistance or maintenance services for the Software.

However, the Licensor is entitled to offer this type of services. The
terms and conditions of such technical assistance, and/or such
maintenance, shall be set forth in a separate instrument. Only the
Licensor offering said maintenance and/or technical assistance services
shall incur liability therefor.

7.2 Similarly, any Licensor is entitled to offer to its licensees, under
its sole responsibility, a warranty, that shall only be binding upon
itself, for the redistribution of the Software and/or the Modified
Software, under terms and conditions that it is free to decide. Said
warranty, and the financial terms and conditions of its application,
shall be subject of a separate instrument executed between the Licensor
and the Licensee.


    Article 8 - LIABILITY

8.1 Subject to the provisions of Article 8.2, the Licensee shall be
entitled to claim compensation for any direct loss it may have suffered
from the Software as a result of a fault on the part of the relevant
Licensor, subject to providing evidence thereof.

8.2 The Licensor's liability is limited to the commitments made under
this Agreement and shall not be incurred as a result of in particular:
(i) loss due the Licensee's total or partial failure to fulfill its
obligations, (ii) direct or consequential loss that is suffered by the
Licensee due to the use or performance of the Software, and (iii) more
generally, any consequential loss. In particular the Parties expressly
agree that any or all pecuniary or business loss (i.e. loss of data,
loss of profits, operating loss, loss of customers or orders,
opportunity cost, any disturbance to business activities) or any or all
legal proceedings instituted against the Licensee by a third party,
shall constitute consequential loss and shall not provide entitlement to
any or all compensation from the Licensor.


    Article 9 - WARRANTY

9.1 The Licensee acknowledges that the scientific and technical
state-of-the-art when the Software was distributed did not enable all
possible uses to be tested and verified, nor for the presence of
possible defects to be detected. In this respect, the Licensee's
attention has been drawn to the risks associated with loading, using,
modifying and/or developing and reproducing the Software which are
reserved for experienced users.

The Licensee shall be responsible for verifying, by any or all means,
the suitability of the product for its requirements, its good working
order, and for ensuring that it shall not cause damage to either persons
or properties.

9.2 The Licensor hereby represents, in good faith, that it is entitled
to grant all the rights over the Software (including in particular the
rights set forth in Article 5 <#scope>).

9.3 The Licensee acknowledges that the Software is supplied "as is" by
the Licensor without any other express or tacit warranty, other than
that provided for in Article 9.2 <#good-faith> and, in particular,
without any warranty as to its commercial value, its secured, safe,
innovative or relevant nature.

Specifically, the Licensor does not warrant that the Software is free
from any error, that it will operate without interruption, that it will
be compatible with the Licensee's own equipment and software
configuration, nor that it will meet the Licensee's requirements.

9.4 The Licensor does not either expressly or tacitly warrant that the
Software does not infringe any third party intellectual property right
relating to a patent, software or any other property right. Therefore,
the Licensor disclaims any and all liability towards the Licensee
arising out of any or all proceedings for infringement that may be
instituted in respect of the use, modification and redistribution of the
Software. Nevertheless, should such proceedings be instituted against
the Licensee, the Licensor shall provide it with technical and legal
expertise for its defense. Such technical and legal expertise shall be
decided on a case-by-case basis between the relevant Licensor and the
Licensee pursuant to a memorandum of understanding. The Licensor
disclaims any and all liability as regards the Licensee's use of the
name of the Software. No warranty is given as regards the existence of
prior rights over the name of the Software or as regards the existence
of a trademark.


    Article 10 - TERMINATION

10.1 In the event of a breach by the Licensee of its obligations
hereunder, the Licensor may automatically terminate this Agreement
thirty (30) days after notice has been sent to the Licensee and has
remained ineffective.

10.2 A Licensee whose Agreement is terminated shall no longer be
authorized to use, modify or distribute the Software. However, any
licenses that it may have granted prior to termination of the Agreement
shall remain valid subject to their having been granted in compliance
with the terms and conditions hereof.


    Article 11 - MISCELLANEOUS


      11.1 EXCUSABLE EVENTS

Neither Party shall be liable for any or all delay, or failure to
perform the Agreement, that may be attributable to an event of force
majeure, an act of God or an outside cause, such as defective
functioning or interruptions of the electricity or telecommunications
networks, network paralysis following a virus attack, intervention by
government authorities, natural disasters, water damage, earthquakes,
fire, explosions, strikes and labor unrest, war, etc.

11.2 Any failure by either Party, on one or more occasions, to invoke
one or more of the provisions hereof, shall under no circumstances be
interpreted as being a waiver by the interested Party of its right to
invoke said provision(s) subsequently.

11.3 The Agreement cancels and replaces any or all previous agreements,
whether written or oral, between the Parties and having the same
purpose, and constitutes the entirety of the agreement between said
Parties concerning said purpose. No supplement or modification to the
terms and conditions hereof shall be effective as between the Parties
unless it is made in writing and signed by their duly authorized
representatives.

11.4 In the event that one or more of the provisions hereof were to
conflict with a current or future applicable act or legislative text,
said act or legislative text shall prevail, and the Parties shall make
the necessary amendments so as to comply with said act or legislative
text. All other provisions shall remain effective. Similarly, invalidity
of a provision of the Agreement, for any reason whatsoever, shall not
cause the Agreement as a whole to be invalid.


      11.5 LANGUAGE

The Agreement is drafted in both French and English and both versions
are deemed authentic.


    Article 12 - NEW VERSIONS OF THE AGREEMENT

12.1 Any person is authorized to duplicate and distribute copies of this
Agreement.

12.2 So as to ensure coherence, the wording of this Agreement is
protected and may only be modified by the authors of the License, who
reserve the right to periodically publish updates or new versions of the
Agreement, each with a separate number. These subsequent versions may
address new issues encountered by Free Software.

12.3 Any Software distributed under a given version of the Agreement may
only be subsequently distributed under the same version of the Agreement
or a subsequent version, subject to the provisions of Article 5.3.4
<#compatibility>.


    Article 13 - GOVERNING LAW AND JURISDICTION

13.1 The Agreement is governed by French law. The Parties agree to
endeavor to seek an amicable solution to any disagreements or disputes
that may arise during the performance of the Agreement.

13.2 Failing an amicable solution within two (2) months as from their
occurrence, and unless emergency proceedings are necessary, the
disagreements or disputes shall be referred to the Paris Courts having
jurisdiction, by the more diligent Party.
