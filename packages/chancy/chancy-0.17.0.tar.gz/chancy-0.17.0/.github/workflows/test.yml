name: Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:

jobs:
  build_ui:
    name: Building UI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.6

      - name: Installing Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Installing dependencies
        working-directory: chancy/plugins/api/ui
        run: npm install

      - name: Building UI
        working-directory: chancy/plugins/api/ui
        run: npm run build

  build:
    name: Running tests.

    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    env:
      OS: ubuntu-latest
      PYTHON: ${{ matrix.python-version }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: localtest
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8190:5432

    steps:
    - uses: actions/checkout@v4.1.6

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.1.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installing uv
      run: pip install uv

    - name: Installing dependencies (Python)
      run: uv sync --all-extras

    - name: Running tests
      run: |
        uv run pytest -s -vvvvv --cov=chancy --cov-report=xml

    - name: Uploading coverage
      uses: codecov/codecov-action@v4
      with:
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        flags: unittests
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
        slug: TkTech/chancy
        
    - name: Installing dependencies (Docs)
      run: sudo apt-get install graphviz

    - name: Building docs
      run: |
          cd docs && uv run make clean html