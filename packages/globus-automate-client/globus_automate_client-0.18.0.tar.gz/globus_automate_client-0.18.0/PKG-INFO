Metadata-Version: 2.1
Name: globus-automate-client
Version: 0.18.0
Summary: Client for the Globus Flows service
License: Apache-2.0
Keywords: globus,flows,automation,workflow,action_provider
Author: Jake Lewis
Author-email: jake@globus.org
Requires-Python: >=3.9
Classifier: Development Status :: 7 - Inactive
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: PyYAML (>=6.0,<7.0)
Requires-Dist: arrow (>=1.1,<2.0)
Requires-Dist: globus-sdk (>=3.1,<4.0)
Requires-Dist: graphviz (>=0.12,<0.13)
Requires-Dist: jsonschema (>=3.2,<4.0)
Requires-Dist: rich (>=13.9,<14.0)
Requires-Dist: typer[all] (>=0.4,<0.5)
Requires-Dist: typing-extensions (>=4.1,<5.0)
Description-Content-Type: text/x-rst

..  warning::

    The code in this repository is no longer supported.


Globus Automate Client
======================

This SDK provides a CLI and a convenient Pythonic interface to the Globus
Automate suite of services.

Basic Usage
-----------

Install with these commands:

..  code-block:: shell

    python -m pip install --upgrade pip setuptools wheel
    python -m pip install globus-automate-client


You can then import Globus Automate client classes and other helpers from
``globus_automate_client``. For example:

.. code-block:: python

    from globus_automate_client import create_action_client

    ac = create_action_client("https://actions.globus.org/hello_world")

    # Launch an Action and check its results
    resp = ac.run({"echo_string": "Hello from SDK"})
    assert resp.data["status"] == "SUCCEEDED"
    print(resp.data)

You can also use the CLI interface to interact with Automate services. For
example:

.. code-block:: BASH

    globus-automate action introspect --action-url https://actions.globus.org/hello_world

Testing, Development, and Contributing
--------------------------------------

Go to the
`CONTRIBUTING <https://github.com/globus/globus-automate-client/blob/main/CONTRIBUTING.adoc>`_
guide for detail.

Links
-----
| Full Documentation: https://globus-automate-client.readthedocs.io
| Source Code: https://github.com/globus/globus-automate-client
| Release History + Changelog: https://github.com/globus/globus-automate-client/releases

