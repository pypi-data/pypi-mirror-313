# Note there is a space at the end of the next line.
#DISBATCH PREFIX cd dbTestOutputDir ; 
#DISBATCH SUFFIX  &>> ${DISBATCH_NAMETASKS}_engine_${DISBATCH_ENGINE_RANK}.log
#DISBATCH PERENGINE START ( echo -n "perengine start on " ; hostname ; date ; sleep 10 ; date )
#DISBATCH PERENGINE STOP ( echo -n "perengine stop on " ; hostname ; date ; sleep 10 ; date )


#DISBATCH SUFFIX  &> ${DISBATCH_NAMETASKS}_task_${DISBATCH_TASKID}.log
# parentheses are important in this example so that all output is
# collected and captured by the redirection.
( echo "13 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "14 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "15 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "16 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "17 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "18 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "19 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "20 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "21 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "22 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "23 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "24 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "25 running on" $(hostname) ; date ; sleep 10 ; date ; )

# generate non-zero return code
( echo "26 running on" $(hostname) ; date ; sleep 10 ; date ; exit 13 )

( echo "27 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "28 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "29 running on" $(hostname) ; date ; sleep 10 ; date ; )
#DISBATCH BARRIER
#DISBATCH BARRIER mykey
#DISBATCH BARRIER
( echo "33 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "34 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "35 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "36 running on" $(hostname) ; date ; sleep 10 ; date ; )
( echo "37 running on" $(hostname) ; date ; sleep 10 ; date ; )

# leak some output
( echo "38 running on" $(hostname) ; date ; sleep 10 ; date ; ) ; echo 'missed some output'

# singleton repeat
#DISBATCH SUFFIX  &> ${DISBATCH_NAMETASKS}_task_${DISBATCH_TASKID}_rx_${DISBATCH_REPEAT_INDEX}.log
#DISBATCH REPEAT 1 start 39 ( echo "$DISBATCH_REPEAT_INDEX running on" $(hostname) ; date ; sleep 10 ; date ; )

# empty repeat
#DISBATCH REPEAT 0 start 1

# use zero padding for env variables in file name.
#DISBATCH BARRIER
#DISBATCH SUFFIX ( echo "${DISBATCH_REPEAT_INDEX} running on" $(hostname) ; echo "Zero-padded stream index: ${DISBATCH_STREAM_INDEX_ZP}" ; date ; sleep 10 ; date ; ) &> ${DISBATCH_NAMETASKS}_task_${DISBATCH_TASKID_ZP}_rx_${DISBATCH_REPEAT_INDEX_ZP}.log
#DISBATCH REPEAT 7 start 40

# fail two in repeat
#DISBATCH SUFFIX  &> ${DISBATCH_NAMETASKS}_task_${DISBATCH_TASKID}_rx_${DISBATCH_REPEAT_INDEX}.log
#DISBATCH REPEAT 3 start 50 ( echo "$DISBATCH_REPEAT_INDEX running on" $(hostname) ; date ; sleep 10 ; date ; [[ $DISBATCH_REPEAT_INDEX -eq 51 ]] )

#DISBATCH BARRIER
#DISBATCH SUFFIX 
# All engines are idle at this point. Running one last task should trigger retirement(s) of all but one engine.
( echo "55 running on" $(hostname) ; date ; sleep 10 ; date ; ) &> ${DISBATCH_NAMETASKS}_task_${DISBATCH_TASKID}.log
