# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.provider_dto import ProviderDto


class TestProviderDto(unittest.TestCase):
    """ProviderDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProviderDto:
        """Test ProviderDto
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ProviderDto`
        """
        model = ProviderDto()
        if include_optional:
            return ProviderDto(
                id = 'kiln',
                provider_name = 'Kiln',
                validators = [{"chainDescriptor":"SOL","feePercent":5},{"chainDescriptor":"ETH","feePercent":7}],
                icon_url = 'https://static.fireblocks.io/staking/validators/kiln_console.png',
                terms_of_service_url = 'https://www.kiln.fi/terms-and-conditions-for-fireblocks-customers',
                is_terms_of_service_approved = True
            )
        else:
            return ProviderDto(
                id = 'kiln',
                provider_name = 'Kiln',
                validators = [{"chainDescriptor":"SOL","feePercent":5},{"chainDescriptor":"ETH","feePercent":7}],
                icon_url = 'https://static.fireblocks.io/staking/validators/kiln_console.png',
                terms_of_service_url = 'https://www.kiln.fi/terms-and-conditions-for-fireblocks-customers',
                is_terms_of_service_approved = True,
        )
        """

    def testProviderDto(self):
        """Test ProviderDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
