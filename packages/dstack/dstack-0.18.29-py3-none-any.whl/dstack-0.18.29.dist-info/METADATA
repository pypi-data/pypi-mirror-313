Metadata-Version: 2.1
Name: dstack
Version: 0.18.29
Summary: dstack is an open-source orchestration engine for running AI workloads on any cloud or on-premises.
Home-page: https://dstack.ai
Author: Andrey Cheptsov
Author-email: andrey@dstack.ai
Project-URL: Source, https://github.com/dstackai/dstack
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: pyyaml
Requires-Dist: requests
Requires-Dist: typing-extensions>=4.0.0
Requires-Dist: cryptography
Requires-Dist: packaging
Requires-Dist: python-dateutil
Requires-Dist: gitpython
Requires-Dist: jsonschema
Requires-Dist: paramiko>=3.2.0
Requires-Dist: cursor
Requires-Dist: rich
Requires-Dist: rich-argparse
Requires-Dist: tqdm
Requires-Dist: simple-term-menu
Requires-Dist: fastapi
Requires-Dist: starlette>=0.26.0
Requires-Dist: uvicorn
Requires-Dist: pydantic<2.0.0,>=1.10.10
Requires-Dist: pydantic-duality>=1.2.4
Requires-Dist: sqlalchemy[asyncio]>=2.0.0
Requires-Dist: sqlalchemy-utils>=0.40.0
Requires-Dist: alembic>=1.10.2
Requires-Dist: apscheduler<4
Requires-Dist: aiosqlite
Requires-Dist: aiohttp
Requires-Dist: websocket-client
Requires-Dist: watchfiles
Requires-Dist: python-multipart>=0.0.16
Requires-Dist: filelock
Requires-Dist: docker>=6.0.0
Requires-Dist: python-dxf==12.1.0
Requires-Dist: cachetools
Requires-Dist: dnspython
Requires-Dist: grpcio>=1.50
Requires-Dist: gpuhunt<0.1.0,>=0.0.16
Requires-Dist: sentry-sdk[fastapi]
Requires-Dist: httpx
Requires-Dist: aiorwlock
Requires-Dist: python-json-logger
Requires-Dist: alembic-postgresql-enum
Requires-Dist: asyncpg
Requires-Dist: jinja2
Requires-Dist: psutil
Provides-Extra: all
Requires-Dist: boto3; extra == "all"
Requires-Dist: botocore; extra == "all"
Requires-Dist: azure-identity>=1.12.0; extra == "all"
Requires-Dist: azure-mgmt-subscription>=3.1.1; extra == "all"
Requires-Dist: azure-mgmt-compute>=29.1.0; extra == "all"
Requires-Dist: azure-mgmt-network<28.0.0,>=23.0.0; extra == "all"
Requires-Dist: azure-mgmt-resource>=22.0.0; extra == "all"
Requires-Dist: azure-mgmt-authorization>=3.0.0; extra == "all"
Requires-Dist: google-auth>=2.3.0; extra == "all"
Requires-Dist: google-cloud-storage>=2.0.0; extra == "all"
Requires-Dist: google-cloud-compute>=1.5.0; extra == "all"
Requires-Dist: google-cloud-logging>=2.0.0; extra == "all"
Requires-Dist: google-api-python-client>=2.80.0; extra == "all"
Requires-Dist: google-cloud-billing>=1.11.0; extra == "all"
Requires-Dist: google-cloud-tpu>=1.18.3; extra == "all"
Requires-Dist: datacrunch; extra == "all"
Requires-Dist: kubernetes; extra == "all"
Requires-Dist: oci; extra == "all"
Provides-Extra: aws
Requires-Dist: boto3; extra == "aws"
Requires-Dist: botocore; extra == "aws"
Provides-Extra: azure
Requires-Dist: azure-identity>=1.12.0; extra == "azure"
Requires-Dist: azure-mgmt-subscription>=3.1.1; extra == "azure"
Requires-Dist: azure-mgmt-compute>=29.1.0; extra == "azure"
Requires-Dist: azure-mgmt-network<28.0.0,>=23.0.0; extra == "azure"
Requires-Dist: azure-mgmt-resource>=22.0.0; extra == "azure"
Requires-Dist: azure-mgmt-authorization>=3.0.0; extra == "azure"
Provides-Extra: datacrunch
Requires-Dist: datacrunch; extra == "datacrunch"
Provides-Extra: gcp
Requires-Dist: google-auth>=2.3.0; extra == "gcp"
Requires-Dist: google-cloud-storage>=2.0.0; extra == "gcp"
Requires-Dist: google-cloud-compute>=1.5.0; extra == "gcp"
Requires-Dist: google-cloud-logging>=2.0.0; extra == "gcp"
Requires-Dist: google-api-python-client>=2.80.0; extra == "gcp"
Requires-Dist: google-cloud-billing>=1.11.0; extra == "gcp"
Requires-Dist: google-cloud-tpu>=1.18.3; extra == "gcp"
Provides-Extra: kubernetes
Requires-Dist: kubernetes; extra == "kubernetes"
Provides-Extra: lambda
Requires-Dist: boto3; extra == "lambda"
Requires-Dist: botocore; extra == "lambda"
Provides-Extra: oci
Requires-Dist: oci; extra == "oci"

<div style="text-align: center;">
<h2>
  <a target="_blank" href="https://dstack.ai">
    <img alt="dstack" src="https://raw.githubusercontent.com/dstackai/dstack/master/docs/assets/images/dstack-logo.svg" width="350px"/>
  </a>
</h2>

[![Last commit](https://img.shields.io/github/last-commit/dstackai/dstack?style=flat-square)](https://github.com/dstackai/dstack/commits/)
[![PyPI - License](https://img.shields.io/pypi/l/dstack?style=flat-square&color=blue)](https://github.com/dstackai/dstack/blob/master/LICENSE.md)
[![Discord](https://dcbadge.vercel.app/api/server/u8SmfwPpMd?style=flat-square)](https://discord.gg/u8SmfwPpMd)

</div>

`dstack` is a streamlined alternative to Kubernetes and Slurm, specifically designed for AI. It simplifies container orchestration
for AI workloads both in the cloud and on-prem, speeding up the development, training, and deployment of AI models.

`dstack` is easy to use with any cloud provider as well as on-prem servers.

#### Accelerators

`dstack` supports `NVIDIA GPU`, `AMD GPU`, and `Google Cloud TPU` out of the box.

## Major news âœ¨

- [2024/10] [dstack 0.18.17: on-prem AMD GPUs, AWS EFA, and more](https://github.com/dstackai/dstack/releases/tag/0.18.17)
- [2024/08] [dstack 0.18.11: AMD, encryption, and more](https://github.com/dstackai/dstack/releases/tag/0.18.11)
- [2024/08] [dstack 0.18.10: Control plane UI](https://github.com/dstackai/dstack/releases/tag/0.18.10)
- [2024/07] [dstack 0.18.7: Fleets, RunPod volumes, dstack apply, and more](https://github.com/dstackai/dstack/releases/tag/0.18.7)
- [2024/05] [dstack 0.18.4: Google Cloud TPU, and more](https://github.com/dstackai/dstack/releases/tag/0.18.4)
- [2024/05] [dstack 0.18.2: On-prem clusters, private subnets, and more](https://github.com/dstackai/dstack/releases/tag/0.18.2)

## Installation

> Before using `dstack` through CLI or API, set up a `dstack` server. If you already have a running `dstack` server, you only need to [set up the CLI](#set-up-the-cli).

### (Optional) Configure backends

To use `dstack` with your own cloud accounts, create the `~/.dstack/server/config.yml` file and 
[configure backends](https://dstack.ai/docs/reference/server/config.yml). Alternatively, you can configure backends via the control plane UI after you start the server.

You can skip backends configuration if you intend to run containers  only on your on-prem servers. Use [SSH fleets](https://dstack.ai/docs/concepts/fleets#ssh-fleets) for that.

### Start the server

Once the backends are configured, proceed to start the server:

<div class="termy">

```shell
$ pip install "dstack[all]" -U
$ dstack server

Applying ~/.dstack/server/config.yml...

The admin token is "bbae0f28-d3dd-4820-bf61-8f4bb40815da"
The server is running at http://127.0.0.1:3000/
```

</div>

For more details on server configuration options, see the
[server deployment guide](https://dstack.ai/docs/guides/server-deployment).

### Set up the CLI

To point the CLI to the `dstack` server, configure it
with the server address, user token, and project name:

```shell
$ pip install dstack
$ dstack config --url http://127.0.0.1:3000 \
    --project main \
    --token bbae0f28-d3dd-4820-bf61-8f4bb40815da
    
Configuration is updated at ~/.dstack/config.yml
```

## How does it work?

### 1. Define configurations

`dstack` supports the following configurations:
   
* [Dev environments](https://dstack.ai/docs/dev-environments) &mdash; for interactive development using a desktop IDE
* [Tasks](https://dstack.ai/docs/tasks) &mdash; for scheduling jobs (incl. distributed jobs) or running web apps
* [Services](https://dstack.ai/docs/services) &mdash; for deployment of models and web apps (with auto-scaling and authorization)
* [Fleets](https://dstack.ai/docs/fleets) &mdash; for managing cloud and on-prem clusters
* [Volumes](https://dstack.ai/docs/concepts/volumes) &mdash; for managing persisted volumes
* [Gateways](https://dstack.ai/docs/concepts/gateways) &mdash; for configuring the ingress traffic and public endpoints

Configuration can be defined as YAML files within your repo.

### 2. Apply configurations

Apply the configuration either via the `dstack apply` CLI command or through a programmatic API.

`dstack` automatically manages provisioning, job queuing, auto-scaling, networking, volumes, run failures,
out-of-capacity errors, port-forwarding, and more &mdash; across clouds and on-prem clusters.

## More information

For additional information and examples, see the following links:

* [Docs](https://dstack.ai/docs)
* [Examples](https://dstack.ai/examples)
* [Providers](https://dstack.ai/providers)
* [Discord](https://discord.gg/u8SmfwPpMd)

## Contributing

You're very welcome to contribute to `dstack`. 
Learn more about how to contribute to the project at [CONTRIBUTING.md](CONTRIBUTING.md).

## License

[Mozilla Public License 2.0](LICENSE.md)
