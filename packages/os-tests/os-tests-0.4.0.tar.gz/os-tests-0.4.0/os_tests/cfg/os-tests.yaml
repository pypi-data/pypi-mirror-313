# the default setting can be overwriten in platform/params profiles or command line options
code_repo: "https://github.com/virt-s1/os-tests"
# save debug log to this dir
results_dir: "/tmp/os_tests_result"
# max boot up time in seconds
max_boot_time: 40
# pkg_reinstall to determine install it again or not when pkg exists already, set it to True to install latest version in each run
pkg_reinstall: False
# public server for ping connection test
ping_server: 8.8.8.8
# max disk utils accepted, used in test_iostat_x
disk_utils: 30
# max cpu utils accepted, used in test_check_cpuusage_exception
cpu_utils: 20
# max mem utils accepted, used in test_check_memusage_exception
mem_utils: 30
# if you want to run os-tests in master-slave mode, please specify below options.
# All tests are running in slave node including some reboot operations.
# remote_nodes specify remote ip
remote_nodes: []
# default node to run the test on, it is the first node in remote_nodes
remote_node: 
# open port for ssh connection
remote_port: 22
# remote_user: user to login remote
remote_user: ec2-user
# ssh key file location for remote access
remote_keyfile: 
# or password for remote access
remote_password:
# username for RHSM register
subscription_username:
# password for RHSM register
subscription_password:
# enable case result auto check, it calls the baseline_log.json data.
enable_auto_result_check: True
# specify the network bandwidth manually, it is optional, set to 100 which is max for most senarios
net_bandwidth:
# list supported cases without real run
is_listcase: False
# filter case by name and run it in specified order, add --strict for matching exactly
pattern:
# skip cases
skip_pattern:
# match exactly if pattern or skip_pattern specified
is_strict: False
# verify or show case doc only
verifydoc: False
# dump doc to yaml file
dumpdoc: False
# filter case from casedoc: "filter by 'case_name'(default),'case_tag','case_file','component','bugzilla_id',
#                        'is_customer_case','testplan','maintainer','description','key_steps',
#                        'expect_result','debug_want'"
filter_by: 'case_name'
# specify azure to run azure image check only
image:
# params in yaml file
params_profile: 
# specify platform profile if enable os-tests provison vms self, [alicloud, aws, azure, gcp, openstack, libvirt, nutanix, openshift, openstack]
# the file is not required if you put content in params_profile
platform_profile: 
# debug purpose, skip cleanup phase at exit, do not use it in normal test
no_cleanup: False
# specify it if pkg/repo url is internal only, format IP:PORT
proxy_url: 
# fips_enable,fips_disable,debugkernel_enable,debugkernel_disable,commands or a bash file 
# before running into case steps,can add timeout:XXX if default 600 is not enough for operation done
case_setup:
# collect_kmemleak, other args are similar as case_setup, 
# usually for collecting temporary debug information, can add timeout:XXX if default 600 is not enough for operation done
case_post:
# specify it when using the internal repos for dnf update, can pass more seperated by ","
dnf_repo_url:
# specify it when leapp upgrade via custom repo, can pass more seperated by ","
leapp_target_repo_url:
# add more information about test run
comment: ""
###################################
# below options are params for building bootc system images
###################################
# specify the disk image format to build disk image for image mode testing, e.g., 9.4
disk_image_format: 
# specify the path of container file
containerfile:
# specify the base rhel bootc container image repo
bootc_base_image_url:
# specify the login data for quay.io, e.g., username,password,quay.io
quay_io_data:
# specify the login data for bootc repo, e.g., e.g., username,password,bootc io name
bootc_io_data:
# specify the previous bootc_base_image_digest
bootc_base_image_digest:
# specify the config_toml for login info of the custom container disk image
config_toml_file:
# specify login info of the custom container disk image
config_toml_info: