cozy.__main__
=============

.. py:module:: cozy.__main__


Classes
-------

.. autoapisummary::

   cozy.__main__.Results
   cozy.__main__.Stage
   cozy.__main__.Wizard


Module Contents
---------------

.. py:class:: Results

   .. py:method:: to_string()


.. py:class:: Stage

   Bases: :py:obj:`enum.Enum`


   Generic enumeration.

   Derive from this class to define new enumerations.


   .. py:attribute:: confirm_start
      :value: 1



   .. py:attribute:: request_script_name
      :value: 2



   .. py:attribute:: confirm_script_clobber
      :value: 3



   .. py:attribute:: request_prepatched
      :value: 4



   .. py:attribute:: request_postpatched
      :value: 5



   .. py:attribute:: request_function_name
      :value: 6



   .. py:attribute:: request_signature
      :value: 7



   .. py:attribute:: request_concolic
      :value: 8



   .. py:attribute:: request_concolic_complete
      :value: 9



   .. py:attribute:: request_hooks
      :value: 10



   .. py:attribute:: request_textual_report
      :value: 11



   .. py:attribute:: request_visualization
      :value: 12



   .. py:attribute:: request_dump
      :value: 13



   .. py:attribute:: request_dump_name
      :value: 14



   .. py:attribute:: complete
      :value: 15



.. py:class:: Wizard

   Bases: :py:obj:`textual.app.App`


   The base class for Textual Applications.

   Create an instance of an app.

   Args:
       driver_class: Driver class or `None` to auto-detect.
           This will be used by some Textual tools.
       css_path: Path to CSS or `None` to use the `CSS_PATH` class variable.
           To load multiple CSS files, pass a list of strings or paths which
           will be loaded in order.
       watch_css: Reload CSS if the files changed. This is set automatically if
           you are using `textual run` with the `dev` switch.

   Raises:
       CssPathError: When the supplied CSS path(s) are an unexpected type.


   .. py:attribute:: CSS
      :value: Multiline-String

      .. raw:: html

         <details><summary>Show Value</summary>

      .. code-block:: python

         """
             Screen {
                 padding:1
             }
             """

      .. raw:: html

         </details>




   .. py:method:: compose() -> textual.app.ComposeResult

      Yield child widgets for a container.

      This method should be implemented in a subclass.



   .. py:method:: ask_yes_no(text)
      :async:



   .. py:method:: ask_string(text, placeholder='')
      :async:



   .. py:method:: ask_file(text)
      :async:



   .. py:method:: set_stage(stage)
      :async:



   .. py:method:: set_confirm_start()
      :async:



   .. py:method:: handle_confirm_start(message)
      :async:



   .. py:method:: set_confirm_script_clobber()
      :async:



   .. py:method:: handle_confirm_script_clobber(message)
      :async:



   .. py:method:: set_request_script_name()
      :async:



   .. py:method:: handle_request_script_name(message)
      :async:



   .. py:method:: set_request_prepatched()
      :async:



   .. py:method:: handle_request_prepatched(message)
      :async:



   .. py:method:: set_request_postpatched()
      :async:



   .. py:method:: handle_request_postpatched(message)
      :async:



   .. py:method:: set_request_function_name()
      :async:



   .. py:method:: handle_request_function_name(message)
      :async:



   .. py:method:: set_request_signature()
      :async:



   .. py:method:: handle_request_signature(message)
      :async:



   .. py:method:: set_request_hooks()
      :async:



   .. py:method:: handle_request_hooks(message)
      :async:



   .. py:method:: set_request_concolic()
      :async:



   .. py:method:: handle_request_concolic(message)
      :async:



   .. py:method:: set_request_concolic_complete()
      :async:



   .. py:method:: handle_request_concolic_complete(message)
      :async:



   .. py:method:: set_request_textual_report()
      :async:



   .. py:method:: handle_request_textual_report(message)
      :async:



   .. py:method:: set_request_dump()
      :async:



   .. py:method:: handle_request_dump(message)
      :async:



   .. py:method:: set_request_dump_name()
      :async:



   .. py:method:: handle_request_dump_name(message)
      :async:



   .. py:method:: set_request_visualization()
      :async:



   .. py:method:: handle_request_visualization(message)
      :async:



   .. py:method:: complete()
      :async:



   .. py:method:: on_input_submitted(message: textual.widgets.Input.Submitted) -> None
      :async:



   .. py:method:: on_option_list_option_selected(message: textual.widgets.OptionList.OptionSelected) -> None
      :async:



   .. py:method:: on_directory_tree_file_selected(message: textual.widgets.DirectoryTree.FileSelected) -> None
      :async:



