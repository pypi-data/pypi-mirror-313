[tool.poetry]
name = "dataforge-ds"
version = "0.2.0"
description = "CLI tool for managing Python project templates."
authors = ["Danijel S."]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pyspark = "^3.3.1"
click = "^8.1.3"
copier = "^6.1.0"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
flake8 = "^7.1.1"
flake8-black = "^0.3.6"
mypy = "^1.11.1"
isort = "^5.13.2"
pre-commit = "^3.8.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
databricks-sdk = "^0.30.0"
autoflake = "^2.1.0"
sphinx = "^8.1.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
builtins = ["dbutils", "display", "displayHTML", "spark"]
line-length = 120

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.flake8]
exclude = ".venv,*.pyc,__pycache__"
max-line-length = 150
builtins = ["display", "dbutils", "spark", "displayHTML"]
ignore = ["E101", "E501", "W191", "E266"]

# CLI tool entry point
[tool.poetry.scripts]
dataforge = "dataforge.cli:app"

# Optional script for running pre-commit checks
pre-commit-run = "pre_commit.main:main"
pre-commit-run-all = "pre_commit:main"
commit-msg-check = "scripts.commit_msg_check:main"
