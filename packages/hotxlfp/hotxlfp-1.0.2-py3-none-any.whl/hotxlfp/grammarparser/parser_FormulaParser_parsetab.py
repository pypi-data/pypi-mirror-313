
# parser_FormulaParser_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALleftLESSEQGREATEREQNOTEQUALleftGREATERLESSleftPLUSMINUSleftMULTDIVleftCARETleftAMPleftPERCENTleftUMINUSABSOLUTE_CELL AMP APOSTROPHE BACKSLASH CARET COLON COMMA DECIMAL DIV EQUAL EXCLAMATION FUNCTION GREATER GREATEREQ HASH LBRACKET LESS LESSEQ LPAREN MINUS MIXED_CELL MULT NOTEQUAL NUMBER PERCENT PLUS QUOTATION RBRACKET RELATIVE_CELL RPAREN SEMICOLON SINGLESPACE STRING VARIABLE WHITESPACE XLERRORexpressions : expression\nexpression : expression PLUS expression\n          | expression MINUS expression\n          | expression MULT expression\n          | expression DIV expression\n          | expression AMP expression\n\nexpression : expression GREATER expression\n           | expression LESS expression\n           | expression GREATEREQ expression\n           | expression LESSEQ expression\n           | expression EQUAL expression\n           | expression NOTEQUAL expression\nexpression : MINUS expression %prec UMINUS\nexpression : NUMBER\n           | DECIMAL NUMBER\n           | NUMBER DECIMAL NUMBER\n           | NUMBER CARET NUMBER\n           | NUMBER PERCENT\n\nexpression : STRING\n\nexpression : FUNCTION LPAREN RPAREN\n\nexpression : FUNCTION LPAREN expseqcomma RPAREN\n           | FUNCTION LPAREN expseqsemicolon RPAREN\n           | FUNCTION LPAREN expseqbackslash RPAREN\n\nexpression : array\n\narray : LBRACKET expseqsemicolon RBRACKET\n      | LBRACKET expseqcomma RBRACKET\n      | LBRACKET expseqbackslash RBRACKET\n\nexpseqsemicolon : expression\n                | SEMICOLON SEMICOLON\n                | SEMICOLON expseqsemicolon\n                | expseqsemicolon SEMICOLON\n                | expseqsemicolon SEMICOLON expression\n                | expseqsemicolon SEMICOLON SEMICOLON expression\n                | expseqcomma SEMICOLON expseqcomma\n                | expseqbackslash SEMICOLON expseqbackslash\n\nexpseqcomma : expression\n            | COMMA COMMA\n            | COMMA expseqcomma\n            | expseqcomma COMMA\n            | expseqcomma COMMA expression\n            | expseqcomma COMMA COMMA expression\n\nexpseqbackslash : expression\n                | BACKSLASH BACKSLASH\n                | BACKSLASH expseqbackslash\n                | expseqbackslash BACKSLASH\n                | expseqbackslash BACKSLASH expression\n                | expseqbackslash BACKSLASH BACKSLASH expression\n\nexpression : XLERROR\n\nexpression : LPAREN expression RPAREN\n\nexpression : variable_sequence\n\nvariable_sequence : VARIABLE\n\nvariable_sequence : variable_sequence DECIMAL VARIABLE\n\nexpression :  cell\n\ncell : ABSOLUTE_CELL\n     | RELATIVE_CELL\n     | MIXED_CELL\n     | ABSOLUTE_CELL COLON ABSOLUTE_CELL\n     | ABSOLUTE_CELL COLON RELATIVE_CELL\n     | ABSOLUTE_CELL COLON MIXED_CELL\n     | RELATIVE_CELL COLON ABSOLUTE_CELL\n     | RELATIVE_CELL COLON RELATIVE_CELL\n     | RELATIVE_CELL COLON MIXED_CELL\n     | MIXED_CELL COLON ABSOLUTE_CELL\n     | MIXED_CELL COLON RELATIVE_CELL\n     | MIXED_CELL COLON MIXED_CELL\n'
    
_lr_action_items = {'MINUS':([0,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,34,35,40,41,42,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,77,80,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,104,105,106,107,108,],[3,19,3,-14,-19,3,-24,-48,-50,-53,3,-51,-54,-55,-56,3,3,3,3,3,3,3,3,3,3,3,-13,-18,-15,3,19,19,3,3,3,-2,-3,-4,-5,-6,19,19,19,19,19,19,-16,-17,-20,19,-49,-52,-25,3,-26,3,3,-27,3,3,3,19,3,19,3,19,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,3,19,3,19,3,19,19,19,19,]),'NUMBER':([0,3,5,8,13,18,19,20,21,22,23,24,25,26,27,28,30,31,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[4,4,33,4,4,4,4,4,4,4,4,4,4,4,4,4,58,59,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'DECIMAL':([0,3,4,8,11,13,14,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,66,68,70,71,73,74,75,80,83,98,101,104,],[5,5,30,5,36,5,-51,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-52,5,5,5,5,5,5,5,5,5,5,5,]),'STRING':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FUNCTION':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'XLERROR':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LPAREN':([0,3,7,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[8,8,34,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'LBRACKET':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'VARIABLE':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,36,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,66,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'ABSOLUTE_CELL':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,44,45,46,68,70,71,73,74,75,80,83,98,101,104,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,86,90,93,15,15,15,15,15,15,15,15,15,15,15,]),'RELATIVE_CELL':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,44,45,46,68,70,71,73,74,75,80,83,98,101,104,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,87,89,94,16,16,16,16,16,16,16,16,16,16,16,]),'MIXED_CELL':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,44,45,46,68,70,71,73,74,75,80,83,98,101,104,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,88,91,92,17,17,17,17,17,17,17,17,17,17,17,]),'$end':([1,2,4,6,9,10,11,12,14,15,16,17,29,32,33,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,69,72,86,87,88,89,90,91,92,93,94,95,96,97,],[0,-1,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-20,-49,-52,-25,-26,-27,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,]),'PLUS':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[18,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,18,18,-2,-3,-4,-5,-6,18,18,18,18,18,18,-16,-17,-20,18,-49,-52,-25,-26,-27,18,18,18,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,18,18,18,18,18,18,]),'MULT':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[20,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,20,20,20,20,-4,-5,-6,20,20,20,20,20,20,-16,-17,-20,20,-49,-52,-25,-26,-27,20,20,20,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,20,20,20,20,20,20,]),'DIV':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[21,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,21,21,21,21,-4,-5,-6,21,21,21,21,21,21,-16,-17,-20,21,-49,-52,-25,-26,-27,21,21,21,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,21,21,21,21,21,21,]),'AMP':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[22,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,22,22,22,22,22,22,-6,22,22,22,22,22,22,-16,-17,-20,22,-49,-52,-25,-26,-27,22,22,22,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,22,22,22,22,22,22,]),'GREATER':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[23,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,23,23,-2,-3,-4,-5,-6,-7,-8,23,23,23,23,-16,-17,-20,23,-49,-52,-25,-26,-27,23,23,23,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,23,23,23,23,23,23,]),'LESS':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[24,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,24,24,-2,-3,-4,-5,-6,-7,-8,24,24,24,24,-16,-17,-20,24,-49,-52,-25,-26,-27,24,24,24,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,24,24,24,24,24,24,]),'GREATEREQ':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[25,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,25,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,25,-12,-16,-17,-20,25,-49,-52,-25,-26,-27,25,25,25,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,25,25,25,25,25,25,]),'LESSEQ':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[26,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,26,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,26,-12,-16,-17,-20,26,-49,-52,-25,-26,-27,26,26,26,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,26,26,26,26,26,26,]),'EQUAL':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[27,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,27,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-20,27,-49,-52,-25,-26,-27,27,27,27,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,27,27,27,27,27,27,]),'NOTEQUAL':([2,4,6,9,10,11,12,14,15,16,17,29,32,33,35,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,72,77,82,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,105,106,107,108,],[28,-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,28,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,28,-12,-16,-17,-20,28,-49,-52,-25,-26,-27,28,28,28,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,28,28,28,28,28,28,]),'RPAREN':([4,6,9,10,11,12,14,15,16,17,29,32,33,34,35,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,103,105,106,107,108,],[-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,60,65,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-20,95,96,97,-28,-49,-52,-25,-31,-26,-39,-27,-45,-29,-30,-28,-37,-38,-36,-43,-44,-42,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,-32,-34,-40,-35,-46,-33,-41,-47,]),'RBRACKET':([4,6,9,10,11,12,14,15,16,17,29,32,33,37,38,39,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,68,69,71,72,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,103,105,106,107,108,],[-14,-19,-24,-48,-50,-53,-51,-54,-55,-56,-13,-18,-15,67,69,72,-28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-20,-49,-52,-25,-31,-26,-39,-27,-45,-29,-30,-28,-37,-38,-36,-43,-44,-42,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,-32,-34,-40,-35,-46,-33,-41,-47,]),'SEMICOLON':([4,6,9,10,11,12,13,14,15,16,17,29,32,33,34,37,38,39,40,41,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,103,105,106,107,108,],[-14,-19,-24,-48,-50,-53,41,-51,-54,-55,-56,-13,-18,-15,41,68,70,73,-28,75,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-20,70,68,73,-28,-49,-52,-25,98,-26,-39,-27,-45,75,68,-28,70,73,-37,-38,-36,-43,-44,-42,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,-32,-34,-40,-35,-46,-33,-41,-47,]),'COMMA':([4,6,9,10,11,12,13,14,15,16,17,29,32,33,34,38,40,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,69,70,71,72,75,77,78,80,81,82,86,87,88,89,90,91,92,93,94,95,96,97,100,102,107,],[-14,-19,-24,-48,-50,-53,42,-51,-54,-55,-56,-13,-18,-15,42,71,-36,42,80,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-20,71,-36,-49,-52,-25,-26,42,101,-27,42,-36,71,80,71,-36,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,71,-40,-41,]),'BACKSLASH':([4,6,9,10,11,12,13,14,15,16,17,29,32,33,34,39,40,41,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,66,67,69,72,73,74,75,77,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,105,108,],[-14,-19,-24,-48,-50,-53,43,-51,-54,-55,-56,-13,-18,-15,43,74,-42,43,83,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-20,74,-42,-49,-52,-25,-26,-27,43,104,43,-42,74,83,74,-42,-57,-58,-59,-61,-60,-62,-65,-63,-64,-21,-22,-23,74,-46,-47,]),'CARET':([4,],[31,]),'PERCENT':([4,],[32,]),'COLON':([15,16,17,],[44,45,46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions':([0,],[1,]),'expression':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[2,29,35,40,47,48,49,50,51,52,53,54,55,56,57,64,77,82,85,99,82,102,85,105,77,82,85,106,107,108,]),'array':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_sequence':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'cell':([0,3,8,13,18,19,20,21,22,23,24,25,26,27,28,34,41,42,43,68,70,71,73,74,75,80,83,98,101,104,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'expseqsemicolon':([13,34,41,75,],[37,62,76,76,]),'expseqcomma':([13,34,41,42,70,75,80,],[38,61,78,81,100,78,81,]),'expseqbackslash':([13,34,41,43,73,75,83,],[39,63,79,84,103,79,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',68),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic_operator','parser.py',73),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic_operator','parser.py',74),
  ('expression -> expression MULT expression','expression',3,'p_expression_arithmetic_operator','parser.py',75),
  ('expression -> expression DIV expression','expression',3,'p_expression_arithmetic_operator','parser.py',76),
  ('expression -> expression AMP expression','expression',3,'p_expression_arithmetic_operator','parser.py',77),
  ('expression -> expression GREATER expression','expression',3,'p_expression_logical_operator','parser.py',86),
  ('expression -> expression LESS expression','expression',3,'p_expression_logical_operator','parser.py',87),
  ('expression -> expression GREATEREQ expression','expression',3,'p_expression_logical_operator','parser.py',88),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_logical_operator','parser.py',89),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_logical_operator','parser.py',90),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_logical_operator','parser.py',91),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',96),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',101),
  ('expression -> DECIMAL NUMBER','expression',2,'p_expression_number','parser.py',102),
  ('expression -> NUMBER DECIMAL NUMBER','expression',3,'p_expression_number','parser.py',103),
  ('expression -> NUMBER CARET NUMBER','expression',3,'p_expression_number','parser.py',104),
  ('expression -> NUMBER PERCENT','expression',2,'p_expression_number','parser.py',105),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',120),
  ('expression -> FUNCTION LPAREN RPAREN','expression',3,'p_expression_function','parser.py',126),
  ('expression -> FUNCTION LPAREN expseqcomma RPAREN','expression',4,'p_expression_wargs','parser.py',132),
  ('expression -> FUNCTION LPAREN expseqsemicolon RPAREN','expression',4,'p_expression_wargs','parser.py',133),
  ('expression -> FUNCTION LPAREN expseqbackslash RPAREN','expression',4,'p_expression_wargs','parser.py',134),
  ('expression -> array','expression',1,'p_expression_array','parser.py',140),
  ('array -> LBRACKET expseqsemicolon RBRACKET','array',3,'p_array','parser.py',146),
  ('array -> LBRACKET expseqcomma RBRACKET','array',3,'p_array','parser.py',147),
  ('array -> LBRACKET expseqbackslash RBRACKET','array',3,'p_array','parser.py',148),
  ('expseqsemicolon -> expression','expseqsemicolon',1,'p_expseq_semicolon','parser.py',154),
  ('expseqsemicolon -> SEMICOLON SEMICOLON','expseqsemicolon',2,'p_expseq_semicolon','parser.py',155),
  ('expseqsemicolon -> SEMICOLON expseqsemicolon','expseqsemicolon',2,'p_expseq_semicolon','parser.py',156),
  ('expseqsemicolon -> expseqsemicolon SEMICOLON','expseqsemicolon',2,'p_expseq_semicolon','parser.py',157),
  ('expseqsemicolon -> expseqsemicolon SEMICOLON expression','expseqsemicolon',3,'p_expseq_semicolon','parser.py',158),
  ('expseqsemicolon -> expseqsemicolon SEMICOLON SEMICOLON expression','expseqsemicolon',4,'p_expseq_semicolon','parser.py',159),
  ('expseqsemicolon -> expseqcomma SEMICOLON expseqcomma','expseqsemicolon',3,'p_expseq_semicolon','parser.py',160),
  ('expseqsemicolon -> expseqbackslash SEMICOLON expseqbackslash','expseqsemicolon',3,'p_expseq_semicolon','parser.py',161),
  ('expseqcomma -> expression','expseqcomma',1,'p_expseq_comma','parser.py',183),
  ('expseqcomma -> COMMA COMMA','expseqcomma',2,'p_expseq_comma','parser.py',184),
  ('expseqcomma -> COMMA expseqcomma','expseqcomma',2,'p_expseq_comma','parser.py',185),
  ('expseqcomma -> expseqcomma COMMA','expseqcomma',2,'p_expseq_comma','parser.py',186),
  ('expseqcomma -> expseqcomma COMMA expression','expseqcomma',3,'p_expseq_comma','parser.py',187),
  ('expseqcomma -> expseqcomma COMMA COMMA expression','expseqcomma',4,'p_expseq_comma','parser.py',188),
  ('expseqbackslash -> expression','expseqbackslash',1,'p_expseq_backslash','parser.py',208),
  ('expseqbackslash -> BACKSLASH BACKSLASH','expseqbackslash',2,'p_expseq_backslash','parser.py',209),
  ('expseqbackslash -> BACKSLASH expseqbackslash','expseqbackslash',2,'p_expseq_backslash','parser.py',210),
  ('expseqbackslash -> expseqbackslash BACKSLASH','expseqbackslash',2,'p_expseq_backslash','parser.py',211),
  ('expseqbackslash -> expseqbackslash BACKSLASH expression','expseqbackslash',3,'p_expseq_backslash','parser.py',212),
  ('expseqbackslash -> expseqbackslash BACKSLASH BACKSLASH expression','expseqbackslash',4,'p_expseq_backslash','parser.py',213),
  ('expression -> XLERROR','expression',1,'p_xlerror','parser.py',232),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',244),
  ('expression -> variable_sequence','expression',1,'p_expression_varseq','parser.py',250),
  ('variable_sequence -> VARIABLE','variable_sequence',1,'p_variable','parser.py',256),
  ('variable_sequence -> variable_sequence DECIMAL VARIABLE','variable_sequence',3,'p_variable_seq','parser.py',262),
  ('expression -> cell','expression',1,'p_expression_cell','parser.py',269),
  ('cell -> ABSOLUTE_CELL','cell',1,'p_cell','parser.py',275),
  ('cell -> RELATIVE_CELL','cell',1,'p_cell','parser.py',276),
  ('cell -> MIXED_CELL','cell',1,'p_cell','parser.py',277),
  ('cell -> ABSOLUTE_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',278),
  ('cell -> ABSOLUTE_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',279),
  ('cell -> ABSOLUTE_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',280),
  ('cell -> RELATIVE_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',281),
  ('cell -> RELATIVE_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',282),
  ('cell -> RELATIVE_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',283),
  ('cell -> MIXED_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',284),
  ('cell -> MIXED_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',285),
  ('cell -> MIXED_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',286),
]
